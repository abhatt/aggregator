<?xml version="1.0" encoding="utf-8"?><entry xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>tag:blogger.com,1999:blog-4068183698747623113.post-4578743639151946736</id><link href="http://teachingintrotocs.blogspot.com/feeds/4578743639151946736/comments/default" rel="replies" type="application/atom+xml"/><link href="http://teachingintrotocs.blogspot.com/2012/06/one-triangulation-three-trees.html#comment-form" rel="replies" type="text/html"/><link href="http://www.blogger.com/feeds/4068183698747623113/posts/default/4578743639151946736" rel="edit" type="application/atom+xml"/><link href="http://www.blogger.com/feeds/4068183698747623113/posts/default/4578743639151946736" rel="self" type="application/atom+xml"/><link href="http://teachingintrotocs.blogspot.com/2012/06/one-triangulation-three-trees.html" rel="alternate" type="text/html"/><title>One triangulation = three trees</title><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">At AofA I saw a talk by Sarah Miracle who presented joint work with Dana Randall, Amanda Streib and Prasad Tetali, showing rapid mixing, for a planar triangulation with maximum degree 6, of a natural Monte Carlo Markov Chain to uniformly generate a random partition into three trees rooted at the 3 outer vertices. This reminded us of the following elementary but striking structural property of planar triangulations.   <p><b>Theorem</b>The internal edges of a planar triangulation can be partitioned into three trees that span all inner vertices and are rooted respectively at each of the three vertices incident to the outer face.  </p><p>The proof is elementary and algorithmic, by induction on the number of vertices.  </p><p>Algorithm <br/>If G is a single triangle,  <br/>Then we are done. <br/>Else <br/>  Find an edge {u,v} with u on the outer boundary, v internal, and exactly two paths of length 2 from u to v.  <br/>  Contract edge {u,v} into a vertex u', creating a contracted graph G'. <br/>  Recursively solve the problem for G', obtaining three trees, blue, white and red, where, say, the blue tree is rooted at u'. <br/>  Uncontract edge {u,v}, color it blue; other edges inherit the color of the corresponding edge of G'. <br/> </p><p>Analysis <br/>The only question is: does there always exist an edge {u,v} with the specified properties? The answer is elementary: For u, pick any of the three outer vertices. Let u1,u2,…,uk be the neighbors of u (u2 and uk are the other two outer vertices), and consider the cycle u1-u2-…-uk-u1. Any planar cycle on k vertices has at least two &quot;ears&quot; (vertices from which no chords originate), and only one of them can be u2 or uk, so for v we simply take the other ear.</p></div><div class="commentbar"><p/><span class="commentbutton" href="http://teachingintrotocs.blogspot.com/feeds/4578743639151946736/comments/default"/><a href="http://teachingintrotocs.blogspot.com/feeds/4578743639151946736/comments/default"><img class="commenticon" src="/images/feed-icon.png"/> Subscribe to comments</a><![CDATA[  | ]]><a href="http://teachingintrotocs.blogspot.com/2012/06/one-triangulation-three-trees.html#comment-form"><img class="commenticon" src="/images/post-icon.png"/> Post a comment</a></div></content><updated planet:format="June 22, 2012 03:14 PM">2012-06-22T15:14:00Z</updated><published planet:format="June 22, 2012 03:14 PM">2012-06-22T15:14:00Z</published><category scheme="http://www.blogger.com/atom/ns#" term="TCS"/><author><name>Claire Mathieu</name><email>noreply@blogger.com</email><uri>http://www.blogger.com/profile/10957755706440077623</uri></author><source><id>tag:blogger.com,1999:blog-4068183698747623113</id><category term="TCS"/><category term="Oops"/><category term="technology"/><author><name>Claire Mathieu</name><email>noreply@blogger.com</email><uri>http://www.blogger.com/profile/10957755706440077623</uri></author><link href="http://teachingintrotocs.blogspot.com/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml"/><link href="http://www.blogger.com/feeds/4068183698747623113/posts/default/-/TCS" rel="self" type="application/atom+xml"/><link href="http://teachingintrotocs.blogspot.com/search/label/TCS" rel="alternate" type="text/html"/><link href="http://pubsubhubbub.appspot.com/" rel="hub" type="text/html"/><title>A CS Professor's blog</title><updated planet:format="August 31, 2018 11:03 AM">2018-08-31T11:03:02Z</updated><planet:module>toc</planet:module><planet:format>atom10</planet:format><planet:http_etag>W/&quot;8089cd57e1113cac488458ecc6b57d2f5d63c2f2cb0051d1de6e12d23ed12d82&quot;</planet:http_etag><planet:http_last_modified>Fri, 31 Aug 2018 11:03:02 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:items_per_page>40</planet:items_per_page><planet:css-id>claire-mathieu</planet:css-id><planet:face>mathieu.jpeg</planet:face><planet:name>Claire Mathieu</planet:name><planet:filters>category.py?cats=tcs</planet:filters><planet:http_status>200</planet:http_status></source></entry>

