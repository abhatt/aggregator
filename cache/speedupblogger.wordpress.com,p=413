<?xml version="1.0" encoding="utf-8"?><entry xml:lang="en" xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>http://speedupblogger.wordpress.com/?p=413</id><link href="https://speedupblogger.wordpress.com/2014/10/02/do-optimal-proof-systems-exist-guest-post-by-olaf-beyersdorff/" rel="alternate" type="text/html"/><title>Do optimal proof systems exist? (guest post by Olaf Beyersdorff)</title><summary>This post is a survey on optimal proof systems. I will not cover any results in detail, but try to present the general picture of what is known and what to expect. A general proof system in the sense of Cook and Reckhow (1979) can be understood as a nondeterministic guess-and-verify algorithm. The question whether […]<div class="commentbar"><p/></div></summary><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>This post is a survey on optimal proof systems. I will not cover any results in detail, but try to present the general picture of what is known and what to expect.</p>
<p>A general proof system in the sense of Cook and Reckhow (1979) can be understood as a nondeterministic guess-and-verify algorithm. The question whether there exist optimal proof systems essentially asks whether there exists a best such verification procedure. For practical purposes, such an optimal proof system would be extremely useful, as both the search for good verification algorithms as well as the quest for lower bounds to the proof size could concentrate on the optimal system. Thus the following question is of great significance: Do there exist optimal proof systems for a given language <img alt="L" class="latex" src="https://s0.wp.com/latex.php?latex=L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="L"/>?</p>
<p>Formally, a proof system <img alt="P" class="latex" src="https://s0.wp.com/latex.php?latex=P&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="P"/> for <img alt="L" class="latex" src="https://s0.wp.com/latex.php?latex=L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="L"/> is optimal, if for any proof <img alt="\pi" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cpi&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\pi"/> of <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x"/> in any proof system for <img alt="L" class="latex" src="https://s0.wp.com/latex.php?latex=L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="L"/> there exists a proof <img alt="\pi'" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cpi%27&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\pi'"/> of <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x"/> in the system <img alt="P" class="latex" src="https://s0.wp.com/latex.php?latex=P&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="P"/> that is at most polynomially longer than <img alt="\pi" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cpi&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\pi"/>. If this transformation of <img alt="\pi" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cpi&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\pi"/> into <img alt="\pi'" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cpi%27&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\pi'"/> can even be computed efficiently, then <img alt="P" class="latex" src="https://s0.wp.com/latex.php?latex=P&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="P"/> is called p-optimal. Currently, it is only known that all languages in NP have optimal proof systems and all languages in P even admit p-optimal proof systems. However, it is open whether there exist languages outside NP with optimal proof systems or outside P with p-optimal proof systems.</p>
<h3>1. Characterizations</h3>
<p>Of central interest is the question whether there exists an optimal proof system for the coNP complete set of classical propositional tautologies. This question was posed by Krajíček and Pudlák (1989). Understanding the question better through characterizations is an important line of research with connections to a number of different topics. The first result in this area is due to Krajíček and Pudlák (1989) who showed the equivalence between the existence of p-optimal proof systems for propositional tautologies and the existence of optimal acceptors (algorithms that are optimal on the positive instances) for this problem. This equivalence was generalized to other problems by Sadowski (1999) and Messner (1999). Beyersdorff, Köbler, and Messner (2009) showed that optimality implies p-optimality for any system and any language if and only if the natural proof system for SAT (where proofs are just satisfying assignments) is p-optimal; the existence of an optimal system would imply the existence of a p-optimal system if there is some p-optimal system for SAT.</p>
<p>Recently, Chen and Flum (2012) uncovered further surprising relations of optimal proof systems to descriptive complexity and parameterized complexity. The link between these fields is provided by studying listings, i.e., enumerations of machines that compute all easy subsets of intractable problems like TAUT. Through this link Chen and Flum relate optimal proof systems to the existence of bounded logics for complexity classes such as polynomial time as well as deterministic and nondeterministic logarithmic space.</p>
<h3>2. Necessary and sufficient conditions</h3>
<p>There are also interesting connections to core questions of complexity theory. As already mentioned, an optimal system for propositional tautologies would allow to reduce the NP vs coNP question to proving proof size bounds for just this optimal proof system. Optimal proof systems also imply the existence of complete problems for various promise complexity classes as disjoint NP pairs (Razborov 1994, Pudlák 2003, Glaßer et al. 2005, Beyersdorff 2007), NP<img alt="\cap" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ccap&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\cap"/>coNP (Sadowski 1997) and probabilistic classes such as BPP (Köbler et al. 2003). Further to these implications, Itsykson (2010) has shown the surprising result that the average-case version of BPP has a complete problem.</p>
<p>Computational complexity also provides sufficient conditions for the existence of (p-)optimal proof systems; however, these are not as widely believed as structural assumptions like NP<img alt="\neq" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cneq&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\neq"/>coNP. Krajíček and Pudlák (1989) showed that the existence of optimal (resp., p-optimal) propositional proof systems is implied by NE=coNE (resp., E=NE), and Köbler, Messner, and Torán (2003) weakened these assumptions to double exponential time.</p>
<h3>3. Positive results in different models</h3>
<p>Other recent research concentrated on modified versions of the problem, where a number of surprising positive results have been obtained. Cook and Krajíček (2007) showed that (p-)optimal proof systems for tautologies exist if we allow just one bit of non-uniform advice. This result generalizes to arbitrary languages (Beyersdorff et al. 2011), but does not translate into optimal algorithms or acceptors. Hirsch et al. (2012) showed that optimal acceptors exist in a heuristic setting where we have a probability distribution on the complement of the language, but it is open whether this translates into optimal heuristic proof systems. Still another positive result was obtained by Pitassi and Santhanam (2010) who show that there exists an optimal quantified propositional proof system under a weak notion of simulation.</p>
<h3>4. Relations to bounded arithmetic</h3>
<p>Another interesting relation is to weak first-order arithmetic theories, so-called bounded arithmetic. Propositional proof systems are known to enjoy a close relationship to suitable theories of bounded arithmetic, e.g. extended Frege systems EF correspond to the theory <img alt="S^1_2" class="latex" src="https://s0.wp.com/latex.php?latex=S%5E1_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="S^1_2"/>. This correspondence has two facets: 1) proofs of first-order statements in <img alt="S^1_2" class="latex" src="https://s0.wp.com/latex.php?latex=S%5E1_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="S^1_2"/> can be translated into polynomial-size EF proofs and 2) every proof system for which <img alt="S^1_2" class="latex" src="https://s0.wp.com/latex.php?latex=S%5E1_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="S^1_2"/> can prove the consistency is simulated by EF. Therefore, from the point of view of <img alt="S^1_2" class="latex" src="https://s0.wp.com/latex.php?latex=S%5E1_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="S^1_2"/>, there exists an optimal propositional proof system, namely EF. Likewise, from the point of view of <img alt="S^1_2" class="latex" src="https://s0.wp.com/latex.php?latex=S%5E1_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="S^1_2"/>, there exists a complete disjoint NP-pair (the canonical pair of EF) etc.</p>
<h3>5. So, do they exist?</h3>
<p>In general, the question whether optimal proof systems exist is wide open; however, most researchers seem to conjecture a negative answer. Confirming such a negative answer seems out of reach with current techniques as this would imply a separation of complexity classes. On the other hand, while a positive answer would have interesting consequences (optimal problems for promise classes), these would not be as dramatic as e.g. a collapse of the polynomial hierarchy and therefore would not seem to be in sharp conflict with beliefs of complexity theorists. Thus, we will probably not see the answer to the question soon; however, research on this topic will hopefully continue to uncover interesting connections between complexity and logic.</p></div></content><updated planet:format="October 02, 2014 02:57 AM">2014-10-02T02:57:20Z</updated><published planet:format="October 02, 2014 02:57 AM">2014-10-02T02:57:20Z</published><category term="Proof systems"/><author><name>huntermonroe</name></author><source><id>https://speedupblogger.wordpress.com</id><logo>https://s0.wp.com/i/buttonw-com.png</logo><link href="https://speedupblogger.wordpress.com/feed/" rel="self" type="application/atom+xml"/><link href="https://speedupblogger.wordpress.com" rel="alternate" type="text/html"/><link href="https://speedupblogger.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/><link href="https://speedupblogger.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/><subtitle>Are there familiar computational problems with no best algorithm?</subtitle><title>Speedup in Computational Complexity</title><updated planet:format="December 17, 2018 05:29 AM">2018-12-17T05:29:57Z</updated><planet:module>toc</planet:module><planet:format>atom10</planet:format><planet:http_last_modified>Mon, 13 Aug 2018 19:00:30 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:items_per_page>40</planet:items_per_page><planet:css-id>speedup-in-computational-complexity</planet:css-id><planet:face>speedup.png</planet:face><planet:name>Speedup in Computational Complexity</planet:name><planet:http_location>https://speedupblogger.wordpress.com/feed/</planet:http_location><planet:http_status>301</planet:http_status></source></entry>
