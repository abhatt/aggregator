<?xml version="1.0" encoding="utf-8"?><entry xml:lang="en" xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>http://nanoexplanations.wordpress.com/?p=664</id><link href="https://nanoexplanations.wordpress.com/2012/01/13/password-analysis-from-the-stratfor-hack/" rel="alternate" type="text/html"/><title>Password analysis from the Stratfor hack</title><summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">I will return to blogging about theoretical computer science and algorithm-related mathematics next week, but I wanted to take a few minutes today to mention a rare research opportunity that has arisen as a result of the hack of the … <a href="https://nanoexplanations.wordpress.com/2012/01/13/password-analysis-from-the-stratfor-hack/">Continue reading <span class="meta-nav">→</span></a></div><div class="commentbar"><p/></div></summary><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>I will return to blogging about theoretical computer science and algorithm-related mathematics next week, but I wanted to take a few minutes today to mention a rare research opportunity that has arisen as a result of <a href="https://nanoexplanations.wordpress.com/2011/12/27/shadow-cia-apparently-stored-credit-card-information-in-cleartext/">the hack</a> of the private global intelligence company Stratfor.  This opportunity is the list of 860,000 (MD5 hashed) passwords to accounts of people in journalism, government contracting, the military, etc. — in short, people who “should” know how to create and maintain strong passwords.  Most of the MD5 hashes have now been cracked, and preliminary analysis indicates that even people who “know what they are doing” use weak passwords.</p>
<p>Stratfor, by the way, finally has their website back online, with a <a href="http://www.stratfor.com/hacking-news">Hacking News section</a>, in which they tell their side of the story.  (They verify that they stored credit card information in cleartext, as Anonymous had claimed, and they state that they were working with the FBI on an investigation into a hack of their systems before the hack went public on Christmas Eve.)  About a week ago, the hackers <a href="http://bolt.thexfil.es/84e9h!t">released a zine</a> which includes a press release about the Stratfor hack and two others, and a log of the hacks themselves.</p>
<p><span id="more-664"/></p>
<p><strong>Passwords have always been weak</strong></p>
<p>Zviran and Haga published <a href="http://www.rmu.edu/SentryHTML/pdf/lib_finn_DISC8710_password_security.pdf">Password Security: An Empirical Study</a> in 1999.  They analyzed passwords used at a Department of Defense facility in California.  They discovered that the vast majority of passwords in use were extremely insecure.  80% of the passwords were 4-7 characters in length, 80% used alphabetic characters only, and 80% of the users had never changed their password.  Fast-forwarding to the present, passwords of Stratfor subscribers are not much better.  The most common password is “stratfor” and there are single-character passwords.</p>
<p>Steve Ragan was one of the first to <a href="http://www.thetechherald.com/articles/Report-Analysis-of-the-Stratfor-Password-List">publish an analysis</a> of the Stratfor passwords.  His conclusion:</p>
<blockquote><p>We’re sorry to report that the state of password management and creation is still living in the Dark Ages.</p></blockquote>
<p>Ragan cracked almost 82,000 of the hashed passwords in under five hours, using one desktop computer and Hashcat, an off-the-shelf password cracking tool.  He provides lists of the most common passwords, and his own “favorites” from the database, including the password *****  (five asterisks).</p>
<p>The <a href="http://news.electricalchemy.net/2012/01/stratfor-breach-better-password.html">most comprehensive analysis</a> of the Stratfor passwords I have seen is by Gerrit Padgham, who cracked 86% of the unique hashes using GPU technology.  Padgham writes:</p>
<blockquote><p>Probably the surprising and under-reported insight we found is that a majority (about 630K) of the passwords we recovered appear to be randomly generated by the Stratfor site at registration time.  These passwords all have a very specific set of characteristics.  They are eight characters long. They consist of uppercase and lowercase letters, and digits (‘mixedalphanum’).  With a mid-range dual GPU machine, we were able to test and recover all passwords for that entire character set and length in just over 24 hours.</p>
<p>So what does this tell us?  It’s likely that during enrollment, the system generates a password automatically, and e-mails it to the user.  Normally users are required to change the randomly generated password on subsequent logins.  <strong>So it seems that well over three-quarters of all the breached accounts were created but never used.</strong> It’s possible that Stratfor auto-generated a password and didn’t require a change on next login, but based on our discussions with users exposed by the breach it appears that this was not the case.</p></blockquote>
<p><strong>Better security protocols going forward</strong></p>
<p>There have been a lot of posts on security blogs about lessons to learn from the Stratfor hack.   One, <a href="http://www.secureconsulting.net/2012/01/the-gross-example-of-stratfor.html">by Ben Tomhave,</a> lists the errors in Stratfor’s (lack of) security.  Tomhave was a Stratfor customer, and his information was compromised.  He is clearly very angry at Stratfor, and hopes they go out of business as a result of their incompetence.  (That scenario seems unlikely to me.)  However, tone aside, Tomhave makes strong points.</p>
<p>More constructively, Nick Selby <a href="http://policeledintelligence.com/2012/01/03/with-that-revealing-shirt-he-was-just-begging-to-be-hacked-blaming-the-victim-in-the-stratfor-hack/">calls on security professionals</a> not to blame the victims who had their information compromised.  Selby’s point is that it is incorrect to say that someone should just make a stronger password next time, because “the passwords are the problem, yo.”  His suggestion:</p>
<blockquote><p>Rather than continue to make the users do the stupid and useless things we as security professionals tell them to do, let’s remove them from the equation. First, some <a href="http://blog.hyland.com/enterprise-content-management/four-it-security-lessons-to-learn-from-anonymous%E2%80%99-stratfor-hack/" target="_blank">basic common sense </a>in building web applications  would be nice, as would <a href="https://www.whitehatsec.com/" target="_blank">testing regularly with competent people</a> doing the testing. Don’t let this be the end: <a href="http://www.troyhunt.com/2011/12/5-website-security-lessons-courtesy-of.html" target="_blank">secure stuff properly on your end</a>to protect your users. Stop being such a cheapskate and spend some money on your security people. Test your assumptions regularly by having competent people test them. Follow the instructions of what these people say – don’t just sweep them under the rug or plan it for the 2016 fifth quarter budget cycle.</p>
<p>Regarding passwords suckage, Hey! Allowing passphrases would be nice – I don’t know how <em>much</em> more secure a passphrase such as</p>
<p>Ooh, yo – this is my secret passphrase!</p>
<p>is than something random and stupid like</p>
<p>bRo$NdoG726.</p>
<p>but I can tell you that it is a lot easier to remember, doesn’t force your users to fill their desk with Post-It reminders and, oh yeah, is harder to crack.</p></blockquote>
<p>I will conclude with <a href="https://www.xkcd.com/936/">a link to an xkcd comic</a> that says the same thing visually that Selby said in his blog: passphrases are strong and easy to remember; passwords weak and forgettable.</p>
<p><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.jtitle=Journal+of+Management+Information+Systems&amp;rft_id=info%3A%2F&amp;rfr_id=info%3Asid%2Fresearchblogging.org&amp;rft.atitle=Password+Security%3A+An+Empirical+Study&amp;rft.issn=&amp;rft.date=1999&amp;rft.volume=15&amp;rft.issue=4&amp;rft.spage=161&amp;rft.epage=185&amp;rft.artnum=http%3A%2F%2Fwww.jstor.org%2Fstable%2F40398409&amp;rft.au=Moshe+Zviran&amp;rft.au=William+J.+Haga&amp;rfe_dat=bpr3.included=1;bpr3.tags=Computer+Science+%2F+Engineering%2CEncryption">Moshe Zviran, &amp; William J. Haga (1999). Password Security: An Empirical Study <span style="font-style: italic;">Journal of Management Information Systems, 15</span> (4), 161-185</span></p></div></content><updated planet:format="January 13, 2012 03:00 PM">2012-01-13T15:00:02Z</updated><published planet:format="January 13, 2012 03:00 PM">2012-01-13T15:00:02Z</published><category term="Uncategorized"/><category term="security"/><category term="social history of computing"/><author><name>Aaron Sterling</name></author><source><id>https://nanoexplanations.wordpress.com</id><logo>https://s0.wp.com/i/buttonw-com.png</logo><link href="https://nanoexplanations.wordpress.com/feed/" rel="self" type="application/atom+xml"/><link href="https://nanoexplanations.wordpress.com" rel="alternate" type="text/html"/><link href="https://nanoexplanations.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/><link href="https://nanoexplanations.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/><subtitle>the blog of Aaron Sterling</subtitle><title>Nanoexplanations</title><updated planet:format="December 17, 2018 05:29 AM">2018-12-17T05:29:46Z</updated><planet:module>toc</planet:module><planet:format>atom10</planet:format><planet:http_last_modified>Thu, 12 Apr 2018 01:29:57 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:items_per_page>40</planet:items_per_page><planet:css-id>aaron-sterling</planet:css-id><planet:face>sterling.jpeg</planet:face><planet:name>Aaron Sterling</planet:name><planet:http_location>https://nanoexplanations.wordpress.com/feed/</planet:http_location><planet:http_status>301</planet:http_status></source></entry>
