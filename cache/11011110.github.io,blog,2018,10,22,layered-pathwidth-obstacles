<?xml version="1.0" encoding="utf-8"?><entry xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>https://11011110.github.io/blog/2018/10/22/layered-pathwidth-obstacles</id><link href="https://11011110.github.io/blog/2018/10/22/layered-pathwidth-obstacles.html" rel="alternate" type="text/html"/><title>Layered pathwidth and its obstacles</title><summary>There is a strong connection between the structural properties of the graphs in minor-closed families of graphs, and the properties of the graphs that are not in those families, their forbidden minors. A famous example of this is the proof by Robertson and Seymour (1986) that a minor-closed family of graphs has bounded treewidth if and only if at least one planar graph is not in the family. This is closely related to an earlier theorem of Halin on grid minors in infinite graphs, and Chekuri and Chuzhoy (STOC 2014) have proven a polynomial relation between the treewidth and the size of the excluded planar graph.<div class="commentbar"><p/></div></summary><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>There is a strong connection between the structural properties of the graphs in <a href="https://en.wikipedia.org/wiki/Graph_minor">minor-closed families of graphs</a>, and the properties of the graphs that are not in those families, their <a href="https://en.wikipedia.org/wiki/Forbidden_graph_characterization">forbidden minors</a>.
A famous example of this is the proof by <a href="https://doi.org/10.1016/0095-8956(86)90030-4">Robertson and Seymour (1986)</a> that a minor-closed family of graphs has bounded <a href="https://en.wikipedia.org/wiki/Treewidth">treewidth</a> if and only if at least one planar graph is not in the family. This is closely related to an earlier <a href="https://en.wikipedia.org/wiki/Halin%27s_grid_theorem">theorem of Halin on grid minors in infinite graphs</a>, and <a href="https://arxiv.org/abs/1305.6577">Chekuri and Chuzhoy (STOC 2014)</a> have proven a polynomial relation between the treewidth and the size of the excluded planar graph.</p>

<p>Another result of <a href="https://doi.org/10.1016%2F0095-8956%2883%2990079-5">Robertson and Seymour (1983)</a>, the first in their long sequence of papers on graph minors, states that a minor-closed family of graphs has bounded <a href="https://en.wikipedia.org/wiki/Pathwidth">pathwidth</a> if and only if at least one tree is not in the family. I’m less sure of the provenance, but it’s also known that a minor-closed family of graphs has bounded <a href="https://en.wikipedia.org/wiki/Tree-depth">tree-depth</a> if and only if at least one path is not in the family.</p>

<p>My own most heavily-cited non-algorithmic result (from <a href="https://doi.org/10.1007/s004530010020">Algorithmica 2000</a>) has the same flavor, but is a little more complicated to explain. It states that a minor-closed family of graphs has bounded local treewidth if and only if at least one <a href="https://en.wikipedia.org/wiki/Apex_graph">apex graph</a> is not in the family. An apex graph is what you get by adding one vertex to a planar graph.</p>

<p style="text-align: center;"><img alt="An apex graph" src="https://11011110.github.io/blog/assets/2018/apex-graph.svg"/></p>

<p>“Bounded local treewidth” means that, for each vertex , and each number , the treewidth of the subgraph within distance  of  can be bounded by a function of . Later, <a href="https://doi.org/10.1016/j.jctb.2017.05.006">Dujmović, Morin, and Wood (JCTB 2017)</a> showed that the same is true for linear local treewidth (the function of  is linear) and for bounded layered treewidth.
Layered treewidth is a concept defined by simultaneously choosing a <a href="https://en.wikipedia.org/wiki/Tree_decomposition">tree decomposition</a> (a tree whose nodes, called bags, represent sets of vertices, with each vertex belonging to the bags of a connected subtree and each edge having both endpoints in at least one bag) and a layering (a partition of the vertices into a sequence of subsets called layers, such that each edge connects vertices in the same or consecutive layers).  The layered width of a (tree decomposition, layering) pair is the largest intersection of a bag and a layer.</p>

<p>In a paper with Bannister, Devanny, Dujmović, and Wood (described in <a href="https://11011110.github.io/blog/2015/06/30/new-preprint-on.html">this earlier post</a> and <a href="https://doi.org/10.1007/s00453-018-0487-5">to appear in Algorithmica</a>) we introduced an analogous concept, layered pathwidth.
This is just the width of a (tree decomposition, layering) pair whose tree decomposition is a path of bags. In the example below, the rows of the grid are the layers, and the columns are the bags. Each vertex belongs to one layer and a contiguous subsequence of bags, and each grid cell (the intersection of a layer and a bag) contains at most two vertices. Each edge belongs to a single bag and spans at most two consecutive layers. So the layered pathwidth for this example is two.</p>

<p style="text-align: center;"><img alt="Layered path decomposition" src="https://11011110.github.io/blog/assets/2018/layered-path-decomp.svg"/></p>

<p>My newest preprint, “Minor-closed graph classes with bounded layered pathwidth” (with Vida Dujmović, Gwenäel Joret, Pat Morin, and David Wood, <a href="https://arxiv.org/abs/1810.08314">arXiv:1810.08314</a>) proves the same style of forbidden-minor characterization for this concept: a minor-closed family of graphs has bounded local pathwidth, linear local pathwidth, or bounded layered pathwidth if and only if at least one apex-tree is not in the family. An apex-tree is a graph like the one below formed by adding a single vertex to a tree.</p>

<p style="text-align: center;"><img alt="An apex tree" src="https://11011110.github.io/blog/assets/2015/ApexTree.svg"/></p>

<p>By analogy, one would expect that the forbidden minors for bounded local tree-depth would be the fan graphs formed by adding one vertex to a path. I don’t know a reference for this, but it turns out to be true! In one direction, if a minor-closed family of graphs includes all of the fans, then it includes graphs whose radius from the center of the fan is one, but whose tree-depth is logarithmic in the size of the fan (because that’s the tree-depth of the path from which the fan was formed). In the other direction, I want to show that if a family of graphs excludes a -vertex fan, then the tree-depth of its radius- graphs is at most .</p>

<p>To prove this, suppose that we are given a graph such that the radius from some central vertex  is . Perform a depth-first search from , and let  be the length of the longest path in the depth-first search tree. Then the graph has tree-depth at most , and we want to show that if  is at least  then the graph contains as a minor a fan with  vertices.
If the path includes  consecutive vertices at distance exactly  from , then the fan is easy to find: just contract all closer vertices into . Otherwise, contract each vertex at distance  from  into one of its path neighbors. This compresses the path by removing groups of at most  consecutive vertices,
so we get a path of  vertices (other than ) that are all now at distance at most  from . Repeat, either finding enough consecutive vertices at the maximum distance or shrinking the path by a factor of  and the distance by one, until eventually finding a fan. When we shrink to distance one from , we will necessarily have found a fan, because we still have at least  vertices left in the shrunken path and they are all adjacent to .</p>

<p>But the tree-depth one gets from this argument is very far from linear.
And I don’t know what layered tree-depth should mean, or whether (if it is defined properly) bounded layered tree-depth and bounded local tree-depth of minor-closed families are the same, as they are for treewidth and pathwidth.</p>

<p>(<a href="https://plus.google.com/100003628603413742554/posts/VTaBe2NJgpi">G+</a>, <a href="https://mathstodon.xyz/@11011110/100942192280467337"/>)</p></div></content><updated planet:format="October 22, 2018 03:00 PM">2018-10-22T15:00:00Z</updated><published planet:format="October 22, 2018 03:00 PM">2018-10-22T15:00:00Z</published><author><name>David Eppstein</name></author><source><id>https://11011110.github.io/blog/feed.xml</id><author><name>David Eppstein</name></author><link href="https://11011110.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/><link href="https://11011110.github.io/blog/" rel="alternate" type="text/html"/><subtitle>Geometry, graphs, algorithms, and more</subtitle><title>11011110</title><updated planet:format="December 16, 2018 12:22 AM">2018-12-16T00:22:46Z</updated><planet:module>toc</planet:module><planet:format>atom10</planet:format><planet:http_etag>W/&quot;5c159ae6-21992&quot;</planet:http_etag><planet:http_last_modified>Sun, 16 Dec 2018 00:23:02 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:items_per_page>40</planet:items_per_page><planet:css-id>david-eppstein</planet:css-id><planet:face>eppstein.jpeg</planet:face><planet:name>David Eppstein</planet:name><planet:filters>category.py?cats=$%20not%20&quot;family&quot;%20and%20not%20&quot;photography&quot;</planet:filters><planet:http_status>200</planet:http_status></source></entry>

