<?xml version="1.0" encoding="utf-8"?><entry xml:lang="en" xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>http://jonkatz.wordpress.com/?p=991</id><link href="https://jonkatz.wordpress.com/2014/01/14/real-world-crypto-session-i/" rel="alternate" type="text/html"/><title>Real-World Crypto, Day 2, Session 1</title><summary>The workshop kicked off with two talks on OPACITY. OPACITY is a protocol suite with two protocols: ZKM and FS. Both of these are Diffie-Hellman-based authenticated key-agreement protocols, geared toward smartcards, that incorporate some privacy measures. It was developed by the company ActiveIdentity, is apparently supported by the US Department of Defense, and has been […]<div class="commentbar"><p/></div></summary><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>The workshop kicked off with two talks on OPACITY. OPACITY is a protocol suite with two protocols: ZKM and FS. Both of these are Diffie-Hellman-based authenticated key-agreement protocols, geared toward smartcards, that incorporate some privacy measures. It was developed by the company ActiveIdentity, is apparently supported by the US Department of Defense, and has been standardized.</p>
<p>Marc Fischlin began with a talk about a cryptographic analysis of OPACITY. Marc pointed out that the fact that the protocol is standards-compliant does not imply anything about whether or not it is secure; following a standard is no substitute for a rigorous analysis/proof. (This is clearly true, since the standards don’t contain or imply any particular security definition.)</p>
<p>Both protocols use two rounds, and assume the smartcard holds a long-term, certified public key. The ZKM protocol is a static-ephemeral Diffie-Hellman protocol, where the card reader generates an ephemeral key and the smartcard uses its long-term (“static”) Diffie-Hellman public key to derive a shared key. Interestingly (or surprisingly), there is no authentication from reader to client, and anyone can easily impersonate a reader. The FS protocol is similar, though in this case both the smartcard and the reader have long-term, certified public keys. Here, two ephemeral-static Diffie-Hellman protocols are run to derive shared values, and these are then used in a “cascading” fashion to derive shared keys.</p>
<p>One complicated part of both protocols is that, for efficiency reasons, they allow what is called “persistent binding”: the card reader can cache the public key of a smartcard it has interacted with before. There is also a way for the smartcard to “blind” the certificate it sends, which is supposed to provide some measure of privacy for the smartcard. </p>
<p>In trying to analyze the protocol, Marc found that the security goals were unclear. (This is a general problem when security goals are stated informally, and demonstrates why formal models/definitions are useful even in the absence of a security proof.) Marc and his co-authors used a well-known security definition for authenticated key agreement by Bellare and Rogaway, adapted to capture one-way auhtentication (which is all we can hope for ZKS to provide). Marc was able to prove that ZKM achieves one-way authentication, and that the derived, shared keys are hidden from a passive attacker. FS also satisfies some notion of identity hiding for the card. In both cases, the analysis break down if persistent binding is used (it ws not clear to me whether there is a concrete attack in that case).</p>
<p>The second talk in the session was by Eric Le Saint, who introduced the OPACITY protocol. He noted that OPACITY was designed for protecting contactless transactions between chip-based mobile devices and terminals, where currently no security mechanisms are in place. For this reason, the protocol was designed to be fast: the reader/terminal can pre-process things so that it is ready to sent the first message of the protocol as soon as a card comes into close proximity; the card can then quickly compute and send the second (and final) protocol message. This can all be done in the time it takes to physically swipe a card at a reader, without inconveniencing the user holding the card. </p>
<p>Eric addressed a statement from Marc’s papers to the effect that the security guarantees of OPACITY are rather weak. In response he noted that one-way authentication may be sufficient for the intended applications, and resistance to eavesdropping may also be enough in practice. (Frankly, the justification for this did not make sense to me, but perhaps it was just poor presentation.) He also claims (without any explanation) that the notion of identity hiding achieved by ZKM is considered strong enough for US government applications.</p>
<p>He concluded by stating that he was currently working on an improved version of OPACITY that would achieve stronger security goals. He described the protocol using a high-level block diagram but I was unable to follow the details. I hope he (or someone else) will be attempting the prove security this time around.</p></div></content><updated planet:format="January 14, 2014 03:36 PM">2014-01-14T15:36:52Z</updated><published planet:format="January 14, 2014 03:36 PM">2014-01-14T15:36:52Z</published><category term="Crypto"/><author><name>jonkatz</name></author><source><id>https://jonkatz.wordpress.com</id><logo>https://s0.wp.com/i/buttonw-com.png</logo><link href="https://jonkatz.wordpress.com/category/tcs/feed/" rel="self" type="application/atom+xml"/><link href="https://jonkatz.wordpress.com" rel="alternate" type="text/html"/><link href="https://jonkatz.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/><link href="https://jonkatz.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/><subtitle>Random thoughts about random things...by Jonathan Katz</subtitle><title>TCS – Random bits</title><updated planet:format="December 17, 2018 05:29 AM">2018-12-17T05:29:28Z</updated><planet:module>toc</planet:module><planet:format>atom10</planet:format><planet:http_etag>W/&quot;f68702a61d1c1378b1780332cf6a55a8&quot;</planet:http_etag><planet:http_last_modified>Mon, 17 Dec 2018 05:29:27 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:items_per_page>40</planet:items_per_page><planet:css-id>jonathan-katz</planet:css-id><planet:face>katz.png</planet:face><planet:name>Jonathan Katz</planet:name><planet:http_location>https://jonkatz.wordpress.com/category/tcs/feed/</planet:http_location><planet:http_status>301</planet:http_status></source></entry>
