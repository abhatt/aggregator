<?xml version="1.0" encoding="utf-8"?><entry xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>https://blogs.princeton.edu/imabandit/?p=1319</id><link href="https://blogs.princeton.edu/imabandit/2018/01/29/k-server-part-3-entropy-regularization-for-weighted-k-paging/" rel="alternate" type="text/html"/><title>k-server, part 3: entropy regularization for weighted k-paging</title><summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>If you have been following the first two posts (post 1, post 2), now is time to reap the rewards! I will show here how to obtain a -competitive algorithm for (weighted) paging, i.e., when the metric space corresponds to … <a href="https://blogs.princeton.edu/imabandit/2018/01/29/k-server-part-3-entropy-regularization-for-weighted-k-paging/">Continue reading <span class="meta-nav">→</span></a></p></div><div class="commentbar"><p/></div></summary><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>If you have been following the first two posts (<a class="liinternal" href="https://blogs.princeton.edu/imabandit/2017/12/16/k-server-part-1-online-learning-and-online-algorithms/">post 1</a>, <a class="liinternal" href="https://blogs.princeton.edu/imabandit/2017/12/20/k-server-part-2-continuous-time-mirror-descent/">post 2</a>), now is time to reap the rewards! I will show here how to obtain a <img alt="O(\log(k))" class="ql-img-inline-formula " height="18" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-aa3282f165dce006d9f76f4336115856_l3.png?resize=73%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="73"/>-competitive algorithm for (weighted) <a class="liinternal" href="https://en.wikipedia.org/wiki/Paging" rel="nofollow">paging</a>, i.e., when the metric space corresponds to the leafs of a weighted star. This was viewed as a breakthrough result 10 years ago (with a JACM publication by <a class="liinternal" href="https://dl.acm.org/citation.cfm?id=1334222">Bansal, Buchbinder and Naor in 2012</a>), and for good reasons as this simplest instance of <img alt="k" class="ql-img-inline-formula " height="13" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9dc53f8ecc1bcf15020c6df4c12f1c27_l3.png?resize=9%2C13&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/>-server was in fact the one studied in the seminal paper by <a class="liinternal" href="https://dl.acm.org/citation.cfm?id=2793">Sleator and Tarjan in 1985</a> which introduced the competitive analysis of online algorithms (actually to be precise Sleator and Tarjan considered the unweighted case, for which a <img alt="O(\log(k))" class="ql-img-inline-formula " height="18" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-aa3282f165dce006d9f76f4336115856_l3.png?resize=73%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="73"/> algorithm was known much before).</p>
<p><strong>State space for weighted <img alt="k" class="ql-img-inline-formula " height="13" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9dc53f8ecc1bcf15020c6df4c12f1c27_l3.png?resize=9%2C13&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/>-paging</strong></p>
<p>Let <img alt="w_i" class="ql-img-inline-formula " height="11" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-8b2caf361c5648973295a4351660bda5_l3.png?resize=18%2C11&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="18"/> be the weight of the edge from leaf <img alt="i \in [n]" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-180804b19c01d4998549a0b98eeb2e94_l3.png?resize=47%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="47"/> to the root. Recall from the <a class="liinternal" href="https://blogs.princeton.edu/imabandit/2017/12/20/k-server-part-2-continuous-time-mirror-descent/">previous post</a> that we want to find a norm and a convex body that can express the Wasserstein-<img alt="1" class="ql-img-inline-formula " height="13" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-21b5b4cbe9a10b6d847eeb4265b99898_l3.png?resize=7%2C13&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="7"/> distance between two fractional <img alt="k" class="ql-img-inline-formula " height="13" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9dc53f8ecc1bcf15020c6df4c12f1c27_l3.png?resize=9%2C13&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/>-server configurations.</p>
<p>Consider a fractional move from <img alt="z \in \Delta_n(k)" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-12b4282abc952dbb7d26400bda625105_l3.png?resize=77%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="77"/> to <img alt="z + \xi" class="ql-img-inline-formula " height="16" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-fe086d64d97065f80181a609839fad8b_l3.png?resize=39%2C16&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="39"/>. Then clearly, the amount of mass <img alt="|\xi_i|" class="ql-img-inline-formula " height="18" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-1c0000b13714949139016056d22810f4_l3.png?resize=19%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="19"/> has to transfer through the edge <img alt="(i, \mathrm{root})" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9630bb90dd9f3a01d04c1e8a0c535a15_l3.png?resize=58%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="58"/>, so that the Wasserstein-<img alt="1" class="ql-img-inline-formula " height="13" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-21b5b4cbe9a10b6d847eeb4265b99898_l3.png?resize=7%2C13&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="7"/> distance is at least <img alt="\sum_i w_i |\xi_i|" class="ql-img-inline-formula " height="19" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-c012f82b59a008185928cc9ede5cdf35_l3.png?resize=67%2C19&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="67"/>. Furthermore there is trivially a transport plan achieving that much total mass transfer. In other words we just proved that in this case the appropriate norm is a weighted <img alt="\ell_1" class="ql-img-inline-formula " height="17" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-6c18ad6e740737272d8ec5c3b11a1614_l3.png?resize=13%2C17&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="13"/> norm (namely <img alt="\|\xi\| := \sum_{i=1}^n w_i |\xi_i|" class="ql-img-inline-formula " height="20" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-786bbd91bd9832eccdb05def88037d11_l3.png?resize=137%2C20&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="137"/>) and one can simply use the basic state space <img alt="K = \{x \in [0,1]^n : \sum_i x_i = n-k\}" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-8bcf758be9bac453de33390831f3538d_l3.png?resize=257%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="257"/> (recall from the <a class="liinternal" href="https://blogs.princeton.edu/imabandit/2017/12/20/k-server-part-2-continuous-time-mirror-descent/">previous post</a> that we have to work with anticonfiguration, and that the mapping to a configuration is simply given by <img alt="z=1-x" class="ql-img-inline-formula " height="13" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-a78a0ec71052e0846acc9ffa36aa637b_l3.png?resize=73%2C13&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="73"/>).</p>
<p><strong>Applying the general mirror descent framework</strong></p>
<p>Given a request at location <img alt="r \in [n]" class="ql-img-inline-formula " height="18" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-8f656311867e9b5f057fe7c267c3f09b_l3.png?resize=49%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="49"/> and a current anticonfiguration <img alt="x_0" class="ql-img-inline-formula " height="11" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-55b536a6647748d6c0c6b58015805c68_l3.png?resize=17%2C11&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="17"/>, our proposed (fractional) algorithm is to run the mirror descent dynamics with a continuous time linear cost <img alt="c(t) = e_r" class="ql-img-inline-formula " height="18" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-682c26e0c4fc9e5203e1140b11284f23_l3.png?resize=65%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="65"/> from <img alt="x(0)=x_0" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-a2cefb7bcebc01a7c87d143c3cd2e859_l3.png?resize=73%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="73"/> (i.e., <img alt="x'(t) = (\nabla^2 \Phi(x(t)))^{-1} (e_r + \lambda(t))" class="ql-img-inline-formula " height="19" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-6684ef27a1b75c5e707e426386bcc4fe_l3.png?resize=250%2C19&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="250"/> for some <img alt="\lambda(t) \in N_K(x(t))" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-623f3f1d653d488a2ea3e15544e622b4_l3.png?resize=123%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="123"/>) and until the first time <img alt="t" class="ql-img-inline-formula " height="12" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-6b97bb0f65c75b6cc0fba1868749478d_l3.png?resize=6%2C12&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="6"/> at which <img alt="x_r(t) = 0" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-add7c7427c71f095e97cbde4d69ccdf5_l3.png?resize=70%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="70"/> (i.e., one has a server at location <img alt="r" class="ql-img-inline-formula " height="8" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-df163da6c15d481bf43b92e0e9ab6c1c_l3.png?resize=8%2C8&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="8"/> in <img alt="z(t) := 1-x(t)" class="ql-img-inline-formula " height="18" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-90fb0a6ccbb671515070cc0822dab3cd_l3.png?resize=117%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="117"/>). By the lemma at the end of the <a class="liinternal" href="https://blogs.princeton.edu/imabandit/2017/12/20/k-server-part-2-continuous-time-mirror-descent/">previous post</a> one has (denote <img alt="r(t)" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-956f48e7782f1c56f9c25e126610f09f_l3.png?resize=27%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="27"/> for the request being serviced at time <img alt="t" class="ql-img-inline-formula " height="12" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-6b97bb0f65c75b6cc0fba1868749478d_l3.png?resize=6%2C12&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="6"/>)</p>
<p class="ql-center-displayed-equation" style="line-height: 40px;"><span class="ql-right-eqno">   </span><span class="ql-left-eqno">   </span><img alt="\[ \int x_{r(t)}(t) dt \leq \mathrm{Lip}_{\|\cdot\|}(\Phi) \times \mathrm{OPT} + O(1) \]" class="ql-img-displayed-equation " height="40" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-e5061d5231772964d5d0d76be36f7aaf_l3.png?resize=303%2C40&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="303"/></p>
<p>One can think of <img alt="\int x_{r(t)}(t) dt" class="ql-img-inline-formula " height="21" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-6503c6edfb631ef7cf399558dd33fdf1_l3.png?resize=83%2C21&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="83"/> as a “virtual service cost”. In <img alt="k" class="ql-img-inline-formula " height="13" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9dc53f8ecc1bcf15020c6df4c12f1c27_l3.png?resize=9%2C13&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/>-server this quantity has no real meaning, but the above inequality shows that this quantity, which only depends on the algorithm, is tightly related to the value of OPT (provided that <img alt="\Phi" class="ql-img-inline-formula " height="14" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-8581dbc45f448345dcc6bd9caed502e9_l3.png?resize=12%2C14&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="12"/> has a small Lipschitz norm). Thus we see that we have two key desiderata for the choice of the mirror map <img alt="\Phi" class="ql-img-inline-formula " height="14" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-8581dbc45f448345dcc6bd9caed502e9_l3.png?resize=12%2C14&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="12"/>: (i) it should have a small Lipschitz norm, (ii) one should be able to relate the movement cost <img alt="\|x'(t)\| = \|(\nabla^2 \Phi(x(t)))^{-1} (e_r + \lambda(t))\|" class="ql-img-inline-formula " height="20" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-437774232cba7e04af48987fe2e6c685_l3.png?resize=283%2C20&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="283"/> to this “virtual service cost” <img alt="x_{r}(t)" class="ql-img-inline-formula " height="18" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-86ec90aac684dd76431da1aca384c0ca_l3.png?resize=37%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="37"/>, say up to a multiplicative factor <img alt="\alpha" class="ql-img-inline-formula " height="8" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-0210468bf4cb3a50550e30ce7951201b_l3.png?resize=11%2C8&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="11"/>. One would then obtain a <img alt="\alpha \times \mathrm{Lip}_{\|\cdot\|}(\Phi)" class="ql-img-inline-formula " height="22" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-1def514bdee25296afee521c81107656_l3.png?resize=103%2C22&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="103"/>-competitive algorithm.</p>
<p><strong>Entropy regularization for weighted <img alt="k" class="ql-img-inline-formula " height="13" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9dc53f8ecc1bcf15020c6df4c12f1c27_l3.png?resize=9%2C13&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/>-paging</strong></p>
<p>Let us look at (ii), and we shall see that the entropy regularization comes out very naturally. Ignore for a moment the Lagrange multiplier <img alt="\lambda(t)" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-6eb8846c9752a5484de35c27bbfed01a_l3.png?resize=29%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="29"/> and let us search for a separable regularizer of the form <img alt="\Phi(x) = \sum_i \phi_i(x_i)" class="ql-img-inline-formula " height="19" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-f8f0b5504614e839b7b88909539584bf_l3.png?resize=132%2C19&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="132"/>. We want to relate <img alt="x_r(t)" class="ql-img-inline-formula " height="18" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-bf4b56163df5c3b09f212eefbb826a3f_l3.png?resize=37%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="37"/> to <img alt="w_r/\phi_i''(x_r(t)) (= (\nabla^2 \Phi(x(t)))^{-1} e_r)" class="ql-img-inline-formula " height="20" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-44d2c8d38c21d4e619a3b0c0d6643e60_l3.png?resize=258%2C20&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="258"/>. Making those two quantities equal gives <img alt="\phi_i(x) = w_i x_i \log(x_i)" class="ql-img-inline-formula " height="18" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9ecac30c41711b10733798f16a9ab659_l3.png?resize=152%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="152"/> and thus the regularizer is a <em>weighted negentropy</em>: <img alt="\Phi(x) = \sum_i w_i x_i \log x_i" class="ql-img-inline-formula " height="19" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-8f25f00d5935e2852faf85844f3b5c87_l3.png?resize=165%2C19&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="165"/>.</p>
<p>We now need to verify that this relation between the virtual service cost and the movement cost remains true even when the Lagrange mutilplier <img alt="\lambda(t)" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-6eb8846c9752a5484de35c27bbfed01a_l3.png?resize=29%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="29"/> is taken into account. Note that because of the form of the state space <img alt="K" class="ql-img-inline-formula " height="12" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-b760ebc707e08dd6e1888ea8da4c2454_l3.png?resize=16%2C12&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="16"/> the multiplier contains a term of the form <img alt="(\mu(t), \mu(t), \hdots, \mu(t))" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-22ded61b7c76365587ed7802acdf9ba2_l3.png?resize=152%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="152"/> (which corresponds to the constraint <img alt="\sum_{i=1}^n x_i = n-k" class="ql-img-inline-formula " height="20" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-c083dfc8088c67ef93c116fe6f19be65_l3.png?resize=125%2C20&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="125"/>) and for each location a term forcing the derivative to be <img alt="0" class="ql-img-inline-formula " height="12" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-caf0da06544de11692c73aa19868e895_l3.png?resize=9%2C12&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/> if the value of the missing mass has reached <img alt="1" class="ql-img-inline-formula " height="13" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-21b5b4cbe9a10b6d847eeb4265b99898_l3.png?resize=7%2C13&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="7"/>. In other words we obtain the following dynamics for mirror descent with the weighted negentropy regularization:</p>
<p class="ql-center-displayed-equation" style="line-height: 88px;"><span class="ql-right-eqno">   </span><span class="ql-left-eqno">   </span><img alt="\begin{align*} &amp; x_r'(t) = \frac{x_r(t)}{w_r} (-1 + \mu(t)) \\ &amp; x_i'(t) = \frac{x_i(t)}{w_i} \mu(t) 1\{x_i(t) &lt; 1\} \ \text{for} \ i \neq r \end{align*}" class="ql-img-displayed-equation " height="88" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-42362676690fcd9dad8a28fcabac7f32_l3.png?resize=295%2C88&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="295"/></p>
<p>Notice that up to a factor <img alt="2" class="ql-img-inline-formula " height="12" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-bc2da46d9824359f6ac8d33c5fb882dd_l3.png?resize=8%2C12&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="8"/> one can focus on controlling <img alt="\|(x'(t))_-\|" class="ql-img-inline-formula " height="19" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-170d50c12c9b51c8cf472dd358cca3f7_l3.png?resize=74%2C19&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="74"/> (that is only movement <em>into</em> a location is charged). In that view the Lagrange multipliers simply have no effect, since one has <img alt="\mu(t) \geq 0" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-33b2a6e03f09ea62df6925a1b4fbcaf1_l3.png?resize=64%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="64"/> (indeed recall that <img alt="\sum_{i=1}^n x_i'(t) = 0" class="ql-img-inline-formula " height="20" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-6b22150bcf6c923074b9f5d4201ab5ac_l3.png?resize=113%2C20&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="113"/>). Thus we see that the movement cost <img alt="\|(x'(t))_-\|" class="ql-img-inline-formula " height="19" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-170d50c12c9b51c8cf472dd358cca3f7_l3.png?resize=74%2C19&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="74"/> is exactly bounded by the virtual service cost <img alt="x_r(t)" class="ql-img-inline-formula " height="18" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-bf4b56163df5c3b09f212eefbb826a3f_l3.png?resize=37%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="37"/> in this case.</p>
<p><strong>Making <img alt="\Phi" class="ql-img-inline-formula " height="14" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-8581dbc45f448345dcc6bd9caed502e9_l3.png?resize=12%2C14&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="12"/> Lipschitz</strong></p>
<p>It remains to deal with a non-trivial issue, namely the entropy is not Lipschitz on the simplex! A similar issue is faced in online learning when one tries to prove <em>tracking expert regret bounds</em>, i.e., bounds with respect to a shifting expert. The standard solution (perhaps first used by Herbster and Warmuth in 98, see also Blum and Burch 00) is to shift the variables so that they never get below some <img alt="\delta&gt;0" class="ql-img-inline-formula " height="12" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-91f305aed0390c4593ac91ef32898a37_l3.png?resize=41%2C12&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="41"/>, in which case the Lipschitz constant would be <img alt="O(\log(1/\delta))" class="ql-img-inline-formula " height="19" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-7e38ad797a3b78dd203bf1b18964e94d_l3.png?resize=90%2C19&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="90"/>. In the <img alt="k" class="ql-img-inline-formula " height="13" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9dc53f8ecc1bcf15020c6df4c12f1c27_l3.png?resize=9%2C13&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/>-server scenario one can stop the dynamics when <img alt="x_{r(t)}(t)=\delta" class="ql-img-inline-formula " height="21" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-c8fc9b3b9e32f1c8d4b2e637f00991bc_l3.png?resize=85%2C21&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="85"/> (instead of <img alt="x_{r(t)}(t)=0" class="ql-img-inline-formula " height="21" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-25d2fc06eac2abc85a4ebdd6a68b5092_l3.png?resize=86%2C21&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="86"/>) provided that the mapping from <img alt="x" class="ql-img-inline-formula " height="8" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-1b9fbfb207b6d17d74b33c6d8342a1a4_l3.png?resize=10%2C8&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="10"/> to the actual fractional configuration <img alt="z" class="ql-img-inline-formula " height="8" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-d9d772a59543419785ce66946592259a_l3.png?resize=9%2C8&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/> is now given by <img alt="z=\frac{1-x}{1-\delta}" class="ql-img-inline-formula " height="23" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-a936a097911ae755d8c673f1f26647cb_l3.png?resize=61%2C23&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="61"/>. This raises a final issue: the total amount of server mass in such a <img alt="z" class="ql-img-inline-formula " height="8" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-d9d772a59543419785ce66946592259a_l3.png?resize=9%2C8&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/> is <img alt="\frac{k}{1-\delta} &gt; k" class="ql-img-inline-formula " height="23" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-ecfd9f0c3bb67debbd44fed670d40336_l3.png?resize=59%2C23&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="59"/>. Next we show that if <img alt="\delta" class="ql-img-inline-formula " height="12" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-472b76652a491cc8c2084a0799246b57_l3.png?resize=8%2C12&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="8"/> is small enough then <img alt="z" class="ql-img-inline-formula " height="8" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-d9d772a59543419785ce66946592259a_l3.png?resize=9%2C8&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/> can be “rounded” online to a fractional <img alt="k" class="ql-img-inline-formula " height="13" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9dc53f8ecc1bcf15020c6df4c12f1c27_l3.png?resize=9%2C13&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/>-server configuration at the expense of a multiplicative <img alt="O(1)" class="ql-img-inline-formula " height="18" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-febcba0e40085ed627805ca6fa7ccde6_l3.png?resize=36%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="36"/> movement. Precisely we show that <img alt="\delta&lt;1/(2k)" class="ql-img-inline-formula " height="19" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-a35299b675aae256b0061ee158833ae3_l3.png?resize=81%2C19&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="81"/> is sufficient, which in turns gives a final competitive ratio of <img alt="O(\log(k))" class="ql-img-inline-formula " height="18" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-aa3282f165dce006d9f76f4336115856_l3.png?resize=73%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="73"/> for weighted <img alt="k" class="ql-img-inline-formula " height="13" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9dc53f8ecc1bcf15020c6df4c12f1c27_l3.png?resize=9%2C13&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/>-paging.</p>
<p><strong>From <img alt="k+\epsilon" class="ql-img-inline-formula " height="15" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-1af8797e354ca292655397a4827ee434_l3.png?resize=38%2C15&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="38"/> servers to <img alt="k" class="ql-img-inline-formula " height="13" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9dc53f8ecc1bcf15020c6df4c12f1c27_l3.png?resize=9%2C13&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/> servers</strong></p>
<p>Consider a fractional server configuration <img alt="z" class="ql-img-inline-formula " height="8" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-d9d772a59543419785ce66946592259a_l3.png?resize=9%2C8&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/> with total mass <img alt="k+\epsilon" class="ql-img-inline-formula " height="15" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-1af8797e354ca292655397a4827ee434_l3.png?resize=38%2C15&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="38"/> (i.e., <img alt="\sum_{i=1}^n z_i = k+\epsilon" class="ql-img-inline-formula " height="20" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-077aa834dff8820a933d635ed167c5b7_l3.png?resize=121%2C20&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="121"/>), which we want to transform into a server configuration <img alt="\sigma(z)" class="ql-img-inline-formula " height="18" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-f9c48ce658c9f8423ef7fcb9a4699b8f_l3.png?resize=33%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="33"/> with total mass <img alt="k" class="ql-img-inline-formula " height="13" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9dc53f8ecc1bcf15020c6df4c12f1c27_l3.png?resize=9%2C13&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/>. A natural way to “round down” is at each location to put <img alt="0" class="ql-img-inline-formula " height="12" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-caf0da06544de11692c73aa19868e895_l3.png?resize=9%2C12&amp;ssl=1" style="vertical-align: 0px;" title="Rendered by QuickLaTeX.com" width="9"/> if the mass was <img alt="\leq \epsilon" class="ql-img-inline-formula " height="15" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-7504a24db9c20680a192709d477885ff_l3.png?resize=25%2C15&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="25"/>. Furthermore a mass of <img alt="1" class="ql-img-inline-formula " height="13" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-21b5b4cbe9a10b6d847eeb4265b99898_l3.png?resize=7%2C13&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="7"/> should stay <img alt="1" class="ql-img-inline-formula " height="13" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-21b5b4cbe9a10b6d847eeb4265b99898_l3.png?resize=7%2C13&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="7"/>. This suggests the mapping <img alt="\sigma(z_i) = \frac{z_i-\epsilon}{1-\epsilon} 1\{z_i &gt; \epsilon\}" class="ql-img-inline-formula " height="21" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-1a289095b493195ded2e36064e802e89_l3.png?resize=164%2C21&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="164"/>, which is <img alt="\frac{1}{1-\epsilon}" class="ql-img-inline-formula " height="23" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-d950d967e91067a07831916c993faa8c_l3.png?resize=24%2C23&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="24"/>-Lipschitz. Thus the movement of <img alt="\sigma(z(t))" class="ql-img-inline-formula " height="18" src="https://i1.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-d5de57590b548a86f190724658f443dc_l3.png?resize=53%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="53"/> is controlled by the movement of <img alt="z(t)" class="ql-img-inline-formula " height="18" src="https://i2.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-746395c40249994569c4321ffdf51db3_l3.png?resize=28%2C18&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="28"/> up to a multiplicative factor <img alt="\frac{1}{1-\epsilon}" class="ql-img-inline-formula " height="23" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-d950d967e91067a07831916c993faa8c_l3.png?resize=24%2C23&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="24"/>. Moreover one clearly has <img alt="\sum_{i=1}^n \sigma(z_i) \leq k" class="ql-img-inline-formula " height="20" src="https://i0.wp.com/blogs.princeton.edu/imabandit/wp-content/ql-cache/quicklatex.com-9ab7e4417c17e1283b47d55fec433e85_l3.png?resize=116%2C20&amp;ssl=1" title="Rendered by QuickLaTeX.com" width="116"/> (in fact the inequality can be strict, in which case one should think of the “lost mass” as being stored at the root, this incurs no additional movement cost).</p></div></content><updated planet:format="January 29, 2018 03:22 PM">2018-01-29T15:22:01Z</updated><published planet:format="January 29, 2018 03:22 PM">2018-01-29T15:22:01Z</published><category term="Theoretical Computer Science"/><author><name>Sebastien Bubeck</name></author><source><id>https://blogs.princeton.edu/imabandit</id><link href="https://blogs.princeton.edu/imabandit/feed/" rel="self" type="application/atom+xml"/><link href="https://blogs.princeton.edu/imabandit" rel="alternate" type="text/html"/><subtitle>Random topics in optimization, probability, and statistics. By Sébastien Bubeck</subtitle><title>I’m a bandit</title><updated planet:format="December 16, 2018 04:44 PM">2018-12-16T16:44:02Z</updated><planet:http_status>200</planet:http_status><planet:module>toc</planet:module><planet:format>atom10</planet:format><planet:items_per_page>40</planet:items_per_page><planet:name>S&amp;eacute;bastian Bubeck</planet:name><planet:http_last_modified>Fri, 23 Nov 2018 17:03:44 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:http_etag>&quot;7a21033bc747c1eccfdc0e4c416aa3e2&quot;</planet:http_etag><planet:css-id>s-eacute-bastian-bubeck</planet:css-id></source></entry>
