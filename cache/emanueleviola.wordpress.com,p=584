<?xml version="1.0" encoding="utf-8"?><entry xml:lang="en" xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>http://emanueleviola.wordpress.com/?p=584</id><link href="https://emanueleviola.wordpress.com/2018/08/21/bounded-independence-plus-noise-fools-space/" rel="alternate" type="text/html"/><title>bounded independence plus noise fools space</title><summary>There are many classes of functions on bits that we know are fooled by bounded independence, including small-depth circuits, halfspaces, etc. (See this previous post.) On the other hand the simple parity function is not fooled. It’s easy to see that you require independence at least . However, if you just perturb the bits with […]<div class="commentbar"><p/></div></summary><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><!--?xml version="1.0" encoding="iso-8859-1" ?--> <!--http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd--> <!-- html,xhtml,-css,NoFonts --></p>
<p style="text-align: justify;">There are many classes of functions on <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="n"/> bits that we know are fooled by bounded independence, including small-depth circuits, halfspaces, etc. (See this <a href="https://emanueleviola.wordpress.com/2014/08/02/the-sandwich-revolution-behind-the-paper/">previous post</a>.)</p>
<p style="text-align: justify;">On the other hand the simple parity function is not fooled. It’s easy to see that you require independence at least <img alt="n-1" class="latex" src="https://s0.wp.com/latex.php?latex=n-1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="n-1"/>. However, if you just <em>perturb the bits with a little noise <img alt="N" class="latex" src="https://s0.wp.com/latex.php?latex=N&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="N"/>,</em> then parity will be fooled. You can find other examples of functions that are not fooled by bounded independence alone, but are if you just perturb the bits a little.</p>
<p style="text-align: justify;">In <span class="cite">[<a href="https://emanueleviola.wordpress.com/feed/#XHLV-bipnfp">3</a>]</span> we proved that any distribution with independence about <img alt="n^{2/3}" class="latex" src="https://s0.wp.com/latex.php?latex=n%5E%7B2%2F3%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="n^{2/3}"/> fools space-bounded algorithms, if you perturb it with noise. We asked, both in the paper and many people, if the independence could be lowered. <a href="https://arxiv.org/abs/1808.06265">Forbes and Kelley have recently proved</a> <span class="cite">[<a href="https://emanueleviola.wordpress.com/feed/#XForbesKelley-2018">2</a>]</span> that the independence can be lowered all the way to <img alt="O(\log n)" class="latex" src="https://s0.wp.com/latex.php?latex=O%28%5Clog+n%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="O(\log n)"/>, which is tight <span class="cite">[<a href="https://emanueleviola.wordpress.com/feed/#XBoppanaHLV16">1</a>]</span>. Shockingly, their proof is nearly identical to <span class="cite">[<a href="https://emanueleviola.wordpress.com/feed/#XHLV-bipnfp">3</a>]</span>!</p>
<p style="text-align: justify;">This exciting result has several interesting consequences. First, we now have almost the same generators for space-bounded computation in a fixed order as we do for any order. Moreover, the proof greatly simplifies a number of works in the literature. And finally, an approach in <span class="cite">[<a href="https://emanueleviola.wordpress.com/feed/#XLV-sum">4</a>]</span> to prove limitations for the sum of small-bias generators won’t work for space (possibly justifying some optimism in the power of the sum of small-bias generators).</p>
<p style="text-align: justify;">My understanding of all this area is inseparable from the collaboration I have had with Chin Ho Lee, with whom I co-authored all the papers I have on this topic.</p>
<h3 class="likesectionHead"><a id="x1-1000"/>The proof</h3>
<p style="text-align: justify;">Let <img alt="f:\{0,1\}^{n}\to \{0,1\}" class="latex" src="https://s0.wp.com/latex.php?latex=f%3A%5C%7B0%2C1%5C%7D%5E%7Bn%7D%5Cto+%5C%7B0%2C1%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f:\{0,1\}^{n}\to \{0,1\}"/> be a function. We want to show that it is fooled by <img alt="D+E" class="latex" src="https://s0.wp.com/latex.php?latex=D%2BE&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="D+E"/>, where <img alt="D" class="latex" src="https://s0.wp.com/latex.php?latex=D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="D"/> has independence <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="k"/>, <img alt="E" class="latex" src="https://s0.wp.com/latex.php?latex=E&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="E"/> is the noise vector of i.i.d. bits coming up <img alt="1" class="latex" src="https://s0.wp.com/latex.php?latex=1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="1"/> with probability say <img alt="1/4" class="latex" src="https://s0.wp.com/latex.php?latex=1%2F4&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="1/4"/>, and <img alt="+" class="latex" src="https://s0.wp.com/latex.php?latex=%2B&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="+"/> is bit-wise XOR.</p>
<p style="text-align: justify;">The approach in <span class="cite">[<a href="https://emanueleviola.wordpress.com/feed/#XHLV-bipnfp">3</a>]</span> is to decompose <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f"/> as the sum of a function <img alt="L" class="latex" src="https://s0.wp.com/latex.php?latex=L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="L"/> with Fourier degree <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="k"/>, and a sum of <img alt="t" class="latex" src="https://s0.wp.com/latex.php?latex=t&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="t"/> functions <img alt="H_{i}=h_{i}\cdot g_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=H_%7Bi%7D%3Dh_%7Bi%7D%5Ccdot+g_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H_{i}=h_{i}\cdot g_{i}"/> where <img alt="h_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=h_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="h_{i}"/> has no Fourier coefficient of degree less than <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="k"/>, and <img alt="h_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=h_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="h_{i}"/> and <img alt="g_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=g_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_{i}"/> are bounded. The function <img alt="L" class="latex" src="https://s0.wp.com/latex.php?latex=L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="L"/> is immediately fooled by <img alt="D" class="latex" src="https://s0.wp.com/latex.php?latex=D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="D"/>, and it is shown in <span class="cite">[<a href="https://emanueleviola.wordpress.com/feed/#XHLV-bipnfp">3</a>]</span> that each <img alt="H_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=H_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H_{i}"/> is fooled as well.</p>
<p style="text-align: justify;">To explain the decomposition it is best to think of <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f"/> as the product of <img alt="\ell :=n/k" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cell+%3A%3Dn%2Fk&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\ell :=n/k"/> functions <img alt="f_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=f_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f_{i}"/> on <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="k"/> bits, on disjoint inputs. The decomposition in <span class="cite">[<a href="https://emanueleviola.wordpress.com/feed/#XHLV-bipnfp">3</a>]</span> is as follows: repeatedly decompose each <img alt="f_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=f_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f_{i}"/> in low-degree <img alt="f_{L}" class="latex" src="https://s0.wp.com/latex.php?latex=f_%7BL%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f_{L}"/> and high-degree <img alt="f_{H}" class="latex" src="https://s0.wp.com/latex.php?latex=f_%7BH%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f_{H}"/>. To illustrate:</p>
<div style="text-align: center;"><img alt="\begin{aligned} f_{1}f_{2}f_{3} &amp; =f_{1}f_{2}(f_{3H}+f_{3L})=f_{1}f_{2}f_{3H}+f_{1}(f_{2H}+f_{2L})f_{3L}=\ldots \\ = &amp; f_{1H}f_{2L}f_{3L}+f_{1}f_{2H}f_{3L}+f_{1}f_{2}f_{3H}+f_{1L}f_{2L}f_{3L}\\ = &amp; H_{1}+H_{2}+H_{3}+L. \end{aligned}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D+f_%7B1%7Df_%7B2%7Df_%7B3%7D+%26+%3Df_%7B1%7Df_%7B2%7D%28f_%7B3H%7D%2Bf_%7B3L%7D%29%3Df_%7B1%7Df_%7B2%7Df_%7B3H%7D%2Bf_%7B1%7D%28f_%7B2H%7D%2Bf_%7B2L%7D%29f_%7B3L%7D%3D%5Cldots+%5C%5C+%3D+%26+f_%7B1H%7Df_%7B2L%7Df_%7B3L%7D%2Bf_%7B1%7Df_%7B2H%7Df_%7B3L%7D%2Bf_%7B1%7Df_%7B2%7Df_%7B3H%7D%2Bf_%7B1L%7Df_%7B2L%7Df_%7B3L%7D%5C%5C+%3D+%26+H_%7B1%7D%2BH_%7B2%7D%2BH_%7B3%7D%2BL.+%5Cend%7Baligned%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\begin{aligned} f_{1}f_{2}f_{3} &amp; =f_{1}f_{2}(f_{3H}+f_{3L})=f_{1}f_{2}f_{3H}+f_{1}(f_{2H}+f_{2L})f_{3L}=\ldots \\ = &amp; f_{1H}f_{2L}f_{3L}+f_{1}f_{2H}f_{3L}+f_{1}f_{2}f_{3H}+f_{1L}f_{2L}f_{3L}\\ = &amp; H_{1}+H_{2}+H_{3}+L. \end{aligned}"/></div>
<p style="text-align: justify;">This works, but the problem is that even if each time <img alt="f_{iL}" class="latex" src="https://s0.wp.com/latex.php?latex=f_%7BiL%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f_{iL}"/> has degree <img alt="1" class="latex" src="https://s0.wp.com/latex.php?latex=1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="1"/>, the function <img alt="L" class="latex" src="https://s0.wp.com/latex.php?latex=L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="L"/> increases the degree by at least <img alt="1" class="latex" src="https://s0.wp.com/latex.php?latex=1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="1"/> per decomposition; and so we can afford at most <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="k"/> decompositions.</p>
<p style="text-align: justify;">The decomposition in <span class="cite">[<a href="https://emanueleviola.wordpress.com/feed/#XForbesKelley-2018">2</a>]</span> is instead: pick <img alt="L" class="latex" src="https://s0.wp.com/latex.php?latex=L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="L"/> to be the degree <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="k"/> part of <img alt="f" class="latex" src="https://s0.wp.com/latex.php?latex=f&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f"/>, and <img alt="H_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=H_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H_{i}"/> are all the Fourier coefficients which are non-zero in the inputs to <img alt="f_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=f_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f_{i}"/> and whose degree in the inputs of <img alt="f_{1},\ldots ,f_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=f_%7B1%7D%2C%5Cldots+%2Cf_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f_{1},\ldots ,f_{i}"/> is <img alt="\ge k" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cge+k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\ge k"/>. The functions <img alt="H_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=H_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H_{i}"/> can be written as <img alt="h_{i}\cdot g_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=h_%7Bi%7D%5Ccdot+g_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="h_{i}\cdot g_{i}"/>, where <img alt="h_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=h_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="h_{i}"/> is the high-degree part of <img alt="f_{1}\cdots f_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=f_%7B1%7D%5Ccdots+f_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f_{1}\cdots f_{i}"/> and <img alt="h_{i}" class="latex" src="https://s0.wp.com/latex.php?latex=h_%7Bi%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="h_{i}"/> is <img alt="f_{i+1}\cdots f_{\ell }" class="latex" src="https://s0.wp.com/latex.php?latex=f_%7Bi%2B1%7D%5Ccdots+f_%7B%5Cell+%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="f_{i+1}\cdots f_{\ell }"/>.</p>
<p style="text-align: justify;">Once you have this decomposition you can apply the same lemmas in <span class="cite">[<a href="https://emanueleviola.wordpress.com/feed/#XHLV-bipnfp">3</a>]</span> to get improved bounds. To handle space-bounded computation they extend this argument to matrix-valued functions.</p>
<h3 class="likesectionHead"><a id="x1-2000"/>What’s next</h3>
<p style="text-align: justify;">In <span class="cite">[<a href="https://emanueleviola.wordpress.com/feed/#XHLV-bipnfp">3</a>]</span> we asked for tight “bounded independence plus noise” results for any model, and the question remains. In particular, what about high-degree polynomials modulo <img alt="2" class="latex" src="https://s0.wp.com/latex.php?latex=2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2"/>?</p>
<h3 class="likesectionHead"><a id="x1-3000"/>References</h3>
<div class="thebibliography">
<p class="bibitem"><span class="biblabel"> [1]<span class="bibsp">   </span></span><a id="XBoppanaHLV16"/>Ravi Boppana, Johan Håstad, Chin Ho Lee, and Emanuele Viola. Bounded independence vs. moduli. In Workshop on Randomization and Computation (RANDOM), 2016.</p>
<p class="bibitem"><span class="biblabel"> [2]<span class="bibsp">   </span></span><a id="XForbesKelley-2018"/>Michael A. Forbes and Zander Kelley. Pseudorandom generators for read-once branching programs, in any order. In IEEE Symp. on Foundations of Computer Science (FOCS), 2018.</p>
<p class="bibitem"><span class="biblabel"> [3]<span class="bibsp">   </span></span><a id="XHLV-bipnfp"/>Elad Haramaty, Chin Ho Lee, and Emanuele Viola. Bounded independence plus noise fools products. SIAM J. on Computing, 47(2):295–615, 2018.</p>
<p class="bibitem"><span class="biblabel"> [4]<span class="bibsp">   </span></span><a id="XLV-sum"/>Chin Ho Lee and Emanuele Viola. Some limitations of the sum of small-bias distributions. Theory of Computing, 13, 2017.</p>
</div>
<p> </p>
<p> </p></div></content><updated planet:format="August 22, 2018 12:33 AM">2018-08-22T00:33:42Z</updated><published planet:format="August 22, 2018 12:33 AM">2018-08-22T00:33:42Z</published><category term="Uncategorized"/><category term="Behind the papers"/><author><name>Emanuele</name></author><source><id>https://emanueleviola.wordpress.com</id><logo>https://s0.wp.com/i/buttonw-com.png</logo><link href="https://emanueleviola.wordpress.com/feed/" rel="self" type="application/atom+xml"/><link href="https://emanueleviola.wordpress.com" rel="alternate" type="text/html"/><link href="https://emanueleviola.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/><link href="https://emanueleviola.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/><subtitle>By Emanuele Viola</subtitle><title>Thoughts</title><updated planet:format="December 17, 2018 05:30 AM">2018-12-17T05:30:12Z</updated><planet:module>toc</planet:module><planet:format>atom10</planet:format><planet:http_last_modified>Thu, 06 Dec 2018 20:12:45 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:items_per_page>40</planet:items_per_page><planet:css-id>emanuele-viola</planet:css-id><planet:face>viola.jpeg</planet:face><planet:name>Emanuele Viola</planet:name><planet:http_location>https://emanueleviola.wordpress.com/feed/</planet:http_location><planet:http_status>301</planet:http_status></source></entry>
