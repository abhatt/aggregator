<entry xml:lang="en-us" xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>http://arxiv.org/abs/1812.05821</id><link href="http://arxiv.org/abs/1812.05821" rel="alternate" type="text/html"/><title>Partial Function Extension with Applications to Learning and Property Testing</title><feedworld_mtime>1545004800</feedworld_mtime><summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/b/Bhaskar:Umang.html">Umang Bhaskar</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/k/Kumar:Gunjan.html">Gunjan Kumar</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1812.05821">PDF</a><br/><b>Abstract: </b>In partial function extension, we are given a partial function consisting of
$n$ points from a domain and a function value at each point. Our objective is
to determine if this partial function can be extended to a function defined on
the domain, that additionally satisfies a given property, such as convexity.
This basic problem underlies research questions in many areas, such as
learning, property testing, and game theory. We formally study the problem of
extending partial functions to satisfy fundamental properties in combinatorial
optimization, focusing on upper and lower bounds for extension and applications
to learning and property testing.
</p>
<p>(1) For subadditive functions, we show the extension problem is
coNP-complete, and we give tight bounds on the approximability. We also give an
improved lower bound for learning subadditive functions, and give the first
nontrivial testers for subadditive and XOS functions.
</p>
<p>(2) For submodular functions, we show that if a partial function can be
extended to a submodular function on the lattice closure (the minimal set that
contains the partial function and is closed under union and intersection) of
the partial function, it can be extended to a submodular function on the entire
domain. We obtain algorithms for determining extendibility in a number of
cases, including if $n$ is a constant, or the points are nearly the same size.
The complexity of extendibility is in general unresolved.
</p>
<p>(3) Lastly, for convex functions in $\mathbb{R}^m$, we show an interesting
juxtaposition: while we can determine the existence of an extension
efficiently, computing the value of a widely-studied convex extension at a
given point is strongly NP-hard.
</p></div><div class="commentbar"><p/></div></summary><updated planet:format="December 17, 2018 01:57 AM">2018-12-17T01:57:23Z</updated><author><name></name></author><source><id>http://arxiv.org/</id><category term="Computer Science -- Data Structures and Algorithms"/><link href="http://arxiv.org/" rel="alternate" type="text/html"/><link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/><subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle><title>cs.DS updates on arXiv.org</title><updated planet:format="December 17, 2018 01:30 AM">2018-12-17T01:30:00Z</updated><planet:module>toc</planet:module><planet:format>rss10</planet:format><planet:http_etag>&quot;Mon, 17 Dec 2018 01:30:00 GMT&quot;, &quot;1545010200&quot;</planet:http_etag><planet:filters>arXiv.py</planet:filters><planet:name>arXiv.org: Data structures and Algorithms</planet:name><planet:http_last_modified>Mon, 17 Dec 2018 01:30:00 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:css-id>arxiv-org-data-structures-and-algorithms</planet:css-id><planet:items_per_page>40</planet:items_per_page><planet:face>corr.jpeg</planet:face><planet:http_status>200</planet:http_status></source></entry>
