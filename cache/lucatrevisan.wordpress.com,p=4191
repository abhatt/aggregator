<?xml version="1.0" encoding="utf-8"?><entry xml:lang="en" xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>http://lucatrevisan.wordpress.com/?p=4191</id><link href="https://lucatrevisan.wordpress.com/2018/05/06/search-vs-decision-vs-certification-for-planted-problems/" rel="alternate" type="text/html"/><title>Search vs Decision vs Certification for Planted Problems</title><summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml">Edited 5/7/2018. Thanks to Sam Hopkins for several corrections and suggestions. I am revising my notes from the course on “better-than-worst-case” analysis of algorithms. With the benefit of hindsight, in this post (and continuing in future posts) I would like … <a href="https://lucatrevisan.wordpress.com/2018/05/06/search-vs-decision-vs-certification-for-planted-problems/">Continue reading <span class="meta-nav">→</span></a></div><div class="commentbar"><p/></div></summary><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p/><p>
<em>Edited 5/7/2018. Thanks to Sam Hopkins for several corrections and suggestions.</em></p>
<p>
I am revising my notes from the course on “better-than-worst-case” analysis of algorithms. With the benefit of hindsight, in this post (and continuing in future posts) I would like to review again how one applies spectral methods and semidefinite programming to problems that involve a “planted” solution, and what is the role of concentration results for random matrices in the analysis of such algorithms.</p>
<p>
<span id="more-4191"/></p>
<p>
In general, a “planted” distribution is one where we start from picking a random “planted” solution and then we pick an instance of our problem in which the planted solution is good. Such problems are interesting for the average-case analysis of algorithms, because they provide a non-trivial testing ground to understand why certain algorithms perform better in practice than in the worst case; planted problems are also of great interest in complexity theory, because when they are average-case hard they imply the existence of one-way functions; planted problems are also a rich ground for interdisciplinary work: statisticians recognize them as parametric distributions, where the parameter is the planted solutions, for which one wants to approximate the parameter given one sample, and information theorists think of them as a channel where the sender sends a planted solution and the receiver gets an instance of the problem, so that one recognizes that having a large mutual information between instance and planted solution is a necessary condition for the problem to be solvable.</p>
<p>
For the sake of this post, it is helpful to focus on the motivating examples of planted <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/>-clique and planted bisection. In planted <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/>-clique, we sample a graph <img alt="{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G}"/> from the <img alt="{G_{n, \frac 12}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2C+%5Cfrac+12%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n, \frac 12}}"/> distribution, then we randomly select <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/> vertices and we add all the necessary edges to make those edges a clique. In the planted bisection, or stochastic block model, <img alt="{G_{n,p,q}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2Cp%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n,p,q}}"/> distribution, we randomly split a set of <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> vertices into two subsets <img alt="{A,B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%2CB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A,B}"/> of equal size and then we select edges so that edges within <img alt="{A}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{A}"/> and within <img alt="{B}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BB%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{B}"/> have probability <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p}"/>, and edges crossing the cut <img alt="{(A,B)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28A%2CB%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(A,B)}"/> have probability <img alt="{q}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{q}"/>, with <img alt="{p&gt; q}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%3E+q%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p&gt; q}"/>.</p>
<p>
A graph sampled from the planted clique distribution is a lot like a <img alt="{G_{n, \frac 12}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2C+%5Cfrac+12%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n, \frac 12}}"/> graph, except for the extra edges that create a large clique, and a graph sampled from the <img alt="{G_{n, p, q}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2C+p%2C+q%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n, p, q}}"/> distribution is a lot like a <img alt="{G_{n, \frac {p+q} 2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2C+%5Cfrac+%7Bp%2Bq%7D+2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n, \frac {p+q} 2}}"/> random graph, except for the cut <img alt="{(A,B)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28A%2CB%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(A,B)}"/>, which is crossed by roughly <img alt="{\frac 14 \cdot qn^2}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac+14+%5Ccdot+qn%5E2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\frac 14 \cdot qn^2}"/> edges, is sparser than a typical balanced cut, which is crossed by about <img alt="{\frac 18 \cdot (pn^2 + qn^2)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac+18+%5Ccdot+%28pn%5E2+%2B+qn%5E2%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\frac 18 \cdot (pn^2 + qn^2)}"/> edges. </p>
<p><b>1. The Search Problem, the Decision Problem, and the Certification Problem </b></p>
<p/><p>
Having defined these distributions, our problem of interest is:</p>
<ul>
<li> The <em>search</em> problem: given a sample from the planted distribution, find the planted solution, or an approximation, in a useful sense, of the planted solution.
</li></ul>
<p>
Usually, in planted problems, the solution that is planted is of a kind that exists only with negligible, or even exponentially small, probability in the “non-planted” distribution that we start from. Thus, an algorithm that solves the search problem with noticeable probability <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p}"/> also solve the following problem with probability close to <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p}"/>:</p>
<ul>
<li> The <em>decision</em> problem of distinguishing a sample of the planted distribution from a sample of the analogous “non-planted” distribution.
</li></ul>
<p>
For small values of <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p}"/>, achieving distinguishing probability <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p}"/> in the decision problem can be (seemingly) much easier than solving the search problem with probabiltiy <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p}"/>. For example, if <img alt="{k= o(\sqrt n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%3D+o%28%5Csqrt+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k= o(\sqrt n)}"/>, we do not know any polynomial time algorithm that solves the search problem for planted <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/>-clique with <img alt="{\geq 1/poly(n)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgeq+1%2Fpoly%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\geq 1/poly(n)}"/> success probability, but checking whether the number of edges is <img alt="{\geq \frac 12 {n \choose 2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgeq+%5Cfrac+12+%7Bn+%5Cchoose+2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\geq \frac 12 {n \choose 2}}"/> solves the distinguishing problem with distinguishing probability order of <img alt="{k^2/n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%5E2%2Fn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k^2/n}"/>. Even if we change our definition of our “non-planted” distribution so that it has <img alt="{\frac 12 {n \choose 2} + \frac 12 {k \choose 2}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cfrac+12+%7Bn+%5Cchoose+2%7D+%2B+%5Cfrac+12+%7Bk+%5Cchoose+2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\frac 12 {n \choose 2} + \frac 12 {k \choose 2}}"/> edges on average, the number of triangles can still be used to noticeably distinguish it from the non-planted distribution. </p>
<p>
In the stochastic block model <img alt="{G_{n, p, q}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2C+p%2C+q%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n, p, q}}"/> if we call <img alt="{a= 2p/n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%3D+2p%2Fn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a= 2p/n}"/> the expected “internal” degree of a vertex (that is, the number of neighbors on the same side of the planted cut) and <img alt="{b = 2q/n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb+%3D+2q%2Fn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b = 2q/n}"/> the expected “external” degree, and if <img alt="{a}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a}"/> and <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b}"/> are absolute constants, then it is known that the search problem is not solvable, even in an approximate sense, when <img alt="{a-b &lt; \sqrt{a+b}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba-b+%3C+%5Csqrt%7Ba%2Bb%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a-b &lt; \sqrt{a+b}}"/>, as proved by <a href="https://arxiv.org/pdf/1202.1499.pdf">Mossel, Neeman and Sly</a> (note that our definition of <img alt="{a}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a}"/> and <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b}"/> is off from theirs by a factor of 2). Provided that <img alt="{a}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a}"/> and <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b}"/> are absolute constants and <img alt="{a&gt; b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%3E+b%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a&gt; b}"/>, however, one can distinguish <img alt="{G_{n, p, q}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2C+p%2C+q%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n, p, q}}"/> from <img alt="{G_{n, \frac 12 \cdot (p+ q) }}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2C+%5Cfrac+12+%5Ccdot+%28p%2B+q%29+%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n, \frac 12 \cdot (p+ q) }}"/> with constant distinguishing probability. This is because the number of triangles (counted as ordered sequences of three vertices) in <img alt="{G_{n, \frac 12 \cdot (p+ q) }}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2C+%5Cfrac+12+%5Ccdot+%28p%2B+q%29+%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n, \frac 12 \cdot (p+ q) }}"/> is, on average, <img alt="{(a+b)^3}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28a%2Bb%29%5E3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(a+b)^3}"/>, while it is, on average, <img alt="{(a+b)^3 + (a-b)^3}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%28a%2Bb%29%5E3+%2B+%28a-b%29%5E3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{(a+b)^3 + (a-b)^3}"/> in <img alt="{G_{n, p, q}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2C+p%2C+q%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n, p, q}}"/>; furthermore, the variance of both distributions is an absolute constants (those calculations appear in the above paper of Mossel et al.). Now if we have two nonnegative integer random variables <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X}"/> and <img alt="{Y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Y}"/> such that the expectations and variances of both are absolute constants and <img alt="{\mathop{\mathbb E} X - \mathop{\mathbb E} Y &gt; \Omega(1)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cmathop%7B%5Cmathbb+E%7D+X+-+%5Cmathop%7B%5Cmathbb+E%7D+Y+%3E+%5COmega%281%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\mathop{\mathbb E} X - \mathop{\mathbb E} Y &gt; \Omega(1)}"/>, then there is a threshold <img alt="{t}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bt%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{t}"/> such that testing whether a number is <img alt="{\geq t}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cgeq+t%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\geq t}"/> is a test that distinguishes <img alt="{X}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{X}"/> and <img alt="{Y}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{Y}"/> with constant probability. </p>
<p>
As far as I am aware, in all the known cases where the decision problem is efficiently solvable with <img alt="{1-o(1)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1-o%281%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1-o(1)}"/> distinguishing probability then it is also known how to efficiently solve the search problem (perhaps approximately) with <img alt="{1-o(1)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1-o%281%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1-o(1)}"/> probability, although algorithms that solve the distinguishing problem don’t always give insights into how to solve the search problem. Mossel et al., for example, show that the decision problem for the stochastic block model is efficiently solvable with <img alt="{1-o(1)}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B1-o%281%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{1-o(1)}"/> distinguishing probability when <img alt="{a-b &gt; \sqrt{a+b}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba-b+%3E+%5Csqrt%7Ba%2Bb%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a-b &gt; \sqrt{a+b}}"/>, by counting the number of simple cycles of length around <img alt="{\log^{1/4} n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Clog%5E%7B1%2F4%7D+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\log^{1/4} n}"/>, and they could use the approach of counting simple cycles to approximate <img alt="{a}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a}"/> and <img alt="{b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{b}"/>, but they could not show how to solve the search problem in the <img alt="{a-b &gt; \sqrt{a+b}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba-b+%3E+%5Csqrt%7Ba%2Bb%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a-b &gt; \sqrt{a+b}}"/> regime, a problem that <a href="https://arxiv.org/abs/1311.4115"> they solved later</a> with additional techniques (the problem was also solved by Massoulie independently).</p>
<p>
In summary, efficiently solving the decision problem is a necessary but not sufficient condition for being able to efficiently solve the search problem, and it is a good first step to understand the complexity of a given planted problem.</p>
<p>
Another approach to distinguish the <img alt="{G_{n, \frac 12}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2C+%5Cfrac+12%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n, \frac 12}}"/> distribution from the planted <img alt="{k}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k}"/>-clique distribution is to able to certify, given a graph sampled from <img alt="{G_{n, \frac 12}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7BG_%7Bn%2C+%5Cfrac+12%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{G_{n, \frac 12}}"/>, that its maximum clique size is <img alt="{\leq k-1}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Cleq+k-1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\leq k-1}"/>, a fact that is going to be true with high probability if <img alt="{k &gt;&gt; 2\log n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bk+%3E%3E+2%5Clog+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{k &gt;&gt; 2\log n}"/>. Assuming that, like in the planted clique problem, we are discussing instances of an optimization problem, we thus have the following problem:</p>
<ul>
<li> The <em>certification</em> problem: given an instance sampled from the “non-planted” distribution, produce a certificate that the optimum value for the instance is worse than the optimum value of all (or all but a negligible fraction of) instances from the planted distribution.
</li></ul>
<p>
Note that if you can solve the certification with probability <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p}"/>, then you can also solve the decision problem with distinguishing probability <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p}"/> (or <img alt="{p}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{p}"/> minus a negligible term, if the certified property is allowed to hold with negligible probability in the planted distribution).</p>
<p>
In some interesting cases, the certification problem appears to be harder than the decision problem and the search problem. </p>
<p>
In the stochastic block model, for example, if one takes the min bisection problem to be the underlying optimization problem, the search problem is solvable (in the sense that one can recover a partition that correlates to the planted partition) whenever <img alt="{a-b &gt; \sqrt{a+b}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba-b+%3E+%5Csqrt%7Ba%2Bb%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a-b &gt; \sqrt{a+b}}"/>, as discussed above, but for <img alt="{a-b}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Ba-b%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{a-b}"/> very close to <img alt="{\sqrt{a+b}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Csqrt%7Ba%2Bb%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{\sqrt{a+b}}"/> it is an open question whether even knowing the value of the min bisection exactly can be used to solve the decision problem.</p>
<p>
Another interesting example is “planted Max 3SAT.” Suppose that we construct a satisfiable instance of 3SAT in the following way: we start from a random assignment to <img alt="{n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{n}"/> variables, and then we pick at random <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/> clauses among the <img alt="{7 {n \choose 3}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B7+%7Bn+%5Cchoose+3%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{7 {n \choose 3}}"/> clauses that are consistent with the “planted” assignment. If <img alt="{m}" class="latex" src="https://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{m}"/> is, say <img alt="{100 n \log n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B100+n+%5Clog+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{100 n \log n}"/>, then it is very easy to solve the search problem (and hence the distinguishing problem): the value of every variable in the planted assignment can be deduced by looking at whether the variable appears more often complemented or not complemented. In the non-planted distribution in which we pick <img alt="{100 n\log n}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B100+n%5Clog+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{100 n\log n}"/> clauses among all the <img alt="{8 {n\choose 3}}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B8+%7Bn%5Cchoose+3%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0" title="{8 {n\choose 3}}"/> possible clauses, however, we don’t know any efficient algorithm that certifies that instance is not satisfiable. Even if we pick clauses that are consistent with both the planted assignment and the negation of the planted assignment (thus eliminating correlations between complementations of variables and the values of the variables in the planted assignment), we still introduce pairwise correlations that can used to find the planted assignment. See the comment by Ryan O’Donnell below for more information.</p>
<p>
When we are dealing with a hard optimization problem, a natural approach is to study efficiently solvable convex <em>relaxations</em> of the problem. One can hope to use a relaxation to solve the <em>certification</em> problem, by showing the relaxation provides a bound to the optimum in non-planted instances that is sufficient to distinguish them from planted instances. One can also hope to use a relaxation to solve the <em>search</em> problem, by showing that the optimum of the relaxation is close, in appropriate sense, to the planted solution, or even that the planted solution is the unique optimum of the relaxation for most planted instances.</p>
<p>
Interestingly, in all the examples that I am aware of, a relaxation has been successfully used to solve the certification problem if and only if it has been successfully used to solve the search problem. Intuitively, if a relaxation does not solve the certification problem, it means that there are feasible solutions in the non-planted case whose cost is already better than the cost of the planted solution, and so the planted solution cannot be the optimum, or close to the optimum, of the relaxation in the planted case. For the other direction, if a relaxation solves the certification problem, then the proof that it does can usually be lifted to a proof that all solutions that don’t “correlate” (in an appropriate sense) with the planted solution cannot be optimal solutions in the planted case, allowing one to conclude that the optimum of the relaxation in the planted case correlates with the planted solution.</p>
<p>
In summary, although the certification problem can be harder than the search problem and the decision problem, if one wants to use a relaxation to solve the search problem then it is good to start understanding whether the relaxation solves the certification problem.</p>
<p>
In the next post we will discuss how we can efficiently certify properties of random instances of optimization problems, and how to turn those results into algorithms that find planted solutions. We will see the key results involve showing that certain matrices associated to the instances are close to their expectations in appropriately defined norms. </p>
<p/></div></content><updated planet:format="May 07, 2018 12:59 AM">2018-05-07T00:59:01Z</updated><published planet:format="May 07, 2018 12:59 AM">2018-05-07T00:59:01Z</published><category term="BWCA"/><category term="planted clique"/><category term="stochastic block model"/><author><name>luca</name></author><source><id>https://lucatrevisan.wordpress.com</id><logo>https://s0.wp.com/i/buttonw-com.png</logo><link href="https://lucatrevisan.wordpress.com/feed/" rel="self" type="application/atom+xml"/><link href="https://lucatrevisan.wordpress.com" rel="alternate" type="text/html"/><link href="https://lucatrevisan.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/><link href="https://lucatrevisan.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/><subtitle>&quot;Marge, I agree with you - in theory. In theory, communism works. In theory.&quot; -- Homer Simpson</subtitle><title>in   theory</title><updated planet:format="December 17, 2018 05:28 AM">2018-12-17T05:28:59Z</updated><planet:module>toc</planet:module><planet:format>atom10</planet:format><planet:http_last_modified>Thu, 06 Dec 2018 16:46:05 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:items_per_page>40</planet:items_per_page><planet:css-id>luca-trevisan</planet:css-id><planet:face>trevisan.jpeg</planet:face><planet:name>Luca Trevisan</planet:name><planet:http_location>https://lucatrevisan.wordpress.com/feed/</planet:http_location><planet:http_status>301</planet:http_status></source></entry>
