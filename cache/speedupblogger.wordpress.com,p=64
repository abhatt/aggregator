<?xml version="1.0" encoding="utf-8"?><entry xml:lang="en" xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>http://speedupblogger.wordpress.com/?p=64</id><link href="https://speedupblogger.wordpress.com/2012/09/13/several-comments-from-manuel-blum/" rel="alternate" type="text/html"/><title>Several Comments from Manuel Blum</title><summary>Dear Hunter — What a nice idea. And many of your examples below are both new to me and quite interesting. Thanks! And good luck! — manuel … While thinking about your blog, two things occurred to me that might be worth mentioning: 1. If a function f(x) has speedup, then any lower bound on […]<div class="commentbar"><p/></div></summary><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p>Dear Hunter — What a nice idea. And many of your examples below are both new to me and quite interesting. Thanks! And good luck! — manuel<br/>
…<br/>
While thinking about your blog, two things occurred to me that might be worth mentioning:</p>
<p>1. If a function f(x) has speedup, then any lower bound on its computation can be improved by a corresponding amount. For example, if every program for computing f(x) can be sped up to run twice as fast (on all but a finite number of integers), then any lower bound G(x) on its run time can be raised from G(x) to 2G(x) (on all but a finite number of integers). For another example, if any program for computing f(x) can be sped up by a sqrt (so that any run time F(x) can be reduced to a runtime of at most sqrt(F(x)), then any lower bound G(x)on its run time can be raised to [G(x)]^2, etc. This is all easy to see.</p>
<p>2. Much harder to see is a curious relation between speedup and inductive inference, which has to do with inferring an algorithm from observation of the sequence of integers that it generates. Theorem: there exists an inductive inference algorithm for inferring all sequences that have optimal algorithms (i.e. have programs that cannot be sped up)! This was quite a surprise (and a breakthrough) for me. Still is. To explain it though, I’d have to explain inductive inference, etc, and this would take me a bit of time. Some day…</p>
<p>Anyway, thanks again for your blog.</p>
<p>Best wishes and warm regards,</p>
<p>manuel (blum)</p></div></content><updated planet:format="September 13, 2012 03:20 PM">2012-09-13T15:20:45Z</updated><published planet:format="September 13, 2012 03:20 PM">2012-09-13T15:20:45Z</published><category term="General"/><category term="Lower bounds"/><category term="Optimal algorithms"/><author><name>huntermonroe</name></author><source><id>https://speedupblogger.wordpress.com</id><logo>https://s0.wp.com/i/buttonw-com.png</logo><link href="https://speedupblogger.wordpress.com/feed/" rel="self" type="application/atom+xml"/><link href="https://speedupblogger.wordpress.com" rel="alternate" type="text/html"/><link href="https://speedupblogger.wordpress.com/osd.xml" rel="search" type="application/opensearchdescription+xml"/><link href="https://speedupblogger.wordpress.com/?pushpress=hub" rel="hub" type="text/html"/><subtitle>Are there familiar computational problems with no best algorithm?</subtitle><title>Speedup in Computational Complexity</title><updated planet:format="December 17, 2018 05:29 AM">2018-12-17T05:29:56Z</updated><planet:module>toc</planet:module><planet:format>atom10</planet:format><planet:http_last_modified>Mon, 13 Aug 2018 19:00:30 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:items_per_page>40</planet:items_per_page><planet:css-id>speedup-in-computational-complexity</planet:css-id><planet:face>speedup.png</planet:face><planet:name>Speedup in Computational Complexity</planet:name><planet:http_location>https://speedupblogger.wordpress.com/feed/</planet:http_location><planet:http_status>301</planet:http_status></source></entry>
