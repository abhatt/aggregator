<entry xml:lang="en-us" xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>http://arxiv.org/abs/1812.05306</id><link href="http://arxiv.org/abs/1812.05306" rel="alternate" type="text/html"/><title>Optimal Algorithm for Profiling Dynamic Arrays with Finite Values</title><feedworld_mtime>1544918400</feedworld_mtime><summary type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><b>Authors: </b><a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yang:Dingcheng.html">Dingcheng Yang</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/y/Yu:Wenjian.html">Wenjian Yu</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/d/Deng:Junhui.html">Junhui Deng</a>, <a href="http://www.informatik.uni-trier.de/~ley/db/indices/a-tree/l/Liu:Shenghua.html">Shenghua Liu</a> <br/><b>Download:</b> <a href="http://arxiv.org/pdf/1812.05306">PDF</a><br/><b>Abstract: </b>How can one quickly answer the most and top popular objects at any time,
given a large log stream in a system of billions of users? It is equivalent to
find the mode and top-frequent elements in a dynamic array corresponding to the
log stream. However, most existing work either restrain the dynamic array
within a sliding window, or do not take advantages of only one element can be
added or removed in a log stream. Therefore, we propose a profiling algorithm,
named S-Profile, which is of $O(1)$ time complexity for every updating of the
dynamic array, and optimal in terms of computational complexity. With the
profiling results, answering the queries on the statistics of dynamic array
becomes trivial and fast. With the experiments of various settings of dynamic
arrays, our accurate S-Profile algorithm outperforms the well-known methods,
showing at least 2X speedup to the heap based approach and 13X or larger
speedup to the balanced tree based approach.
</p></div><div class="commentbar"><p/></div></summary><updated planet:format="December 16, 2018 12:00 AM">2018-12-16T00:00:00Z</updated><author><name></name></author><source><id>http://arxiv.org/</id><category term="Computer Science -- Data Structures and Algorithms"/><link href="http://arxiv.org/" rel="alternate" type="text/html"/><link href="http://export.arxiv.org/rss/cs.DS" rel="self" type="application/rdf+xml"/><subtitle>Computer Science -- Data Structures and Algorithms (cs.DS) updates on the arXiv.org e-print archive</subtitle><title>cs.DS updates on arXiv.org</title><updated planet:format="December 14, 2018 01:30 AM">2018-12-14T01:30:00Z</updated><planet:module>toc</planet:module><planet:format>rss10</planet:format><planet:http_etag>&quot;Fri, 14 Dec 2018 01:30:00 GMT&quot;, &quot;1544751000&quot;</planet:http_etag><planet:filters>arXiv.py</planet:filters><planet:name>arXiv.org: Data structures and Algorithms</planet:name><planet:http_last_modified>Fri, 14 Dec 2018 01:30:00 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:css-id>arxiv-org-data-structures-and-algorithms</planet:css-id><planet:items_per_page>40</planet:items_per_page><planet:face>corr.jpeg</planet:face><planet:http_status>200</planet:http_status></source></entry>
