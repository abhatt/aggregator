<?xml version="1.0" encoding="utf-8"?><entry xml:lang="en" xmlns="http://www.w3.org/2005/Atom" xmlns:planet="http://planet.intertwingly.net/"><id>http://windowsontheory.org/?p=6311</id><link href="https://windowsontheory.org/2018/12/07/quantum-error-correction/" rel="alternate" type="text/html"/><title>Peter Shor on Quantum Error Correction</title><summary>[Guest post by Annie Wei who scribed Peter Shor’s lecture in our physics and computation seminar. See here for all the posts of this seminar. –Boaz] On October 19, we were lucky enough to have Professor Peter Shor give a guest lecture about quantum error correcting codes. In this blog post, I (Annie Wei) will […]<div class="commentbar"><p/></div></summary><content type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p><em>[Guest post by Annie Wei who scribed Peter Shor’s lecture in our <a href="https://www.boazbarak.org/fall18seminar/">physics and computation seminar</a>. See <a href="https://windowsontheory.org/category/physics/">here</a> for all the posts of this seminar. –Boaz]</em></p>
<p>On October 19, we were lucky enough to have Professor Peter Shor give a guest lecture about quantum error correcting codes. In this blog post, I (Annie Wei) will present a summary of this guest lecture, which builds up quantum error correcting codes starting from classical coding theory. We will start by reviewing an example from classical error correction to motivate the similarities and differences when compared against the quantum case, before moving into quantum error correction and quantum channels. Note that we do assume a very basic familiarity with quantum mechanics, such as that which might be found <a href="https://people.eecs.berkeley.edu/~vazirani/f16quantum/lec1.pdf">here</a> or <a href="http://www.theory.caltech.edu/people/preskill/ph229/notes/chap2.pdf">here</a>.</p>
<p><strong>1. Motivation</strong><br/>
We are interested in quantum error correction, ultimately, because any real-world computing device needs to be able to tolerate noise. Theoretical work on quantum algorithms has shown that quantum computers have the potential to offer speedups for a variety of problems, but in practice we’d also like to be able to eventually build and operate real quantum computers. We need to be able to protect against any decoherence that occurs when a quantum computer interacts with the environment, and we need to be able to protect against the accumulation of small gate errors since quantum gates need to be unitary operators.</p>
<p>In error correction the idea is to protect against noise by encoding information in a way that is resistant to noise, usually by adding some redundancy to the message. The redundancy then ensures that enough information remains, even after noise corruption, so that decoding will allow us to recover our original message. This is what is done in classical error correction schemes.</p>
<p>Unfortunately, it’s not obvious that quantum error correction is possible. One obstacle is that errors are continuous, since a continuum of operations can be applied to a qubit, so a priori it might seem like identifying and correcting an error would require infinite resources. In a later section we show how this problem, that of identifying quantum errors, can be overcome. Another obstacle is the fact that, as we’ve stated, classical error correction works by adding redundancy to a message. This might seem impossible to perform in a quantum setting due to the No Cloning Theorem, which states the following:</p>
<p><strong>Theorem</strong> (<em>No Cloning Theorem</em>): Performing the mapping</p>
<p><img alt="|\psi\rangle|0\rangle\mapsto|\psi\rangle|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Cpsi%5Crangle%7C0%5Crangle%5Cmapsto%7C%5Cpsi%5Crangle%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\psi\rangle|0\rangle\mapsto|\psi\rangle|\psi\rangle"/></p>
<p>is not a permissible quantum operation.</p>
<p><strong>Proof</strong>: We will use unitarity, which says that a quantum operation specified by a unitary matrix <img alt="U" class="latex" src="https://s0.wp.com/latex.php?latex=U&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="U"/> must satisfy</p>
<p><img alt="\langle\phi|U^{\dagger}U|\psi\rangle = \langle\phi|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Clangle%5Cphi%7CU%5E%7B%5Cdagger%7DU%7C%5Cpsi%5Crangle+%3D+%5Clangle%5Cphi%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\langle\phi|U^{\dagger}U|\psi\rangle = \langle\phi|\psi\rangle"/>.</p>
<p>(This ensures that the normalization of the state <img alt="|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\psi\rangle"/> is always preserved, i.e. that <img alt="|\langle\psi|\psi\rangle|^2=1" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Clangle%5Cpsi%7C%5Cpsi%5Crangle%7C%5E2%3D1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\langle\psi|\psi\rangle|^2=1"/>, which is equivalent to the conservation of probability.)</p>
<p>Now suppose that we can perform the operation</p>
<p><img alt="U(|\psi\rangle|0\rangle)=|\psi\rangle|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=U%28%7C%5Cpsi%5Crangle%7C0%5Crangle%29%3D%7C%5Cpsi%5Crangle%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="U(|\psi\rangle|0\rangle)=|\psi\rangle|\psi\rangle"/>.</p>
<p>Then, letting</p>
<p><img alt="(\langle\phi|\langle 0|)(|\psi\rangle|0\rangle)=\alpha" class="latex" src="https://s0.wp.com/latex.php?latex=%28%5Clangle%5Cphi%7C%5Clangle+0%7C%29%28%7C%5Cpsi%5Crangle%7C0%5Crangle%29%3D%5Calpha&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="(\langle\phi|\langle 0|)(|\psi\rangle|0\rangle)=\alpha"/>,</p>
<p>we note that by unitarity</p>
<p><img alt="(\langle\phi|\langle 0|)(|\psi\rangle |0\rangle)=\alpha(\langle\phi|\langle 0|)U^{\dagger}U(|\psi\rangle|0\rangle)" class="latex" src="https://s0.wp.com/latex.php?latex=%28%5Clangle%5Cphi%7C%5Clangle+0%7C%29%28%7C%5Cpsi%5Crangle+%7C0%5Crangle%29%3D%5Calpha%28%5Clangle%5Cphi%7C%5Clangle+0%7C%29U%5E%7B%5Cdagger%7DU%28%7C%5Cpsi%5Crangle%7C0%5Crangle%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="(\langle\phi|\langle 0|)(|\psi\rangle |0\rangle)=\alpha(\langle\phi|\langle 0|)U^{\dagger}U(|\psi\rangle|0\rangle)"/>.</p>
<p>But</p>
<p><img alt="(\langle\phi|\langle 0|)U^{\dagger}U(|\psi\rangle|0\rangle)=(\langle\phi|\langle\phi|)(|\psi\rangle|\psi\rangle)=\alpha^2" class="latex" src="https://s0.wp.com/latex.php?latex=%28%5Clangle%5Cphi%7C%5Clangle+0%7C%29U%5E%7B%5Cdagger%7DU%28%7C%5Cpsi%5Crangle%7C0%5Crangle%29%3D%28%5Clangle%5Cphi%7C%5Clangle%5Cphi%7C%29%28%7C%5Cpsi%5Crangle%7C%5Cpsi%5Crangle%29%3D%5Calpha%5E2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="(\langle\phi|\langle 0|)U^{\dagger}U(|\psi\rangle|0\rangle)=(\langle\phi|\langle\phi|)(|\psi\rangle|\psi\rangle)=\alpha^2"/>,</p>
<p>and in general <img alt="\alpha\neq\alpha^2" class="latex" src="https://s0.wp.com/latex.php?latex=%5Calpha%5Cneq%5Calpha%5E2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\alpha\neq\alpha^2"/>, so we have a contradiction.</p>
<p>How do we get around this apparent contradiction? To do so, note that the no-cloning theorem only prohibits the copying of non-orthogonal quantum states. With orthogonal quantum states, either <img alt="\alpha=0" class="latex" src="https://s0.wp.com/latex.php?latex=%5Calpha%3D0&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\alpha=0"/> or <img alt="\alpha=1" class="latex" src="https://s0.wp.com/latex.php?latex=%5Calpha%3D1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\alpha=1"/>, so we don’t run into a contradiction. This also explains why it is possible to copy classical information, which we can think of as orthogonal quantum states.</p>
<p>So how do we actually protect quantum information from noise? In the next section we first review classical error correction, as ideas from the classical setting re-appear in the quantum setting, and then we move into quantum error correction.</p>
<p><strong>2. Review of Classical Error Correction</strong><br/>
First we start by reviewing classical error correction. In classical error correction we generally have a message that we encode, send through a noisy channel, and then decode, in the following schematic process:</p>
<p><img alt="fig1.png" class="alignnone size-full wp-image-6312" src="https://windowsontheory.files.wordpress.com/2018/12/fig1.png?w=600"/><br/>
In an effective error correction scheme, the decoding process should allow us to identify any errors that occurred when our message passed through the noisy channel, which then tells us how to correct the errors. The formalism that allows us to do so is the following: we first define a <img alt="r\times n" class="latex" src="https://s0.wp.com/latex.php?latex=r%5Ctimes+n&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="r\times n"/> encoding matrix <img alt="G" class="latex" src="https://s0.wp.com/latex.php?latex=G&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="G"/> that takes a message <img alt="m" class="latex" src="https://s0.wp.com/latex.php?latex=m&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="m"/> of length <img alt="r" class="latex" src="https://s0.wp.com/latex.php?latex=r&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="r"/> and converts it to a codeword <img alt="c" class="latex" src="https://s0.wp.com/latex.php?latex=c&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="c"/> of length <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="n"/>, where the codewords make up the span of the rows of <img alt="G" class="latex" src="https://s0.wp.com/latex.php?latex=G&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="G"/>. An example of such a matrix is</p>
<p><img alt="G=\left(\begin{array}{ccccccc}0&amp;0&amp;0&amp;1&amp;1&amp;1&amp;1\\1&amp;0&amp;1&amp;0&amp;1&amp;0&amp;1\\0&amp;1&amp;1&amp;0&amp;0&amp;1&amp;1\\1&amp;1&amp;1&amp;1&amp;1&amp;1&amp;1\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=G%3D%5Cleft%28%5Cbegin%7Barray%7D%7Bccccccc%7D0%260%260%261%261%261%261%5C%5C1%260%261%260%261%260%261%5C%5C0%261%261%260%260%261%261%5C%5C1%261%261%261%261%261%261%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="G=\left(\begin{array}{ccccccc}0&amp;0&amp;0&amp;1&amp;1&amp;1&amp;1\\1&amp;0&amp;1&amp;0&amp;1&amp;0&amp;1\\0&amp;1&amp;1&amp;0&amp;0&amp;1&amp;1\\1&amp;1&amp;1&amp;1&amp;1&amp;1&amp;1\end{array}\right)"/>,</p>
<p>corresponding to the 7-bit Hamming codes, which encodes a 4-bit message as a 7-bit codeword. Note that this code has distance 3 since each of the rows in <img alt="G" class="latex" src="https://s0.wp.com/latex.php?latex=G&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="G"/> differ in at most 3 spots, which means that it can correct at most 1 error (the number of errors that can be corrected is given by half the code distance).</p>
<p>We also define the parity check matrix <img alt="H" class="latex" src="https://s0.wp.com/latex.php?latex=H&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H"/> to be the matrix that satisfies</p>
<p><img alt="GH^T=0" class="latex" src="https://s0.wp.com/latex.php?latex=GH%5ET%3D0&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="GH^T=0"/>.</p>
<p>For example, to define <img alt="H" class="latex" src="https://s0.wp.com/latex.php?latex=H&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H"/> corresponding to the <img alt="G" class="latex" src="https://s0.wp.com/latex.php?latex=G&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="G"/> we defined for the 7-bit Hamming code, we could take</p>
<p><img alt="H=\left(\begin{array}{ccccccc}0&amp;0&amp;0&amp;1&amp;1&amp;1&amp;1\\1&amp;0&amp;1&amp;0&amp;1&amp;0&amp;1\\0&amp;1&amp;1&amp;0&amp;0&amp;1&amp;1\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=H%3D%5Cleft%28%5Cbegin%7Barray%7D%7Bccccccc%7D0%260%260%261%261%261%261%5C%5C1%260%261%260%261%260%261%5C%5C0%261%261%260%260%261%261%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H=\left(\begin{array}{ccccccc}0&amp;0&amp;0&amp;1&amp;1&amp;1&amp;1\\1&amp;0&amp;1&amp;0&amp;1&amp;0&amp;1\\0&amp;1&amp;1&amp;0&amp;0&amp;1&amp;1\end{array}\right)"/>.</p>
<p>Then we may decode <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x"/>, a 7-bit string, in the following manner. Say that</p>
<p><img alt="x=c+e" class="latex" src="https://s0.wp.com/latex.php?latex=x%3Dc%2Be&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x=c+e"/>,</p>
<p>where <img alt="c" class="latex" src="https://s0.wp.com/latex.php?latex=c&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="c"/> is a codeword and <img alt="e" class="latex" src="https://s0.wp.com/latex.php?latex=e&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="e"/> is the 1-bit error we wish to correct. Then</p>
<p><img alt="xH^T=(c+e)H^T=eH^T" class="latex" src="https://s0.wp.com/latex.php?latex=xH%5ET%3D%28c%2Be%29H%5ET%3DeH%5ET&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="xH^T=(c+e)H^T=eH^T"/>.</p>
<p>Here <img alt="eH^T" class="latex" src="https://s0.wp.com/latex.php?latex=eH%5ET&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="eH^T"/> uniquely identifies the error and is known as the <em>error syndrome</em>. Having it tells us how to correct the error. Thus our error correction scheme consists of the following steps:</p>
<ol>
<li>Encode a <img alt="r" class="latex" src="https://s0.wp.com/latex.php?latex=r&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="r"/>-bit message <img alt="m" class="latex" src="https://s0.wp.com/latex.php?latex=m&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="m"/> by multiplying by <img alt="G" class="latex" src="https://s0.wp.com/latex.php?latex=G&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="G"/> to obtain codeword <img alt="mG=c" class="latex" src="https://s0.wp.com/latex.php?latex=mG%3Dc&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="mG=c"/>.</li>
<li>Send the message through channel generating error <img alt="e" class="latex" src="https://s0.wp.com/latex.php?latex=e&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="e"/>, resulting in the string <img alt="x=c+e" class="latex" src="https://s0.wp.com/latex.php?latex=x%3Dc%2Be&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x=c+e"/>.</li>
<li>Multiply by <img alt="H^T" class="latex" src="https://s0.wp.com/latex.php?latex=H%5ET&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H^T"/> to obtain the <em>error syndrome</em> <img alt="eH^T" class="latex" src="https://s0.wp.com/latex.php?latex=eH%5ET&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="eH^T"/>.</li>
<li>Correct error <img alt="e" class="latex" src="https://s0.wp.com/latex.php?latex=e&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="e"/> to obtain <img alt="c" class="latex" src="https://s0.wp.com/latex.php?latex=c&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="c"/>.</li>
</ol>
<p>Having concluded our quick review of classical error correction, we now look at the theory of quantum error correction.</p>
<p><strong>3. Quantum Error Correction</strong><br/>
In this section we introduce quantum error correction by directly constructing the 9-qubit code and the 7-qubit code. Then we introduce the more general formalism of CSS codes, which encompasses both the 9-qubit and 7-qubit codes, before introducing the stabilizer formalism, which tells us how we might construct a CSS code.</p>
<p><strong>3.1. Preliminaries</strong><br/>
First we introduce some tools that we will need in this section.</p>
<p><strong>3.1.1. Pauli Matrices</strong><br/>
The Pauli matrices are a set of 2-by-2 matrices that form an orthogonal basis for the 2-by-2 Hermitian matrices, where a Hermitian matrix <img alt="H" class="latex" src="https://s0.wp.com/latex.php?latex=H&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H"/> satisfies <img alt="H^{\dagger}=H" class="latex" src="https://s0.wp.com/latex.php?latex=H%5E%7B%5Cdagger%7D%3DH&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H^{\dagger}=H"/>. Note that we can form larger Hilbert spaces by taking the tensor product of smaller Hilbert spaces, so in particular taking the <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="k"/>-fold tensor product of Pauli matrices gives us a basis for the <img alt="2^k" class="latex" src="https://s0.wp.com/latex.php?latex=2%5Ek&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2^k"/>-by-<img alt="2^k" class="latex" src="https://s0.wp.com/latex.php?latex=2%5Ek&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2^k"/> Hermitian matrices. Note also that generally, in quantum mechanics, we are interested in Hermitian matrices because they can be used to represent measurements, and because unitary matrices, which can be used to represent probability-preserving quantum operations, can be obtained by exponentiating Hermitian matrices (that is, every unitary matrix <img alt="U" class="latex" src="https://s0.wp.com/latex.php?latex=U&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="U"/> can be written in the form <img alt="U=e^{iH}" class="latex" src="https://s0.wp.com/latex.php?latex=U%3De%5E%7BiH%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="U=e^{iH}"/> for <img alt="H" class="latex" src="https://s0.wp.com/latex.php?latex=H&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H"/> a Hermitian matrix).</p>
<p>The Pauli matrices are given by</p>
<p><img alt="\sigma_x\equiv X\equiv\left(\begin{array}{cc}0&amp;1\\1&amp;0\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_x%5Cequiv+X%5Cequiv%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D0%261%5C%5C1%260%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_x\equiv X\equiv\left(\begin{array}{cc}0&amp;1\\1&amp;0\end{array}\right)"/></p>
<p><img alt="\sigma_y\equiv Y\equiv\left(\begin{array}{cc}0&amp;-i\\i&amp;0\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_y%5Cequiv+Y%5Cequiv%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D0%26-i%5C%5Ci%260%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_y\equiv Y\equiv\left(\begin{array}{cc}0&amp;-i\\i&amp;0\end{array}\right)"/></p>
<p><img alt="\sigma_z\equiv Z\equiv\left(\begin{array}{cc}1&amp;0\\0&amp;-1\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_z%5Cequiv+Z%5Cequiv%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D1%260%5C%5C0%26-1%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_z\equiv Z\equiv\left(\begin{array}{cc}1&amp;0\\0&amp;-1\end{array}\right)"/>.</p>
<p>By direction computation we can show that they satisfy the relations</p>
<p><img alt="X^2=Y^2=Z^2=I" class="latex" src="https://s0.wp.com/latex.php?latex=X%5E2%3DY%5E2%3DZ%5E2%3DI&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X^2=Y^2=Z^2=I"/></p>
<p><img alt="ZX=-XZ=iY" class="latex" src="https://s0.wp.com/latex.php?latex=ZX%3D-XZ%3DiY&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="ZX=-XZ=iY"/></p>
<p><img alt="YZ=-ZY=iX" class="latex" src="https://s0.wp.com/latex.php?latex=YZ%3D-ZY%3DiX&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="YZ=-ZY=iX"/></p>
<p><img alt="XY=-YX=iZ" class="latex" src="https://s0.wp.com/latex.php?latex=XY%3D-YX%3DiZ&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="XY=-YX=iZ"/>.</p>
<p><strong>3.1.2. Von Neumann Measurements</strong><br/>
We will also need the concept of a Von Neumann measurement. A Von Neumann measurement is given by a set of projection matrices <img alt="\{E_1, E_2, ..., E_k\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7BE_1%2C+E_2%2C+...%2C+E_k%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{E_1, E_2, ..., E_k\}"/> satisfying</p>
<p><img alt="\sum_{i=1}^k E_i=I" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csum_%7Bi%3D1%7D%5Ek+E_i%3DI&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sum_{i=1}^k E_i=I"/>.</p>
<p>That is, the projectors partition a Hilbert space <img alt="{\cal H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7B%5Ccal+H%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="{\cal H}"/> into <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="k"/> subspaces. Then, given any state <img alt="|\psi\rangle\in{\cal H}" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Cpsi%5Crangle%5Cin%7B%5Ccal+H%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\psi\rangle\in{\cal H}"/>, when we perform a measurement using these projectors we obtain the measurement result corresponding to <img alt="E_i" class="latex" src="https://s0.wp.com/latex.php?latex=E_i&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="E_i"/>, with corresponding post-measurement state</p>
<p><img alt="\frac{E_i|\psi\rangle}{||E_i|\psi\rangle||}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cfrac%7BE_i%7C%5Cpsi%5Crangle%7D%7B%7C%7CE_i%7C%5Cpsi%5Crangle%7C%7C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\frac{E_i|\psi\rangle}{||E_i|\psi\rangle||}"/>,</p>
<p>with probability <img alt="\langle\psi|E_i|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Clangle%5Cpsi%7CE_i%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\langle\psi|E_i|\psi\rangle"/>.</p>
<p><strong>3.2. First Attempt at a Quantum Code</strong><br/>
Now we make a first attempt at coming up with a quantum code, noting that our efforts and adjustments will ultimately culminate in the 9-qubit code. Starting with the simplest possible idea, we take inspiration from the classical repetition code, which maps</p>
<p><img alt="0\mapsto 000" class="latex" src="https://s0.wp.com/latex.php?latex=0%5Cmapsto+000&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="0\mapsto 000"/></p>
<p><img alt="1\mapsto 111" class="latex" src="https://s0.wp.com/latex.php?latex=1%5Cmapsto+111&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="1\mapsto 111"/></p>
<p>and decodes by taking the majority of the 3 bits. We consider the quantum analog of this, which maps</p>
<p><img alt="|0\rangle\mapsto|000\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle%5Cmapsto%7C000%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle\mapsto|000\rangle"/></p>
<p><img alt="|1\rangle\mapsto|111\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle%5Cmapsto%7C111%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle\mapsto|111\rangle"/>.</p>
<p>We will take our quantum errors to be the Pauli matrices <img alt="X" class="latex" src="https://s0.wp.com/latex.php?latex=X&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X"/>, <img alt="Y" class="latex" src="https://s0.wp.com/latex.php?latex=Y&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="Y"/>, and <img alt="Z" class="latex" src="https://s0.wp.com/latex.php?latex=Z&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="Z"/>. Then the encoding process, where our message is a quantum state <img alt="\alpha|0\rangle+\beta|1\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Calpha%7C0%5Crangle%2B%5Cbeta%7C1%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\alpha|0\rangle+\beta|1\rangle"/>, looks like the following:</p>
<p><img alt="\alpha|0\rangle+\beta|1\rangle\mapsto\alpha|000\rangle+\beta|111\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Calpha%7C0%5Crangle%2B%5Cbeta%7C1%5Crangle%5Cmapsto%5Calpha%7C000%5Crangle%2B%5Cbeta%7C111%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\alpha|0\rangle+\beta|1\rangle\mapsto\alpha|000\rangle+\beta|111\rangle"/>.</p>
<p>We claim that this code can correct bit errors but not phase errors, which makes it equivalent to the original classical repetition code for error correction. To see this, note that applying an <img alt="X_1" class="latex" src="https://s0.wp.com/latex.php?latex=X_1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X_1"/> error results in the mapping</p>
<p><img alt="\alpha|0\rangle+\beta|1\rangle\mapsto\alpha|100\rangle+\beta|011\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Calpha%7C0%5Crangle%2B%5Cbeta%7C1%5Crangle%5Cmapsto%5Calpha%7C100%5Crangle%2B%5Cbeta%7C011%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\alpha|0\rangle+\beta|1\rangle\mapsto\alpha|100\rangle+\beta|011\rangle"/>.</p>
<p>This can be detected by the von Neumann measurement which projects onto the subspaces</p>
<p><img alt="\{|000\rangle,|111\rangle\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7C000%5Crangle%2C%7C111%5Crangle%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{|000\rangle,|111\rangle\}"/></p>
<p><img alt="\{|011\rangle,|100\rangle\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7C011%5Crangle%2C%7C100%5Crangle%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{|011\rangle,|100\rangle\}"/></p>
<p><img alt="\{|010\rangle,|101\rangle\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7C010%5Crangle%2C%7C101%5Crangle%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{|010\rangle,|101\rangle\}"/></p>
<p><img alt="\{|110\rangle,|001\rangle\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7C110%5Crangle%2C%7C001%5Crangle%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{|110\rangle,|001\rangle\}"/></p>
<p>We could then apply <img alt="\sigma_x" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_x&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_x"/> to the first qubit to correct the error. To see that this doesn’t work for phase errors, note that applying a <img alt="Z_2" class="latex" src="https://s0.wp.com/latex.php?latex=Z_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="Z_2"/> error results in the mapping</p>
<p><img alt="\alpha|0\rangle+\beta|1\rangle\mapsto\alpha|000\rangle-\beta|111\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Calpha%7C0%5Crangle%2B%5Cbeta%7C1%5Crangle%5Cmapsto%5Calpha%7C000%5Crangle-%5Cbeta%7C111%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\alpha|0\rangle+\beta|1\rangle\mapsto\alpha|000\rangle-\beta|111\rangle"/>.</p>
<p>This is a valid encoding of the state <img alt="\alpha|0\rangle-\beta|1\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Calpha%7C0%5Crangle-%5Cbeta%7C1%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\alpha|0\rangle-\beta|1\rangle"/>, so the error is undetectable.</p>
<p>What adjustments can we make so that we’re able to also correct <img alt="Z" class="latex" src="https://s0.wp.com/latex.php?latex=Z&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="Z"/> errors? For this we will introduce the Hadamard matrix, defined as</p>
<p><img alt="H=\frac{1}{\sqrt{2}}\left(\begin{array}{cc}1&amp;1\\1&amp;-1\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=H%3D%5Cfrac%7B1%7D%7B%5Csqrt%7B2%7D%7D%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D1%261%5C%5C1%26-1%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H=\frac{1}{\sqrt{2}}\left(\begin{array}{cc}1&amp;1\\1&amp;-1\end{array}\right)"/></p>
<p>and satisfying</p>
<p><img alt="HX=ZH" class="latex" src="https://s0.wp.com/latex.php?latex=HX%3DZH&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="HX=ZH"/>.</p>
<p>Note in particular that, because <img alt="HX=ZH" class="latex" src="https://s0.wp.com/latex.php?latex=HX%3DZH&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="HX=ZH"/>, the Hadamard matrix turns bit errors into phase errors, and vice versa. This allows us to come up with a code that corrects phase errors by mapping</p>
<p><img alt="H|0\rangle\mapsto H^{\otimes 3}|000\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=H%7C0%5Crangle%5Cmapsto+H%5E%7B%5Cotimes+3%7D%7C000%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H|0\rangle\mapsto H^{\otimes 3}|000\rangle"/></p>
<p><img alt="H|1\rangle\mapsto H^{\otimes 3}|111\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=H%7C1%5Crangle%5Cmapsto+H%5E%7B%5Cotimes+3%7D%7C111%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H|1\rangle\mapsto H^{\otimes 3}|111\rangle"/></p>
<p>or equivalently,</p>
<p><img alt="|0\rangle\mapsto\frac{1}{2}(|000\rangle+|011\rangle+|101\rangle+|110\rangle)" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle%5Cmapsto%5Cfrac%7B1%7D%7B2%7D%28%7C000%5Crangle%2B%7C011%5Crangle%2B%7C101%5Crangle%2B%7C110%5Crangle%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle\mapsto\frac{1}{2}(|000\rangle+|011\rangle+|101\rangle+|110\rangle)"/></p>
<p><img alt="|1\rangle\mapsto\frac{1}{2}(|111\rangle+|100\rangle+|010\rangle+|001\rangle)" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle%5Cmapsto%5Cfrac%7B1%7D%7B2%7D%28%7C111%5Crangle%2B%7C100%5Crangle%2B%7C010%5Crangle%2B%7C001%5Crangle%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle\mapsto\frac{1}{2}(|111\rangle+|100\rangle+|010\rangle+|001\rangle)"/></p>
<p>Now we can concatenate our bit flip code with our phase flip code to take care of both errors. This gives us the 9-qubit code, also known as the Shor code.</p>
<p><strong>3.3. 9-Qubit Code</strong><br/>
In the previous section, we went through the process of constructing the 9-qubit Shor code by considering how to correct both bit flip errors and phase flip errors. Explicitly, the 9-qubit Shor code is given by the following mapping:</p>
<p><img alt="|0\rangle\mapsto|0\rangle_L\equiv\frac{1}{2}(|000000000\rangle+|000111111\rangle+|111000111\rangle+|111111000\rangle)" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle%5Cmapsto%7C0%5Crangle_L%5Cequiv%5Cfrac%7B1%7D%7B2%7D%28%7C000000000%5Crangle%2B%7C000111111%5Crangle%2B%7C111000111%5Crangle%2B%7C111111000%5Crangle%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle\mapsto|0\rangle_L\equiv\frac{1}{2}(|000000000\rangle+|000111111\rangle+|111000111\rangle+|111111000\rangle)"/></p>
<p><img alt="|1\rangle\mapsto|1\rangle_L\equiv\frac{1}{2}(|111111111\rangle+|111000000\rangle+|000111000\rangle+|000000111\rangle)" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle%5Cmapsto%7C1%5Crangle_L%5Cequiv%5Cfrac%7B1%7D%7B2%7D%28%7C111111111%5Crangle%2B%7C111000000%5Crangle%2B%7C000111000%5Crangle%2B%7C000000111%5Crangle%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle\mapsto|1\rangle_L\equiv\frac{1}{2}(|111111111\rangle+|111000000\rangle+|000111000\rangle+|000000111\rangle)"/>.</p>
<p>Here <img alt="|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L"/> and <img alt="|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle_L"/> are known as <em>logical qubits</em>; note that our 9-qubit code essentially represents 1 logical qubit with 9 physical qubits.</p>
<p>Note that by construction this code can correct <img alt="\sigma_x" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_x&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_x"/>, <img alt="\sigma_y" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_y&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_y"/>, and <img alt="\sigma_z" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_z&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_z"/> errors on any one qubit (we’ve already shown by construction that it can correct <img alt="\sigma_x" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_x&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_x"/> and <img alt="\sigma_z" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_z&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_z"/> errors, and <img alt="\sigma_y" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_y&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_y"/> can be obtained as a product of the two). This is also equivalent to the statement that the states <img alt="\sigma_x^{(i)}|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_x%5E%7B%28i%29%7D%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_x^{(i)}|0\rangle_L"/>, <img alt="\sigma_y^{(i)}|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_y%5E%7B%28i%29%7D%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_y^{(i)}|0\rangle_L"/>, <img alt="\sigma_z^{(i)}|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_z%5E%7B%28i%29%7D%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_z^{(i)}|0\rangle_L"/>, <img alt="\sigma_x^{(i)}|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_x%5E%7B%28i%29%7D%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_x^{(i)}|1\rangle_L"/>, <img alt="\sigma_y^{(i)}|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_y%5E%7B%28i%29%7D%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_y^{(i)}|1\rangle_L"/>, and <img alt="\sigma_z^{(i)}|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_z%5E%7B%28i%29%7D%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_z^{(i)}|1\rangle_L"/> are all orthogonal.</p>
<p>Now we have a 1-error quantum code. We claim that such a code can in fact correct any error operation, and that this is a property of all 1-error quantum codes:</p>
<p><strong>Theorem: </strong>Given any possible unitary, measurement, or quantum operation on a one-error quantum code, the code can correct it.</p>
<p><strong>Proof: </strong><img alt="\{I, \sigma_x, \sigma_y, \sigma_z\}^{\otimes t}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7BI%2C+%5Csigma_x%2C+%5Csigma_y%2C+%5Csigma_z%5C%7D%5E%7B%5Cotimes+t%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{I, \sigma_x, \sigma_y, \sigma_z\}^{\otimes t}"/> forms a basis for the <img alt="2\times 2" class="latex" src="https://s0.wp.com/latex.php?latex=2%5Ctimes+2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2\times 2"/> matrices. For errors on <img alt="t" class="latex" src="https://s0.wp.com/latex.php?latex=t&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="t"/> qubits, the code can correct these errors if it can individually correct errors <img alt="\sigma_{w_i}^{(i)}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_%7Bw_i%7D%5E%7B%28i%29%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_{w_i}^{(i)}"/> for <img alt="w_i\in\{x,y,z\}" class="latex" src="https://s0.wp.com/latex.php?latex=w_i%5Cin%5C%7Bx%2Cy%2Cz%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="w_i\in\{x,y,z\}"/>, <img alt="i\in\{1,...,t\}" class="latex" src="https://s0.wp.com/latex.php?latex=i%5Cin%5C%7B1%2C...%2Ct%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="i\in\{1,...,t\}"/>, since <img alt="\{I, \sigma_x, \sigma_y, \sigma_z\}^{\otimes t}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7BI%2C+%5Csigma_x%2C+%5Csigma_y%2C+%5Csigma_z%5C%7D%5E%7B%5Cotimes+t%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{I, \sigma_x, \sigma_y, \sigma_z\}^{\otimes t}"/> forms a basis for <img alt="\mathbb{C}^{2t}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmathbb%7BC%7D%5E%7B2t%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\mathbb{C}^{2t}"/>.</p>
<p><strong>Example: Phase Error</strong> Next we’ll do an example where we consider how we might correct an arbitrary phase error applied to the <img alt="|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L"/> state. Since quantum states are equivalent up to phases, the error operator is given by</p>
<p><img alt="\left(\begin{array}{cc}1&amp;0\\0&amp;e^{i\theta}\end{array}\right)\equiv\left(\begin{array}{cc}e^{-i\theta/2}&amp;0\\0&amp;e^{i\theta/2}\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D1%260%5C%5C0%26e%5E%7Bi%5Ctheta%7D%5Cend%7Barray%7D%5Cright%29%5Cequiv%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7De%5E%7B-i%5Ctheta%2F2%7D%260%5C%5C0%26e%5E%7Bi%5Ctheta%2F2%7D%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\left(\begin{array}{cc}1&amp;0\\0&amp;e^{i\theta}\end{array}\right)\equiv\left(\begin{array}{cc}e^{-i\theta/2}&amp;0\\0&amp;e^{i\theta/2}\end{array}\right)"/>.</p>
<p>Note that this can be rewritten in the <img alt="\{I, \sigma_x, \sigma_y, \sigma_z\}^{\otimes t}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7BI%2C+%5Csigma_x%2C+%5Csigma_y%2C+%5Csigma_z%5C%7D%5E%7B%5Cotimes+t%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{I, \sigma_x, \sigma_y, \sigma_z\}^{\otimes t}"/> basis as</p>
<p><img alt="\left(\begin{array}{cc}e^{-i\theta/2}&amp;0\\0&amp;e^{i\theta/2}\end{array}\right)=\cos\frac{\theta}{2}I-i\sin\frac{\theta}{2}\sigma_z" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7De%5E%7B-i%5Ctheta%2F2%7D%260%5C%5C0%26e%5E%7Bi%5Ctheta%2F2%7D%5Cend%7Barray%7D%5Cright%29%3D%5Ccos%5Cfrac%7B%5Ctheta%7D%7B2%7DI-i%5Csin%5Cfrac%7B%5Ctheta%7D%7B2%7D%5Csigma_z&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\left(\begin{array}{cc}e^{-i\theta/2}&amp;0\\0&amp;e^{i\theta/2}\end{array}\right)=\cos\frac{\theta}{2}I-i\sin\frac{\theta}{2}\sigma_z"/>.</p>
<p>Now, applying this error to <img alt="|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L"/>, we get</p>
<p><img alt="\left(\begin{array}{cc}e^{-i\theta/2}&amp;0\\0&amp;e^{i\theta/2}\end{array}\right)\frac{1}{2}(|000\rangle+|011\rangle+|101\rangle+|110\rangle)=\frac{1}{2}\cos\frac{\theta}{2}(|000\rangle+|011\rangle+|101\rangle+|110\rangle)-\frac{i}{2}\sin\frac{\theta}{2}(|000\rangle-|011\rangle+|101\rangle-|110\rangle)=\cos\frac{\theta}{2}|0\rangle_L-i\sin\frac{\theta}{2}\sigma_z|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7De%5E%7B-i%5Ctheta%2F2%7D%260%5C%5C0%26e%5E%7Bi%5Ctheta%2F2%7D%5Cend%7Barray%7D%5Cright%29%5Cfrac%7B1%7D%7B2%7D%28%7C000%5Crangle%2B%7C011%5Crangle%2B%7C101%5Crangle%2B%7C110%5Crangle%29%3D%5Cfrac%7B1%7D%7B2%7D%5Ccos%5Cfrac%7B%5Ctheta%7D%7B2%7D%28%7C000%5Crangle%2B%7C011%5Crangle%2B%7C101%5Crangle%2B%7C110%5Crangle%29-%5Cfrac%7Bi%7D%7B2%7D%5Csin%5Cfrac%7B%5Ctheta%7D%7B2%7D%28%7C000%5Crangle-%7C011%5Crangle%2B%7C101%5Crangle-%7C110%5Crangle%29%3D%5Ccos%5Cfrac%7B%5Ctheta%7D%7B2%7D%7C0%5Crangle_L-i%5Csin%5Cfrac%7B%5Ctheta%7D%7B2%7D%5Csigma_z%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\left(\begin{array}{cc}e^{-i\theta/2}&amp;0\\0&amp;e^{i\theta/2}\end{array}\right)\frac{1}{2}(|000\rangle+|011\rangle+|101\rangle+|110\rangle)=\frac{1}{2}\cos\frac{\theta}{2}(|000\rangle+|011\rangle+|101\rangle+|110\rangle)-\frac{i}{2}\sin\frac{\theta}{2}(|000\rangle-|011\rangle+|101\rangle-|110\rangle)=\cos\frac{\theta}{2}|0\rangle_L-i\sin\frac{\theta}{2}\sigma_z|0\rangle_L"/>.</p>
<p>After performing a projective measurement, we get state <img alt="|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L"/> with probability <img alt="\cos^2\frac{\theta}{2}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ccos%5E2%5Cfrac%7B%5Ctheta%7D%7B2%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\cos^2\frac{\theta}{2}"/>, in which case we do not need to perform any error correction, and we get <img alt="\sigma_z|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_z%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_z|0\rangle_L"/> with probability <img alt="\sin^2\frac{\theta}{2}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csin%5E2%5Cfrac%7B%5Ctheta%7D%7B2%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sin^2\frac{\theta}{2}"/>, in which case we would know to correct the <img alt="\sigma_z" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_z&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_z"/> error.</p>
<p><strong>3.4. 7-Qubit Code</strong><br/>
Now that we’ve constructed the 9-qubit code and shown that quantum error correction is possible, we might wonder whether it’s possible to do better. For example, we’d like a code that requires fewer qubits. We’ll construct a 7-qubit code that corrects 1 error, defining a mapping to <img alt="|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L"/> and <img alt="|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle_L"/> by taking inspiration from a classical code, as we did for the 9-qubit case.</p>
<p>For this we will need to go back to the example we used to illustration classical error correction. Recall that in classical error correction, we have an encoding matrix <img alt="G" class="latex" src="https://s0.wp.com/latex.php?latex=G&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="G"/> and a parity check matrix <img alt="H" class="latex" src="https://s0.wp.com/latex.php?latex=H&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H"/> satisfying <img alt="GH^T=0" class="latex" src="https://s0.wp.com/latex.php?latex=GH%5ET%3D0&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="GH^T=0"/>, with <img alt="\text{rank}(G)+\text{rank}(H)=n" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctext%7Brank%7D%28G%29%2B%5Ctext%7Brank%7D%28H%29%3Dn&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\text{rank}(G)+\text{rank}(H)=n"/>. We encode a message <img alt="m" class="latex" src="https://s0.wp.com/latex.php?latex=m&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="m"/> to obtain codeword <img alt="mG=c" class="latex" src="https://s0.wp.com/latex.php?latex=mG%3Dc&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="mG=c"/>. After error <img alt="e" class="latex" src="https://s0.wp.com/latex.php?latex=e&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="e"/> is applied, this becomes <img alt="c+e" class="latex" src="https://s0.wp.com/latex.php?latex=c%2Be&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="c+e"/>, from which we can extract the error syndrome <img alt="(c+e)H^T=eH^T" class="latex" src="https://s0.wp.com/latex.php?latex=%28c%2Be%29H%5ET%3DeH%5ET&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="(c+e)H^T=eH^T"/>. We can then apply the appropriate correction to extract <img alt="c" class="latex" src="https://s0.wp.com/latex.php?latex=c&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="c"/> from <img alt="c+e" class="latex" src="https://s0.wp.com/latex.php?latex=c%2Be&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="c+e"/>.</p>
<p>Now we will use the encoding matrix from our classical error correction example, and we will divide our codewords into two sets, <img alt="C_1" class="latex" src="https://s0.wp.com/latex.php?latex=C_1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_1"/> and <img alt="C_1'" class="latex" src="https://s0.wp.com/latex.php?latex=C_1%27&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_1'"/>, given by</p>
<p><img alt="C_1=\left\{\begin{array}{ccccccc}0&amp;0&amp;0&amp;1&amp;1&amp;1&amp;1\\1&amp;0&amp;1&amp;0&amp;1&amp;0&amp;1\\0&amp;1&amp;1&amp;0&amp;0&amp;1&amp;1\end{array}\right." class="latex" src="https://s0.wp.com/latex.php?latex=C_1%3D%5Cleft%5C%7B%5Cbegin%7Barray%7D%7Bccccccc%7D0%260%260%261%261%261%261%5C%5C1%260%261%260%261%260%261%5C%5C0%261%261%260%260%261%261%5Cend%7Barray%7D%5Cright.&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_1=\left\{\begin{array}{ccccccc}0&amp;0&amp;0&amp;1&amp;1&amp;1&amp;1\\1&amp;0&amp;1&amp;0&amp;1&amp;0&amp;1\\0&amp;1&amp;1&amp;0&amp;0&amp;1&amp;1\end{array}\right."/></p>
<p>and</p>
<p><img alt="C_1'=C_1+1111111" class="latex" src="https://s0.wp.com/latex.php?latex=C_1%27%3DC_1%2B1111111&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_1'=C_1+1111111"/>.</p>
<p>Similar to how we approached the 9-qubit case, we will start by defining our code as follows:</p>
<p><img alt="|0\rangle_L\equiv\frac{1}{\sqrt{8}}\sum_{v\in C_1}|v\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L%5Cequiv%5Cfrac%7B1%7D%7B%5Csqrt%7B8%7D%7D%5Csum_%7Bv%5Cin+C_1%7D%7Cv%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L\equiv\frac{1}{\sqrt{8}}\sum_{v\in C_1}|v\rangle"/></p>
<p><img alt="|1\rangle_L\equiv\frac{1}{\sqrt{8}}\sum_{w\in C_1'}|w\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle_L%5Cequiv%5Cfrac%7B1%7D%7B%5Csqrt%7B8%7D%7D%5Csum_%7Bw%5Cin+C_1%27%7D%7Cw%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle_L\equiv\frac{1}{\sqrt{8}}\sum_{w\in C_1'}|w\rangle"/>.</p>
<p>Note that this corrects bit flip errors by construction. How can we ensure that we are also able to correct phase errors? For this we again turn to the Hadamard matrix, which allows us to toggle between bit and phase errors. We claim that</p>
<p><img alt="H^{\otimes 7}|0\rangle_L=\frac{1}{\sqrt{2}}(|0\rangle_L+|1\rangle_L)" class="latex" src="https://s0.wp.com/latex.php?latex=H%5E%7B%5Cotimes+7%7D%7C0%5Crangle_L%3D%5Cfrac%7B1%7D%7B%5Csqrt%7B2%7D%7D%28%7C0%5Crangle_L%2B%7C1%5Crangle_L%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H^{\otimes 7}|0\rangle_L=\frac{1}{\sqrt{2}}(|0\rangle_L+|1\rangle_L)"/></p>
<p><img alt="H^{\otimes 7}|1\rangle_L=\frac{1}{\sqrt{2}}(|0\rangle_L-|1\rangle_L)" class="latex" src="https://s0.wp.com/latex.php?latex=H%5E%7B%5Cotimes+7%7D%7C1%5Crangle_L%3D%5Cfrac%7B1%7D%7B%5Csqrt%7B2%7D%7D%28%7C0%5Crangle_L-%7C1%5Crangle_L%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H^{\otimes 7}|1\rangle_L=\frac{1}{\sqrt{2}}(|0\rangle_L-|1\rangle_L)"/>.</p>
<p><strong>Proof: </strong>We will show that</p>
<p><img alt="H^{\otimes 7}|0\rangle_L=\frac{1}{\sqrt{2}}(|0\rangle_L+|1\rangle_L)" class="latex" src="https://s0.wp.com/latex.php?latex=H%5E%7B%5Cotimes+7%7D%7C0%5Crangle_L%3D%5Cfrac%7B1%7D%7B%5Csqrt%7B2%7D%7D%28%7C0%5Crangle_L%2B%7C1%5Crangle_L%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H^{\otimes 7}|0\rangle_L=\frac{1}{\sqrt{2}}(|0\rangle_L+|1\rangle_L)"/>,</p>
<p>noting that the argument for <img alt="|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle_L"/> is similar. First we will need the fact that</p>
<p><img alt="H^{\otimes 7}|v\rangle=\frac{1}{2^{7/2}}\sum_{w\in\{0,1\}^7}(-1)^{w\cdot v}|w\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=H%5E%7B%5Cotimes+7%7D%7Cv%5Crangle%3D%5Cfrac%7B1%7D%7B2%5E%7B7%2F2%7D%7D%5Csum_%7Bw%5Cin%5C%7B0%2C1%5C%7D%5E7%7D%28-1%29%5E%7Bw%5Ccdot+v%7D%7Cw%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H^{\otimes 7}|v\rangle=\frac{1}{2^{7/2}}\sum_{w\in\{0,1\}^7}(-1)^{w\cdot v}|w\rangle"/>.</p>
<p>To see that this fact is true, note that</p>
<p><img alt="H=\frac{1}{\sqrt{2}}(|0\rangle\langle 0|+|0\rangle\langle 1|+|1\rangle\langle 0|-|1\rangle\langle 1|)" class="latex" src="https://s0.wp.com/latex.php?latex=H%3D%5Cfrac%7B1%7D%7B%5Csqrt%7B2%7D%7D%28%7C0%5Crangle%5Clangle+0%7C%2B%7C0%5Crangle%5Clangle+1%7C%2B%7C1%5Crangle%5Clangle+0%7C-%7C1%5Crangle%5Clangle+1%7C%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H=\frac{1}{\sqrt{2}}(|0\rangle\langle 0|+|0\rangle\langle 1|+|1\rangle\langle 0|-|1\rangle\langle 1|)"/></p>
<p>and that <img alt="w\cdot v" class="latex" src="https://s0.wp.com/latex.php?latex=w%5Ccdot+v&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="w\cdot v"/> is equal to the number of bits in which <img alt="w" class="latex" src="https://s0.wp.com/latex.php?latex=w&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="w"/> and <img alt="v" class="latex" src="https://s0.wp.com/latex.php?latex=v&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="v"/> are both 1. Now we can start by directly calculating</p>
<p><img alt="H^{\otimes 7}|0\rangle_L=\frac{1}{\sqrt{8}}\frac{1}{\sqrt{128}}\sum_{v\in C_1}\sum_{w\in\{0,1\}^7}(-1)^{v\cdot w}|w\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=H%5E%7B%5Cotimes+7%7D%7C0%5Crangle_L%3D%5Cfrac%7B1%7D%7B%5Csqrt%7B8%7D%7D%5Cfrac%7B1%7D%7B%5Csqrt%7B128%7D%7D%5Csum_%7Bv%5Cin+C_1%7D%5Csum_%7Bw%5Cin%5C%7B0%2C1%5C%7D%5E7%7D%28-1%29%5E%7Bv%5Ccdot+w%7D%7Cw%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H^{\otimes 7}|0\rangle_L=\frac{1}{\sqrt{8}}\frac{1}{\sqrt{128}}\sum_{v\in C_1}\sum_{w\in\{0,1\}^7}(-1)^{v\cdot w}|w\rangle"/>.</p>
<p>Note that for <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x"/> and <img alt="y" class="latex" src="https://s0.wp.com/latex.php?latex=y&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="y"/> two codewords, assuming that <img alt="w\cdot y=1" class="latex" src="https://s0.wp.com/latex.php?latex=w%5Ccdot+y%3D1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="w\cdot y=1"/>, we must have that <img alt="x\cdot w=0" class="latex" src="https://s0.wp.com/latex.php?latex=x%5Ccdot+w%3D0&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x\cdot w=0"/> iff <img alt="(x+y)\cdot w=1" class="latex" src="https://s0.wp.com/latex.php?latex=%28x%2By%29%5Ccdot+w%3D1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="(x+y)\cdot w=1"/>. Thus we can break the codespace up into an equal number of codewords <img alt="x" class="latex" src="https://s0.wp.com/latex.php?latex=x&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x"/> satisfying <img alt="x\cdot w=0" class="latex" src="https://s0.wp.com/latex.php?latex=x%5Ccdot+w%3D0&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x\cdot w=0"/> and <img alt="x\cdot w=1" class="latex" src="https://s0.wp.com/latex.php?latex=x%5Ccdot+w%3D1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x\cdot w=1"/>. This means that we must have that the sum <img alt="\sum_{v\in C_1}\sum_{w\in\{0,1\}^7}(-1)^{w\cdot v}|w\rangle=0" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csum_%7Bv%5Cin+C_1%7D%5Csum_%7Bw%5Cin%5C%7B0%2C1%5C%7D%5E7%7D%28-1%29%5E%7Bw%5Ccdot+v%7D%7Cw%5Crangle%3D0&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sum_{v\in C_1}\sum_{w\in\{0,1\}^7}(-1)^{w\cdot v}|w\rangle=0"/> unless we have <img alt="w\perp C_1" class="latex" src="https://s0.wp.com/latex.php?latex=w%5Cperp+C_1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="w\perp C_1"/>. But those <img alt="w" class="latex" src="https://s0.wp.com/latex.php?latex=w&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="w"/> that satisfy <img alt="w\perp C_1" class="latex" src="https://s0.wp.com/latex.php?latex=w%5Cperp+C_1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="w\perp C_1"/> are exactly all the codewords by definition, so we must have that</p>
<p><img alt="H^{\otimes 7}|0\rangle_L=\frac{1}{\sqrt{2}}|0\rangle_L+\frac{1}{\sqrt{2}}|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=H%5E%7B%5Cotimes+7%7D%7C0%5Crangle_L%3D%5Cfrac%7B1%7D%7B%5Csqrt%7B2%7D%7D%7C0%5Crangle_L%2B%5Cfrac%7B1%7D%7B%5Csqrt%7B2%7D%7D%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H^{\otimes 7}|0\rangle_L=\frac{1}{\sqrt{2}}|0\rangle_L+\frac{1}{\sqrt{2}}|1\rangle_L"/></p>
<p>as the sum in <img alt="|0\rangle_L+|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L%2B%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L+|1\rangle_L"/> runs equally over all codewords.</p>
<p>Thus we have constructed a 7-qubit quantum code that corrects 1 error, and moreover we see that for both the 9-qubit and 7-qubit codes, both of which are 1-error quantum codes, the fact that they can correct 1-error comes directly from the fact that the original classical codes we used to construct them can themselves correct 1 error. This suggests that we should be able to come up with a more general procedure for constructing quantum codes from classical codes.</p>
<p><strong>3.5. CSS Codes</strong><br/>
<em>CSS (Calderbank-Shor-Steane) codes</em> generalize the process by which we constructed the 9-qubit and 7-qubit codes, and they give us a general framework for constructing quantum codes from classical codes. In a CSS code, we require groups <img alt="C_1" class="latex" src="https://s0.wp.com/latex.php?latex=C_1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_1"/>, <img alt="C_2" class="latex" src="https://s0.wp.com/latex.php?latex=C_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_2"/> satisfying</p>
<p><img alt=" C_1\subseteq C_2" class="latex" src="https://s0.wp.com/latex.php?latex=%C2%A0C_1%5Csubseteq+C_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title=" C_1\subseteq C_2"/></p>
<p><img alt="C_2^{\perp}\subseteq C_1^{\perp}" class="latex" src="https://s0.wp.com/latex.php?latex=C_2%5E%7B%5Cperp%7D%5Csubseteq+C_1%5E%7B%5Cperp%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_2^{\perp}\subseteq C_1^{\perp}"/></p>
<p>Then we can define codewords to correspond to cosets of <img alt="C_1" class="latex" src="https://s0.wp.com/latex.php?latex=C_1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_1"/> in <img alt="C_2" class="latex" src="https://s0.wp.com/latex.php?latex=C_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_2"/>, so that the number of codewords is equal to <img alt="2^{\text{dim}(C_2)-\text{dim}(C_1)}" class="latex" src="https://s0.wp.com/latex.php?latex=2%5E%7B%5Ctext%7Bdim%7D%28C_2%29-%5Ctext%7Bdim%7D%28C_1%29%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2^{\text{dim}(C_2)-\text{dim}(C_1)}"/>. Thus by this definition we can say that codewords <img alt="w_1, w_2\in C_2" class="latex" src="https://s0.wp.com/latex.php?latex=w_1%2C+w_2%5Cin+C_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="w_1, w_2\in C_2"/> are in the same coset if <img alt="w_1-w_2\in C_1" class="latex" src="https://s0.wp.com/latex.php?latex=w_1-w_2%5Cin+C_1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="w_1-w_2\in C_1"/>. Explicitly, the codeword for coset <img alt="w" class="latex" src="https://s0.wp.com/latex.php?latex=w&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="w"/> is given by the state</p>
<p><img alt="\frac{1}{|C_1|^{1/2}}\sum_{x\in C_1}|x+w\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cfrac%7B1%7D%7B%7CC_1%7C%5E%7B1%2F2%7D%7D%5Csum_%7Bx%5Cin+C_1%7D%7Cx%2Bw%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\frac{1}{|C_1|^{1/2}}\sum_{x\in C_1}|x+w\rangle"/>,</p>
<p>and under the Hadamard transformation applied to each qubit this state is in turn mapped to the state</p>
<p><img alt="\frac{1}{|C_1^{\perp}|^{1/2}}\sum_{x\in C_1^{\perp}}|x+w\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cfrac%7B1%7D%7B%7CC_1%5E%7B%5Cperp%7D%7C%5E%7B1%2F2%7D%7D%5Csum_%7Bx%5Cin+C_1%5E%7B%5Cperp%7D%7D%7Cx%2Bw%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\frac{1}{|C_1^{\perp}|^{1/2}}\sum_{x\in C_1^{\perp}}|x+w\rangle"/>.</p>
<p>That is to say, the Hadamard “dualizes” our original code, toggling bit errors to phase errors and vice versa. (This can be seen by direct calculation, as in the case of the 7-qubit code, where we used the fact that <img alt="\sum_{v\in C_1}(-1)^{v\cdot w}=0" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csum_%7Bv%5Cin+C_1%7D%28-1%29%5E%7Bv%5Ccdot+w%7D%3D0&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sum_{v\in C_1}(-1)^{v\cdot w}=0"/> for <img alt="w\not\in C_1^{\perp}" class="latex" src="https://s0.wp.com/latex.php?latex=w%5Cnot%5Cin+C_1%5E%7B%5Cperp%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="w\not\in C_1^{\perp}"/>.)</p>
<p>Note also that this code can correct a number of bit errors equal to the minimum weight of <img alt="\{v\in C_2-C_1\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7Bv%5Cin+C_2-C_1%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{v\in C_2-C_1\}"/>.</p>
<p>With the CSS construction we have thus reduced the problem of finding a quantum error correcting code to the problem of finding appropriate <img alt="C_1" class="latex" src="https://s0.wp.com/latex.php?latex=C_1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_1"/>, <img alt="C_2" class="latex" src="https://s0.wp.com/latex.php?latex=C_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_2"/>. Note that the special case of <img alt="C_2^{\perp}=C_1=C" class="latex" src="https://s0.wp.com/latex.php?latex=C_2%5E%7B%5Cperp%7D%3DC_1%3DC&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_2^{\perp}=C_1=C"/> corresponds to weakly self-dual codes, which are well studied classically. Doubly even, weakly self-dual codes additionally have the requirement that all codewords have Hamming weights that are multiples of 4; they satisfy the requirement</p>
<p><img alt="1^n\subseteq C^{\perp}\subseteq C\subseteq\mathbb{Z}_2^n" class="latex" src="https://s0.wp.com/latex.php?latex=1%5En%5Csubseteq+C%5E%7B%5Cperp%7D%5Csubseteq+C%5Csubseteq%5Cmathbb%7BZ%7D_2%5En&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="1^n\subseteq C^{\perp}\subseteq C\subseteq\mathbb{Z}_2^n"/></p>
<p>and are also well studied classically.</p>
<p><strong>3.6. Gilbert-Varshamov Bound</strong><br/>
In the previous section we introduced CSS codes and demonstrated that the problem of constructing a quantum code could be reduced to the problem of finding two groups <img alt="C_1" class="latex" src="https://s0.wp.com/latex.php?latex=C_1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_1"/>, <img alt="C_2" class="latex" src="https://s0.wp.com/latex.php?latex=C_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_2"/> satisfying</p>
<p><img alt="C_1\subseteq C_2" class="latex" src="https://s0.wp.com/latex.php?latex=C_1%5Csubseteq+C_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_1\subseteq C_2"/></p>
<p><img alt="C_2^{\perp}\subseteq C_1^{\perp}" class="latex" src="https://s0.wp.com/latex.php?latex=C_2%5E%7B%5Cperp%7D%5Csubseteq+C_1%5E%7B%5Cperp%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_2^{\perp}\subseteq C_1^{\perp}"/>.</p>
<p>The next natural question is to ask whether such groups can in fact be found.</p>
<p>The Gilbert-Varshamov bound answers this question in the affirmative, ensuring that there do exist good CSS codes (the bound applies to both quantum and classical codes). It can be stated in the following way:</p>
<p><strong>Theorem </strong>(<em>Gilbert-Varshamov Bound</em>): There exist CSS codes with rate <img alt="R=" class="latex" src="https://s0.wp.com/latex.php?latex=R%3D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="R="/>(number of encoded bits)/(length of code) given by</p>
<p><img alt="R\geq 1-2H_2(d/n)" class="latex" src="https://s0.wp.com/latex.php?latex=R%5Cgeq+1-2H_2%28d%2Fn%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="R\geq 1-2H_2(d/n)"/>,</p>
<p>where <img alt="d" class="latex" src="https://s0.wp.com/latex.php?latex=d&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="d"/> is the minimum distance of the code, <img alt="d/2" class="latex" src="https://s0.wp.com/latex.php?latex=d%2F2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="d/2"/> is the number of errors it can correct, and <img alt="H_2(x)" class="latex" src="https://s0.wp.com/latex.php?latex=H_2%28x%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H_2(x)"/> is the Shannon entropy, defined as</p>
<p><img alt="H_2(x)=-x\log_2x-(1-x)\log_2(1-x)" class="latex" src="https://s0.wp.com/latex.php?latex=H_2%28x%29%3D-x%5Clog_2x-%281-x%29%5Clog_2%281-x%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H_2(x)=-x\log_2x-(1-x)\log_2(1-x)"/>.</p>
<p><strong>Proof:</strong> Note that we can always take a code, apply a random linear transformation to it, and get another code. Thus each vector is equally likely to appear in a random code. Given this fact, we can estimate the probability that a code of dimension <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="k"/> contains a word of weight <img alt="\leq d" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cleq+d&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\leq d"/> using the union bound:</p>
<p><img alt="P(" class="latex" src="https://s0.wp.com/latex.php?latex=P%28&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="P("/>code of dimension <img alt="k" class="latex" src="https://s0.wp.com/latex.php?latex=k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="k"/> has word of weight <img alt="\leq d)\leq(" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cleq+d%29%5Cleq%28&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\leq d)\leq("/>number of words<img alt=")\times P(" class="latex" src="https://s0.wp.com/latex.php?latex=%29%5Ctimes+P%28&amp;bg=ffffff&amp;fg=333333&amp;s=0" title=")\times P("/>word has weight <img alt="\leq d)=2^k\cdot\frac{\sum_{i=0}^d \binom{n}{i}}{2^n}\approx \frac{2^k\cdot 2^{nH(d/n)}}{2^n}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cleq+d%29%3D2%5Ek%5Ccdot%5Cfrac%7B%5Csum_%7Bi%3D0%7D%5Ed+%5Cbinom%7Bn%7D%7Bi%7D%7D%7B2%5En%7D%5Capprox+%5Cfrac%7B2%5Ek%5Ccdot+2%5E%7BnH%28d%2Fn%29%7D%7D%7B2%5En%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\leq d)=2^k\cdot\frac{\sum_{i=0}^d \binom{n}{i}}{2^n}\approx \frac{2^k\cdot 2^{nH(d/n)}}{2^n}"/></p>
<p>For this to be a valid probability we need to have</p>
<p><img alt="(k/n)+H(d/n)&lt; 1" class="latex" src="https://s0.wp.com/latex.php?latex=%28k%2Fn%29%2BH%28d%2Fn%29%3C+1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="(k/n)+H(d/n)&lt; 1"/>.</p>
<p>We can calculate rate by noting that for a CSS code, given by <img alt="C_1\subseteq C_2" class="latex" src="https://s0.wp.com/latex.php?latex=C_1%5Csubseteq+C_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_1\subseteq C_2"/>, <img alt="C_2^{\perp}\subseteq C_1^{\perp}" class="latex" src="https://s0.wp.com/latex.php?latex=C_2%5E%7B%5Cperp%7D%5Csubseteq+C_1%5E%7B%5Cperp%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C_2^{\perp}\subseteq C_1^{\perp}"/>, with <img alt="\text{dim}(C_1)=n-k" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctext%7Bdim%7D%28C_1%29%3Dn-k&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\text{dim}(C_1)=n-k"/>, <img alt="\text{dim}(C_2)=k" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctext%7Bdim%7D%28C_2%29%3Dk&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\text{dim}(C_2)=k"/>, the expression for rate is given by</p>
<p><img alt="R=\frac{n-2k}{n}" class="latex" src="https://s0.wp.com/latex.php?latex=R%3D%5Cfrac%7Bn-2k%7D%7Bn%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="R=\frac{n-2k}{n}"/>.</p>
<p>Combining this with the bound we obtained by considering probabilities, we get that</p>
<p><img alt="R\geq 1-2H(d/n)" class="latex" src="https://s0.wp.com/latex.php?latex=R%5Cgeq+1-2H%28d%2Fn%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="R\geq 1-2H(d/n)"/>.</p>
<p>Thus there exist good CSS codes.</p>
<p><strong>3.7. Stabilizer Codes</strong><br/>
Having discussed and constructed some examples of CSS codes, we will now discuss the stabilizer formalism. Note that this formalism allows us to construct codes without having to work directly with the states representing <img alt="|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L"/> and <img alt="|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle_L"/>, as this can quickly get unwieldy. Instead, we will work with stabilizers, operators that leave these states invariant.</p>
<p>To see how working directly with states can get unwieldy, we can consider the 5-qubit code. We can define it the way we defined the 9-qubit and 7-qubit codes, by directly defining the basis vectors <img alt="|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L"/> and <img alt="|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle_L"/>,</p>
<p><img alt="|0\rangle_L\equiv\frac{1}{4}(|00000\rangle-|01100\rangle+|00101\rangle+|01010\rangle-|01111\rangle+(" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L%5Cequiv%5Cfrac%7B1%7D%7B4%7D%28%7C00000%5Crangle-%7C01100%5Crangle%2B%7C00101%5Crangle%2B%7C01010%5Crangle-%7C01111%5Crangle%2B%28&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L\equiv\frac{1}{4}(|00000\rangle-|01100\rangle+|00101\rangle+|01010\rangle-|01111\rangle+("/>symmetric under cyclic permutations<img alt="))" class="latex" src="https://s0.wp.com/latex.php?latex=%29%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="))"/>,</p>
<p>with <img alt="|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle_L"/> defined similarly. But we can also define this code more succinctly using the stabilizer formalism. To do so, we start by choosing a commutative subgroup of the Pauli group, with generators <img alt="g_i" class="latex" src="https://s0.wp.com/latex.php?latex=g_i&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_i"/> satisfying</p>
<p><img alt="g_i^2=I" class="latex" src="https://s0.wp.com/latex.php?latex=g_i%5E2%3DI&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_i^2=I"/></p>
<p><img alt="g_ig_j=g_jg_i" class="latex" src="https://s0.wp.com/latex.php?latex=g_ig_j%3Dg_jg_i&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_ig_j=g_jg_i"/></p>
<p>For example, for the 5-qubit code, the particular choice of generators we would need is given by</p>
<p><img alt="g_1\equiv IXZZX" class="latex" src="https://s0.wp.com/latex.php?latex=g_1%5Cequiv+IXZZX&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_1\equiv IXZZX"/></p>
<p><img alt="g_2\equiv XIXZZ" class="latex" src="https://s0.wp.com/latex.php?latex=g_2%5Cequiv+XIXZZ&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_2\equiv XIXZZ"/></p>
<p><img alt="g_3\equiv ZXIXZ" class="latex" src="https://s0.wp.com/latex.php?latex=g_3%5Cequiv+ZXIXZ&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_3\equiv ZXIXZ"/></p>
<p><img alt="g_4\equiv ZZXIX" class="latex" src="https://s0.wp.com/latex.php?latex=g_4%5Cequiv+ZZXIX&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_4\equiv ZZXIX"/>.</p>
<p>Now we consider states <img alt="\{|\psi\rangle\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7C%5Cpsi%5Crangle%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{|\psi\rangle\}"/> that are stabilized by the <img alt="\{g_i\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7Bg_i%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{g_i\}"/>. That is, they satisfy</p>
<p><img alt="g_i|\psi\rangle=|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=g_i%7C%5Cpsi%5Crangle%3D%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_i|\psi\rangle=|\psi\rangle"/>.</p>
<p>Note that the eigenvalues of <img alt="\sigma_x" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_x&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_x"/>, <img alt="\sigma_y" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_y&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_y"/>, and <img alt="\sigma_z" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_z&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_z"/> are <img alt="\pm 1" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cpm+1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\pm 1"/>, so in the case of the 5-qubit code, there exists a <img alt="2^5/2=16" class="latex" src="https://s0.wp.com/latex.php?latex=2%5E5%2F2%3D16&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2^5/2=16"/>-dimensional space of <img alt="\{|\psi\rangle\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7C%5Cpsi%5Crangle%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{|\psi\rangle\}"/> satisfying <img alt="g_1|\psi\rangle=|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=g_1%7C%5Cpsi%5Crangle%3D%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_1|\psi\rangle=|\psi\rangle"/>. Recalling that two commuting matrices are simultaneously diagonalizable, there exists a <img alt="16/2=8" class="latex" src="https://s0.wp.com/latex.php?latex=16%2F2%3D8&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="16/2=8"/>-dimensional space of <img alt="\{|\psi\rangle\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7C%5Cpsi%5Crangle%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{|\psi\rangle\}"/> satisfying <img alt="g_1|\psi\rangle=g_2|\psi\rangle=|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=g_1%7C%5Cpsi%5Crangle%3Dg_2%7C%5Cpsi%5Crangle%3D%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_1|\psi\rangle=g_2|\psi\rangle=|\psi\rangle"/>, and so on, where we cut the dimension of the subspace in half each time we add a generator. Finally, there exists a <img alt="2^5/2^4=2" class="latex" src="https://s0.wp.com/latex.php?latex=2%5E5%2F2%5E4%3D2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2^5/2^4=2"/>-dimensional space of <img alt="\{|\psi\rangle\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7C%5Cpsi%5Crangle%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{|\psi\rangle\}"/> satisfying <img alt="g_i|\psi\rangle=|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=g_i%7C%5Cpsi%5Crangle%3D%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="g_i|\psi\rangle=|\psi\rangle"/> for all <img alt="i=1,...,4" class="latex" src="https://s0.wp.com/latex.php?latex=i%3D1%2C...%2C4&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="i=1,...,4"/>. This 2-dimensional space is exactly the subspace spanned by <img alt="|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L"/> and <img alt="|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle_L"/>. Thus fixing the stabilizers is enough to give us our code.</p>
<p>Next we will consider all elements in the Pauli group that commute with all elements in our stabilizer group <img alt="G=\{g_1,...,g_4\}" class="latex" src="https://s0.wp.com/latex.php?latex=G%3D%5C%7Bg_1%2C...%2Cg_4%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="G=\{g_1,...,g_4\}"/>. As we shall see, this will give us our logical operators, where a <em>logical operator</em> performs an operation on a logical qubit (for example, the logical <img alt="X" class="latex" src="https://s0.wp.com/latex.php?latex=X&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X"/> operator, <img alt="X_L" class="latex" src="https://s0.wp.com/latex.php?latex=X_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X_L"/>, would act on the logical qubit <img alt="|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle_L"/> by mapping <img alt="X_L|0\rangle_L=|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=X_L%7C0%5Crangle_L%3D%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X_L|0\rangle_L=|1\rangle_L"/>, and so on). In the 5-qubit case we end up with a 6-dimensional nonabelian group <img alt="\tilde{G}=\langle g_1,...,g_4, h_1, h_2\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctilde%7BG%7D%3D%5Clangle+g_1%2C...%2Cg_4%2C+h_1%2C+h_2%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\tilde{G}=\langle g_1,...,g_4, h_1, h_2\rangle"/> by adding the following two elements to those elements that are in <img alt="G" class="latex" src="https://s0.wp.com/latex.php?latex=G&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="G"/>:</p>
<p><img alt="h_1=XXXXX" class="latex" src="https://s0.wp.com/latex.php?latex=h_1%3DXXXXX&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="h_1=XXXXX"/></p>
<p><img alt="h_2=ZZZZZ" class="latex" src="https://s0.wp.com/latex.php?latex=h_2%3DZZZZZ&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="h_2=ZZZZZ"/></p>
<p>These will be our logical operators</p>
<p><img alt="X_L\equiv h_1" class="latex" src="https://s0.wp.com/latex.php?latex=X_L%5Cequiv+h_1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X_L\equiv h_1"/></p>
<p><img alt="Z_L\equiv h_2" class="latex" src="https://s0.wp.com/latex.php?latex=Z_L%5Cequiv+h_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="Z_L\equiv h_2"/></p>
<p>so that</p>
<p><img alt="X_L|0\rangle_L=|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=X_L%7C0%5Crangle_L%3D%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X_L|0\rangle_L=|1\rangle_L"/></p>
<p><img alt="X_L|1\rangle_L=|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=X_L%7C1%5Crangle_L%3D%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X_L|1\rangle_L=|0\rangle_L"/></p>
<p><img alt="Z_L|1\rangle_L=-|1\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=Z_L%7C1%5Crangle_L%3D-%7C1%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="Z_L|1\rangle_L=-|1\rangle_L"/></p>
<p><img alt="Z_L|0\rangle_L=|0\rangle_L" class="latex" src="https://s0.wp.com/latex.php?latex=Z_L%7C0%5Crangle_L%3D%7C0%5Crangle_L&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="Z_L|0\rangle_L=|0\rangle_L"/>.</p>
<p>Note that this code has distance 3 and corrects 1 error because 3 is the minimum Hamming weight in the group <img alt="\tilde{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctilde%7BG%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\tilde{G}"/>. (To see this, note that <img alt="XXXXX\cdot IXZZX=XIYYI" class="latex" src="https://s0.wp.com/latex.php?latex=XXXXX%5Ccdot+IXZZX%3DXIYYI&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="XXXXX\cdot IXZZX=XIYYI"/> has Hamming weight 3.)</p>
<p>Why is Hamming weight 2 not enough to correct one error? If we had, for example, <img alt="XZIII\in\tilde{G}" class="latex" src="https://s0.wp.com/latex.php?latex=XZIII%5Cin%5Ctilde%7BG%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="XZIII\in\tilde{G}"/>, then we would have</p>
<p><img alt="\sigma_x^{(1)}|\psi_1\rangle=\sigma_z^{(2)}|\psi_2\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csigma_x%5E%7B%281%29%7D%7C%5Cpsi_1%5Crangle%3D%5Csigma_z%5E%7B%282%29%7D%7C%5Cpsi_2%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sigma_x^{(1)}|\psi_1\rangle=\sigma_z^{(2)}|\psi_2\rangle"/></p>
<p>for <img alt="|\psi_1\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Cpsi_1%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\psi_1\rangle"/>, <img alt="|\psi_2\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Cpsi_2%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\psi_2\rangle"/> both in the code, which means that we wouldn’t be able to distinguish an <img alt="X_1" class="latex" src="https://s0.wp.com/latex.php?latex=X_1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X_1"/> error from a <img alt="Z_2" class="latex" src="https://s0.wp.com/latex.php?latex=Z_2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="Z_2"/> error.</p>
<p>Note that, in general, when <img alt="x\in\tilde{G}" class="latex" src="https://s0.wp.com/latex.php?latex=x%5Cin%5Ctilde%7BG%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x\in\tilde{G}"/>, <img alt="x|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=x%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="x|\psi\rangle"/> will be in the code, so elements of <img alt="\tilde{G}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctilde%7BG%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\tilde{G}"/> map codewords to codewords. We can prove this fact by noting that</p>
<p><img alt="xg_i|\psi\rangle=x|\psi\rangle=g_ix|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=xg_i%7C%5Cpsi%5Crangle%3Dx%7C%5Cpsi%5Crangle%3Dg_ix%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="xg_i|\psi\rangle=x|\psi\rangle=g_ix|\psi\rangle"/>.</p>
<p>Note also that in the examples we’ve been dealing with so far, where we have a commuting subgroup of the Pauli group, our codes correspond to classical, additive, weakly self-dual codes over <img alt="GF(4)" class="latex" src="https://s0.wp.com/latex.php?latex=GF%284%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="GF(4)"/>. Here <img alt="GF(4)=\{0,1,\omega,\bar{\omega}\}" class="latex" src="https://s0.wp.com/latex.php?latex=GF%284%29%3D%5C%7B0%2C1%2C%5Comega%2C%5Cbar%7B%5Comega%7D%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="GF(4)=\{0,1,\omega,\bar{\omega}\}"/> (with group elements <img alt="\{\omega, \bar{\omega},1\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%5Comega%2C+%5Cbar%7B%5Comega%7D%2C1%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{\omega, \bar{\omega},1\}"/> corresponding to the third roots of unity) is the finite field on 4 elements, and multiplying Pauli matrices corresponds to group addition. Specifically,</p>
<p><img alt="X\equiv 1" class="latex" src="https://s0.wp.com/latex.php?latex=X%5Cequiv+1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X\equiv 1"/></p>
<p><img alt="Y\equiv \omega" class="latex" src="https://s0.wp.com/latex.php?latex=Y%5Cequiv+%5Comega&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="Y\equiv \omega"/></p>
<p><img alt="Z\equiv \bar{\omega}" class="latex" src="https://s0.wp.com/latex.php?latex=Z%5Cequiv+%5Cbar%7B%5Comega%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="Z\equiv \bar{\omega}"/></p>
<p><img alt="I\equiv 0" class="latex" src="https://s0.wp.com/latex.php?latex=I%5Cequiv+0&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="I\equiv 0"/></p>
<p>satisfying</p>
<p><img alt="H\omega=\bar{\omega}" class="latex" src="https://s0.wp.com/latex.php?latex=H%5Comega%3D%5Cbar%7B%5Comega%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H\omega=\bar{\omega}"/></p>
<p><img alt="2X=2Y=2Z=0" class="latex" src="https://s0.wp.com/latex.php?latex=2X%3D2Y%3D2Z%3D0&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2X=2Y=2Z=0"/>.</p>
<p>We have now concluded our discussion of quantum error-correcting codes. In the next section we will shift gears and look at quantum channels and channel capacities.</p>
<p><strong>4. Quantum Channels</strong><br/>
In this final section we will look at quantum channels and channel capacities.</p>
<p><strong>4.1. Definition and Examples</strong></p>
<p><strong>4.1.1. Definition</strong><br/>
We know that we want to define a quantum channel to take a quantum state as input. What should the output be? As a first attempt we might imagine having the output be a probability distribution <img alt="\{p_i\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7Bp_i%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{p_i\}"/> over states <img alt="\{|\psi_i\rangle\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7C%5Cpsi_i%5Crangle%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{|\psi_i\rangle\}"/>. It turns out that for a more succinct description, we can have both the input and output be a density matrix.</p>
<p>Recall that a density matrix takes the form</p>
<p><img alt="\rho=\sum_i p_i|\psi_i\rangle\langle\psi_i|" class="latex" src="https://s0.wp.com/latex.php?latex=%5Crho%3D%5Csum_i+p_i%7C%5Cpsi_i%5Crangle%5Clangle%5Cpsi_i%7C&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\rho=\sum_i p_i|\psi_i\rangle\langle\psi_i|"/></p>
<p>representing a probability distribution over pure states <img alt="|\psi_i\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Cpsi_i%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\psi_i\rangle"/>. <img alt="\rho" class="latex" src="https://s0.wp.com/latex.php?latex=%5Crho&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\rho"/> must also be Hermitian, and it must satisfy <img alt="\text{Tr}(\rho)=1" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ctext%7BTr%7D%28%5Crho%29%3D1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\text{Tr}(\rho)=1"/> (equivalently, we must have <img alt="\sum_i p_i=1" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csum_i+p_i%3D1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sum_i p_i=1"/>).</p>
<p>Now we may define a quantum channel as the map <img alt="\eta" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ceta&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\eta"/> that takes</p>
<p><img alt="\eta:\rho\mapsto\sum_i E_i\rho E_i^{\dagger}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ceta%3A%5Crho%5Cmapsto%5Csum_i+E_i%5Crho+E_i%5E%7B%5Cdagger%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\eta:\rho\mapsto\sum_i E_i\rho E_i^{\dagger}"/>,</p>
<p>where</p>
<p><img alt="\sum_i E_i^{\dagger}E_i=I" class="latex" src="https://s0.wp.com/latex.php?latex=%5Csum_i+E_i%5E%7B%5Cdagger%7DE_i%3DI&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\sum_i E_i^{\dagger}E_i=I"/>.</p>
<p>To see that the output is in fact a density matrix, note that the output expression is clearly Hermitian and can be shown to have unit trace using the cyclical property of traces. Note also that the decomposition into <img alt="\{E_i\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7BE_i%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{E_i\}"/> need not be unique.</p>
<p><strong>4.1.2. Example Quantum Channels</strong><br/>
Next we give a few examples of quantum channels. The dephasing channel is given by the map</p>
<p><img alt="\rho\mapsto(1-p)\rho+p\sigma_z\rho\sigma_z" class="latex" src="https://s0.wp.com/latex.php?latex=%5Crho%5Cmapsto%281-p%29%5Crho%2Bp%5Csigma_z%5Crho%5Csigma_z&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\rho\mapsto(1-p)\rho+p\sigma_z\rho\sigma_z"/>.</p>
<p>It maps</p>
<p><img alt="\left(\begin{array}{cc}\alpha&amp;\beta\\\gamma&amp;\delta\end{array}\right)\mapsto \left(\begin{array}{cc}\alpha&amp;(1-2p)\beta\\(1-2p)\gamma&amp;\delta\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D%5Calpha%26%5Cbeta%5C%5C%5Cgamma%26%5Cdelta%5Cend%7Barray%7D%5Cright%29%5Cmapsto+%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D%5Calpha%26%281-2p%29%5Cbeta%5C%5C%281-2p%29%5Cgamma%26%5Cdelta%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\left(\begin{array}{cc}\alpha&amp;\beta\\\gamma&amp;\delta\end{array}\right)\mapsto \left(\begin{array}{cc}\alpha&amp;(1-2p)\beta\\(1-2p)\gamma&amp;\delta\end{array}\right)"/></p>
<p><img alt="\left(\begin{array}{cc}\alpha&amp;\beta\\\gamma&amp;\delta\end{array}\right)\mapsto \left(\begin{array}{cc}\alpha&amp;(1-2p)\beta\\(1-2p)\gamma&amp;\delta\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D%5Calpha%26%5Cbeta%5C%5C%5Cgamma%26%5Cdelta%5Cend%7Barray%7D%5Cright%29%5Cmapsto+%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D%5Calpha%26%281-2p%29%5Cbeta%5C%5C%281-2p%29%5Cgamma%26%5Cdelta%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\left(\begin{array}{cc}\alpha&amp;\beta\\\gamma&amp;\delta\end{array}\right)\mapsto \left(\begin{array}{cc}\alpha&amp;(1-2p)\beta\\(1-2p)\gamma&amp;\delta\end{array}\right)"/>,</p>
<p>so it multiplies off-diagonal elements by a factor that is less than 1. Note that when <img alt="p=1/2" class="latex" src="https://s0.wp.com/latex.php?latex=p%3D1%2F2&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p=1/2"/>, it maps</p>
<p><img alt="\alpha|0\rangle+\beta|1\rangle\mapsto|\alpha|^2|0\rangle\langle 0|+|\beta|^2|1\rangle\langle 1|" class="latex" src="https://s0.wp.com/latex.php?latex=%5Calpha%7C0%5Crangle%2B%5Cbeta%7C1%5Crangle%5Cmapsto%7C%5Calpha%7C%5E2%7C0%5Crangle%5Clangle+0%7C%2B%7C%5Cbeta%7C%5E2%7C1%5Crangle%5Clangle+1%7C&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\alpha|0\rangle+\beta|1\rangle\mapsto|\alpha|^2|0\rangle\langle 0|+|\beta|^2|1\rangle\langle 1|"/>,</p>
<p>which means that it turns superpositions into classical mixtures (hence the name “dephasing”).</p>
<p>Another example is the amplitude damping channel, which models an excited state decaying to a ground state. It is given by</p>
<p><img alt="E_1=\left(\begin{array}{cc}0&amp;\sqrt{p}\\0&amp;0\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=E_1%3D%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D0%26%5Csqrt%7Bp%7D%5C%5C0%260%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="E_1=\left(\begin{array}{cc}0&amp;\sqrt{p}\\0&amp;0\end{array}\right)"/></p>
<p><img alt="E_2=\left(\begin{array}{cc}1&amp;0\\0&amp;\sqrt{1-p}\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=E_2%3D%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D1%260%5C%5C0%26%5Csqrt%7B1-p%7D%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="E_2=\left(\begin{array}{cc}1&amp;0\\0&amp;\sqrt{1-p}\end{array}\right)"/></p>
<p>Here we let the vector <img alt="|0\rangle=(1, 0)" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle%3D%281%2C+0%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle=(1, 0)"/> denote the ground state, and we let the vector <img alt="|1\rangle=(0, 1)" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle%3D%280%2C+1%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle=(0, 1)"/> denote the excited state. Thus we can see that the channel maps the ground state to itself, <img alt="|0\rangle\mapsto|0\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle%5Cmapsto%7C0%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle\mapsto|0\rangle"/>, while the excited state <img alt="|1\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle"/> gets mapped to <img alt="|0\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C0%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|0\rangle"/> with probability <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p"/> and stays at <img alt="|1\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C1%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|1\rangle"/> with probability <img alt="1-p" class="latex" src="https://s0.wp.com/latex.php?latex=1-p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="1-p"/>.</p>
<p><strong>4.2 Quantum Channel Capacities</strong><br/>
Now we consider the capacity of quantum channels, where the capacity quantifies how much information can make it through the channel. We consider classical channels, classical information sent over quantum channels, and quantum information sent over quantum channels. First we start off with the example of the quantum erasure channel to demonstrate that quantum channels behave differently from classical channels, and then we give the actual expressions for the channel capacities before revisiting the example of the quantum erasure channel.</p>
<p><strong>4.2.1 Example: Quantum Erasure Channel</strong><br/>
First we start with the example of the quantum erasure channel, which given a state <img alt="|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\psi\rangle"/> replaces it by an orthogonal state <img alt="|E\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7CE%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|E\rangle"/> with probability <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p"/> and returns the same state <img alt="|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\psi\rangle"/> with probability <img alt="1-p" class="latex" src="https://s0.wp.com/latex.php?latex=1-p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="1-p"/>. We claim that the erasure channel can’t transmit quantum information when <img alt="p\geq 0.5" class="latex" src="https://s0.wp.com/latex.php?latex=p%5Cgeq+0.5&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p\geq 0.5"/>, behavior that is markedly different from that of classical information. That is to say, for <img alt="p\geq 0.5" class="latex" src="https://s0.wp.com/latex.php?latex=p%5Cgeq+0.5&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p\geq 0.5"/>, there is no way to encode quantum information to send it through the channel and then decode it so the receiver gets a state close to the state that was sent.</p>
<p>To see why this is the case, assume the contrary, that there do exist encoding and decoding protocols that send quantum information through quantum erasure channels with erasure rate <img alt="p\geq 0.5" class="latex" src="https://s0.wp.com/latex.php?latex=p%5Cgeq+0.5&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p\geq 0.5"/>. We will show that this violates the no-cloning theorem. Now, suppose that <img alt="A" class="latex" src="https://s0.wp.com/latex.php?latex=A&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="A"/> does the following: For each qubit in the encoded state, she tosses a fair coin. If the coin lands heads, she send <img alt="C" class="latex" src="https://s0.wp.com/latex.php?latex=C&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C"/> the state <img alt="|E\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7CE%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|E\rangle"/> and sends <img alt="B" class="latex" src="https://s0.wp.com/latex.php?latex=B&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="B"/> the channel input with probability <img alt="2p-1" class="latex" src="https://s0.wp.com/latex.php?latex=2p-1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2p-1"/> and the erasure state <img alt="|E\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7CE%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|E\rangle"/> otherwise. If the coin lands tails, she sends <img alt="B" class="latex" src="https://s0.wp.com/latex.php?latex=B&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="B"/> the state <img alt="|E\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7CE%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|E\rangle"/> and sends <img alt="C" class="latex" src="https://s0.wp.com/latex.php?latex=C&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C"/> the channel input with probability <img alt="2p-1" class="latex" src="https://s0.wp.com/latex.php?latex=2p-1&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="2p-1"/> and the erasure state otherwise. This implements a <img alt="p\geq 0.5" class="latex" src="https://s0.wp.com/latex.php?latex=p%5Cgeq+0.5&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p\geq 0.5"/> channel to both receivers <img alt="B" class="latex" src="https://s0.wp.com/latex.php?latex=B&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="B"/> and <img alt="C" class="latex" src="https://s0.wp.com/latex.php?latex=C&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="C"/>, which means that <img alt="A" class="latex" src="https://s0.wp.com/latex.php?latex=A&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="A"/> can use this channel to transmit an encoding of <img alt="|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\psi\rangle"/> to both receivers, which in turn means that both receivers will be able to decode <img alt="|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\psi\rangle"/>. But this means that <img alt="A" class="latex" src="https://s0.wp.com/latex.php?latex=A&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="A"/> has just used this channel to clone the quantum state <img alt="|\psi\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7C%5Cpsi%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|\psi\rangle"/>, resulting in a contradiction. Thus no quantum information can be transmitted through a channel with <img alt="p\geq 0.5" class="latex" src="https://s0.wp.com/latex.php?latex=p%5Cgeq+0.5&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p\geq 0.5"/>. Note, however, that we can send classical information over this channel, so the behavior of quantum and classical information is markedly different.</p>
<p>It turns out that the rate of quantum information sent over the erasure channel, as a function of <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p"/>, is given by the following graph:</p>
<p><img alt="fig4.png" class="alignnone size-full wp-image-6318" src="https://windowsontheory.files.wordpress.com/2018/12/fig4.png?w=600"/><br/>
while the rate of classical information sent over the erasure channel, as a function of <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p"/>, is given by the following graph:</p>
<p><img alt="fig5.png" class="alignnone size-full wp-image-6319" src="https://windowsontheory.files.wordpress.com/2018/12/fig5.png?w=600"/></p>
<p>Next we will formally state the definition of channel capacity, and then we will return to the quantum erasure channel example and derive the curve that plots rate against <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p"/>.</p>
<p><strong>4.2.2. Definition of Channel Capacities</strong><br/>
Channel capacity is defined as the maximum rate at which information can be communicated over many independent uses of a channel from sender to receiver. Here we list the expressions for channel capacity for classical channels, classical information over a quantum channel, and quantum information over a quantum channel.</p>
<p><strong>Classical Channel Capacity</strong> For a classical channel this expression is just the maximum mutual information over all input-output pairs,</p>
<p><img alt="\max_X H(\eta(X))-H(\eta(X)|X)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmax_X+H%28%5Ceta%28X%29%29-H%28%5Ceta%28X%29%7CX%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\max_X H(\eta(X))-H(\eta(X)|X)"/>,</p>
<p>where <img alt="X" class="latex" src="https://s0.wp.com/latex.php?latex=X&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="X"/> is the input information and <img alt="\eta(X)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ceta%28X%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\eta(X)"/> is the output information after having gone through the channel <img alt="\eta" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ceta&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\eta"/>.</p>
<p><strong>Classical Information Over a Quantum Channel </strong>The capacity for classical information sent over a quantum channel is given by</p>
<p><img alt="\max_{\{p_i,\rho_i\}} H(\eta(\rho))-\sum_i p_iH(\eta(\rho_i))" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmax_%7B%5C%7Bp_i%2C%5Crho_i%5C%7D%7D+H%28%5Ceta%28%5Crho%29%29-%5Csum_i+p_iH%28%5Ceta%28%5Crho_i%29%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\max_{\{p_i,\rho_i\}} H(\eta(\rho))-\sum_i p_iH(\eta(\rho_i))"/></p>
<p>up to regularization, where <img alt="\rho=\sum_i p_i\rho_i" class="latex" src="https://s0.wp.com/latex.php?latex=%5Crho%3D%5Csum_i+p_i%5Crho_i&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\rho=\sum_i p_i\rho_i"/> is the average input state, and <img alt="\eta" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ceta&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\eta"/> is the channel.</p>
<p>Note that we would regularize this by using <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="n"/> copies of the state (that is to say, we want the output of <img alt="\eta^{\otimes n}" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ceta%5E%7B%5Cotimes+n%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\eta^{\otimes n}"/>) and then dividing by <img alt="n" class="latex" src="https://s0.wp.com/latex.php?latex=n&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="n"/>, to get an expression like the following for the regularized capacity of classical information over a quantum channel:</p>
<p><img alt="\lim_{n\rightarrow\infty}\max_{\{p_i,\rho_i\}} [H(\eta(\rho)^{\otimes n})-\sum_i p_i H(\eta(\rho_i)^{\otimes n})]/n" class="latex" src="https://s0.wp.com/latex.php?latex=%5Clim_%7Bn%5Crightarrow%5Cinfty%7D%5Cmax_%7B%5C%7Bp_i%2C%5Crho_i%5C%7D%7D+%5BH%28%5Ceta%28%5Crho%29%5E%7B%5Cotimes+n%7D%29-%5Csum_i+p_i+H%28%5Ceta%28%5Crho_i%29%5E%7B%5Cotimes+n%7D%29%5D%2Fn&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\lim_{n\rightarrow\infty}\max_{\{p_i,\rho_i\}} [H(\eta(\rho)^{\otimes n})-\sum_i p_i H(\eta(\rho_i)^{\otimes n})]/n"/>.</p>
<p><strong>Quantum Information</strong> The capacity for quantum information is given by the expression</p>
<p><img alt="\max_\rho H(\eta(\rho))-H((\eta\otimes I)\Phi_\rho)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmax_%5Crho+H%28%5Ceta%28%5Crho%29%29-H%28%28%5Ceta%5Cotimes+I%29%5CPhi_%5Crho%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\max_\rho H(\eta(\rho))-H((\eta\otimes I)\Phi_\rho)"/>,</p>
<p>also up to regularization. Here <img alt="\eta(\rho)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ceta%28%5Crho%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\eta(\rho)"/> is the output when channel <img alt="\rho" class="latex" src="https://s0.wp.com/latex.php?latex=%5Crho&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\rho"/> acts on input state <img alt="\rho" class="latex" src="https://s0.wp.com/latex.php?latex=%5Crho&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\rho"/>, while <img alt="\Phi_\rho" class="latex" src="https://s0.wp.com/latex.php?latex=%5CPhi_%5Crho&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\Phi_\rho"/> is the purification of <img alt="\rho" class="latex" src="https://s0.wp.com/latex.php?latex=%5Crho&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\rho"/> (that is, it is a pure state containing <img alt="\rho" class="latex" src="https://s0.wp.com/latex.php?latex=%5Crho&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\rho"/> that we can obtain by enlarging the Hilbert space). The regularized capacity for quantum information looks like the following:</p>
<p><img alt=" \lim_{n\rightarrow\infty}\max_\rho [H(\eta(\rho)^{\otimes n})-H((\eta\otimes I)(\Phi_\rho)^{\otimes n})]/n" class="latex" src="https://s0.wp.com/latex.php?latex=%C2%A0%5Clim_%7Bn%5Crightarrow%5Cinfty%7D%5Cmax_%5Crho+%5BH%28%5Ceta%28%5Crho%29%5E%7B%5Cotimes+n%7D%29-H%28%28%5Ceta%5Cotimes+I%29%28%5CPhi_%5Crho%29%5E%7B%5Cotimes+n%7D%29%5D%2Fn&amp;bg=ffffff&amp;fg=333333&amp;s=0" title=" \lim_{n\rightarrow\infty}\max_\rho [H(\eta(\rho)^{\otimes n})-H((\eta\otimes I)(\Phi_\rho)^{\otimes n})]/n"/>.</p>
<p>Now that we have the exact expression that allows us to calculate the quantum channel capacity, we will revisit our example of the quantum erasure channel and reproduce the plot of channel rate vs erasure probability.</p>
<p><strong>4.2.3. Example Revisited: Quantum Erasure Channel</strong><br/>
Recall that, up to regularization, the capacity of a quantum channel is given by</p>
<p><img alt="\max_\rho H(\eta(\rho))-H((\eta\otimes I)\Phi_\rho)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cmax_%5Crho+H%28%5Ceta%28%5Crho%29%29-H%28%28%5Ceta%5Cotimes+I%29%5CPhi_%5Crho%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\max_\rho H(\eta(\rho))-H((\eta\otimes I)\Phi_\rho)"/>.</p>
<p>We will directly calculate this expression for the example of the quantum erasure channel. Let the input <img alt="\rho" class="latex" src="https://s0.wp.com/latex.php?latex=%5Crho&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\rho"/> be given by the density matrix for the completely mixed state,</p>
<p><img alt="\rho=\left(\begin{array}{cc}\frac{1}{2}&amp;0\\0&amp;\frac{1}{2}\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Crho%3D%5Cleft%28%5Cbegin%7Barray%7D%7Bcc%7D%5Cfrac%7B1%7D%7B2%7D%260%5C%5C0%26%5Cfrac%7B1%7D%7B2%7D%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\rho=\left(\begin{array}{cc}\frac{1}{2}&amp;0\\0&amp;\frac{1}{2}\end{array}\right)"/>,</p>
<p>so that the purification of <img alt="\rho" class="latex" src="https://s0.wp.com/latex.php?latex=%5Crho&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\rho"/> is given by the state</p>
<p><img alt="\frac{1}{\sqrt{2}}(|00\rangle+|11\rangle)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Cfrac%7B1%7D%7B%5Csqrt%7B2%7D%7D%28%7C00%5Crangle%2B%7C11%5Crangle%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\frac{1}{\sqrt{2}}(|00\rangle+|11\rangle)"/>.</p>
<p>Recall that the erasure channel replaces our state with <img alt="|E\rangle" class="latex" src="https://s0.wp.com/latex.php?latex=%7CE%5Crangle&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="|E\rangle"/> with probability <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p"/>, while with probability <img alt="1-p" class="latex" src="https://s0.wp.com/latex.php?latex=1-p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="1-p"/> it leaves the input state unchanged. Then, in the basis <img alt="\{|0\rangle, |1\rangle, |E\rangle\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7C0%5Crangle%2C+%7C1%5Crangle%2C+%7CE%5Crangle%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{|0\rangle, |1\rangle, |E\rangle\}"/>, the matrix corresponding to <img alt="\eta(\rho)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ceta%28%5Crho%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\eta(\rho)"/> is given by</p>
<p><img alt="\eta(\rho)=\left(\begin{array}{ccc}\frac{1-p}{2}&amp;0&amp;0\\0&amp;\frac{1-p}{2}&amp;0\\0&amp;0&amp;p\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=%5Ceta%28%5Crho%29%3D%5Cleft%28%5Cbegin%7Barray%7D%7Bccc%7D%5Cfrac%7B1-p%7D%7B2%7D%260%260%5C%5C0%26%5Cfrac%7B1-p%7D%7B2%7D%260%5C%5C0%260%26p%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\eta(\rho)=\left(\begin{array}{ccc}\frac{1-p}{2}&amp;0&amp;0\\0&amp;\frac{1-p}{2}&amp;0\\0&amp;0&amp;p\end{array}\right)"/></p>
<p>while in the basis <img alt="\{|00\rangle, |01\rangle, |10\rangle, |11\rangle, |0E\rangle, |1E\rangle\}" class="latex" src="https://s0.wp.com/latex.php?latex=%5C%7B%7C00%5Crangle%2C+%7C01%5Crangle%2C+%7C10%5Crangle%2C+%7C11%5Crangle%2C+%7C0E%5Crangle%2C+%7C1E%5Crangle%5C%7D&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="\{|00\rangle, |01\rangle, |10\rangle, |11\rangle, |0E\rangle, |1E\rangle\}"/>, the matrix corresponding to <img alt="(\eta\otimes I)\Phi_\rho" class="latex" src="https://s0.wp.com/latex.php?latex=%28%5Ceta%5Cotimes+I%29%5CPhi_%5Crho&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="(\eta\otimes I)\Phi_\rho"/> is given by</p>
<p><img alt="(\eta\otimes I)\Phi_\rho=\left(\begin{array}{cccccc}\frac{1-p}{2}&amp;0&amp;0&amp;\frac{1-p}{2}&amp;0&amp;0\\0&amp;0&amp;0&amp;0&amp;0&amp;0\\0&amp;0&amp;0&amp;0&amp;0&amp;0\\\frac{1-p}{2}&amp;0&amp;0&amp;\frac{1-p}{2}&amp;0&amp;0\\0&amp;0&amp;0&amp;0&amp;\frac{p}{2}&amp;0\\0&amp;0&amp;0&amp;0&amp;0&amp;\frac{p}{2}\end{array}\right)" class="latex" src="https://s0.wp.com/latex.php?latex=%28%5Ceta%5Cotimes+I%29%5CPhi_%5Crho%3D%5Cleft%28%5Cbegin%7Barray%7D%7Bcccccc%7D%5Cfrac%7B1-p%7D%7B2%7D%260%260%26%5Cfrac%7B1-p%7D%7B2%7D%260%260%5C%5C0%260%260%260%260%260%5C%5C0%260%260%260%260%260%5C%5C%5Cfrac%7B1-p%7D%7B2%7D%260%260%26%5Cfrac%7B1-p%7D%7B2%7D%260%260%5C%5C0%260%260%260%26%5Cfrac%7Bp%7D%7B2%7D%260%5C%5C0%260%260%260%260%26%5Cfrac%7Bp%7D%7B2%7D%5Cend%7Barray%7D%5Cright%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="(\eta\otimes I)\Phi_\rho=\left(\begin{array}{cccccc}\frac{1-p}{2}&amp;0&amp;0&amp;\frac{1-p}{2}&amp;0&amp;0\\0&amp;0&amp;0&amp;0&amp;0&amp;0\\0&amp;0&amp;0&amp;0&amp;0&amp;0\\\frac{1-p}{2}&amp;0&amp;0&amp;\frac{1-p}{2}&amp;0&amp;0\\0&amp;0&amp;0&amp;0&amp;\frac{p}{2}&amp;0\\0&amp;0&amp;0&amp;0&amp;0&amp;\frac{p}{2}\end{array}\right)"/></p>
<p>We can directly calculate that</p>
<p><img alt="H(\eta(\rho))=H_2(p)+(1-p)" class="latex" src="https://s0.wp.com/latex.php?latex=H%28%5Ceta%28%5Crho%29%29%3DH_2%28p%29%2B%281-p%29&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H(\eta(\rho))=H_2(p)+(1-p)"/></p>
<p><img alt="H((\eta\otimes I)\Phi_\rho)=H_2(p)+p" class="latex" src="https://s0.wp.com/latex.php?latex=H%28%28%5Ceta%5Cotimes+I%29%5CPhi_%5Crho%29%3DH_2%28p%29%2Bp&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="H((\eta\otimes I)\Phi_\rho)=H_2(p)+p"/>.</p>
<p>Then, subtracting the two entropies, we can calculate the rate to be</p>
<p><img alt="R=1-2p" class="latex" src="https://s0.wp.com/latex.php?latex=R%3D1-2p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="R=1-2p"/>,</p>
<p>which corresponds exactly to the line we saw on the diagram that plotted rate as a function of <img alt="p" class="latex" src="https://s0.wp.com/latex.php?latex=p&amp;bg=ffffff&amp;fg=333333&amp;s=0" title="p"/> for the quantum erasure channel.</p>
<p><strong>References</strong></p>
<ol>
<li>Bennett, C. H., DiVencenzo, D. P., and Smolin, J. A. Capacities of quantum erasure channels. <em>Phys. Rev. Lett</em>., 78:3217-3220 (1997). quant-ph/9701015.</li>
<li>Bennett, C. H., DiVencenzo, D. P., Smolin, J. A., and Wootters, W. K. Mixed state entanglement and quantum error correction. <em>Phys. Rev. A,</em> 54:3824 (1996). quant-ph/9604024.</li>
<li>Calderbank, A. R. and Shor, P. W. Good quantum error-correcting codes exist. <em>Phys. Rev. A</em>, 54:1098 (1996). quant-ph/9512032.</li>
<li>Devetak, I. The Private Classical Capacity and Quantum Capacity of a Quantum Channel. <em>IEEE Trans. Inf. Theor</em>., 51:44-45 (2005). quant-ph/0304127</li>
<li>Devetak, I. and Winter, A. Classical data compression with quantum side information. <em>Phys. Rev. A</em>, 68(4):042301 (2003).</li>
<li>Gottesman, D. Class of quantum error-correcting codes saturating the quantum Hamming bound. <em>Phys. Rev. A</em>, 54:1862 (1996).</li>
<li>Laflamme, R., Miquel, C., Paz, J.-P., and Zurek, W. H. Perfect quantum error correction code. <em>Phys. Rev. Lett</em>., 77:198 (1996). quant-ph/9602019.</li>
<li>Lloyd, S. Capacity of the noisy quantum channel. <em>Phys. Rev. A</em>., 55:3 (1997). quant-ph/9604015.</li>
<li>Nielsen, M. A. and Chuang, I. L. <em>Quantum Computation and Quantum Information</em>., Cambridge University Press, New York (2011).</li>
<li>Shor, P. W. Scheme for reducing decoherence in quantum computer memory. <em>Phys. Rev. A</em>., 52:2493 (1995).</li>
<li>Shor, P. W. The quantum channel capacity and coherent information. <em>MSRI Workshop on Quantum Computation</em> (2002).</li>
<li>Steane, A. M. Error correcting codes in quantum theory. <em>Phys. Rev. Lett</em>., 77:793 (1996).</li>
<li>Steane, A. M. Multiple particle interference and quantum error correction. <em>Proc. R. Soc. London A</em>, 452:2551-76 (1996).</li>
</ol></div></content><updated planet:format="December 07, 2018 03:12 PM">2018-12-07T15:12:52Z</updated><published planet:format="December 07, 2018 03:12 PM">2018-12-07T15:12:52Z</published><category term="physics"/><author><name>anniewei</name></author><source><id>https://windowsontheory.org</id><logo>https://s0.wp.com/i/buttonw-com.png</logo><link href="https://windowsontheory.org/feed/" rel="self" type="application/atom+xml"/><link href="https://windowsontheory.org" rel="alternate" type="text/html"/><link href="https://windowsontheory.org/osd.xml" rel="search" type="application/opensearchdescription+xml"/><link href="https://windowsontheory.org/?pushpress=hub" rel="hub" type="text/html"/><subtitle>A Research Blog</subtitle><title>Windows On Theory</title><updated planet:format="December 17, 2018 05:29 AM">2018-12-17T05:29:54Z</updated><planet:module>toc</planet:module><planet:format>atom10</planet:format><planet:http_last_modified>Mon, 17 Dec 2018 01:41:40 GMT</planet:http_last_modified><planet:bozo>false</planet:bozo><planet:items_per_page>40</planet:items_per_page><planet:css-id>windows-on-theory</planet:css-id><planet:face>wot.png</planet:face><planet:name>Windows on Theory</planet:name><planet:http_location>https://windowsontheory.org/feed/</planet:http_location><planet:http_status>301</planet:http_status></source></entry>
