/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null||_1===undefined){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},camelize:function(_6){
var _7=_6.split("-");
var cc=_7[0];
for(var i=1;i<_7.length;i++){
cc+=_7[i].charAt(0).toUpperCase()+_7[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(_b){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_b;
return new me();
}
},_deps:function(_d,_e){
if(!(_d in MochiKit)){
MochiKit[_d]={};
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit."+_d);
}
for(var i=0;i<_e.length;i++){
if(typeof (dojo)!="undefined"){
dojo.require("MochiKit."+_e[i]);
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit."+_e[i],[]);
}
if(!(_e[i] in MochiKit)){
throw "MochiKit."+_d+" depends on MochiKit."+_e[i]+"!";
}
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _18=m.extend(null,arguments);
while(_18.length){
var o=_18.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_18.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_1b,obj,_1d){
if(!_1d){
_1d=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_1b){
_1b=[];
}
for(var i=_1d;i<l;i++){
_1b.push(obj[i]);
}
}
return _1b;
},updatetree:function(_20,obj){
if(_20===null||_20===undefined){
_20={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_20[k])=="object"&&typeof (v)=="object"){
arguments.callee(_20[k],v);
}else{
_20[k]=v;
}
}
}
}
return _20;
},setdefault:function(_26,obj){
if(_26===null||_26===undefined){
_26={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _26)){
_26[k]=o[k];
}
}
}
return _26;
},keys:function(obj){
var _2c=[];
for(var _2d in obj){
_2c.push(_2d);
}
return _2c;
},values:function(obj){
var _2f=[];
for(var _30 in obj){
_2f.push(obj[_30]);
}
return _2f;
},items:function(obj){
var _32=[];
var e;
for(var _34 in obj){
var v;
try{
v=obj[_34];
}
catch(e){
continue;
}
_32.push([_34,v]);
}
return _32;
},_newNamedError:function(_36,_37,_38){
_38.prototype=new MochiKit.Base.NamedError(_36.NAME+"."+_37);
_36[_37]=_38;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_76){
return function(){
return this[_76].apply(this,arguments);
};
},itemgetter:function(_77){
return function(arg){
return arg[_77];
};
},typeMatcher:function(){
var _79={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_79[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _79)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _8a=[];
for(var i=1;i<arguments.length;i++){
_8a.push(fn(arguments[i]));
}
return _8a;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _90=m.isArrayLike;
if(arguments.length<=2){
if(!_90(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _91=[];
for(var i=0;i<lst.length;i++){
_91.push(fn(lst[i]));
}
return _91;
}else{
if(fn===null){
fn=Array;
}
var _93=null;
for(i=1;i<arguments.length;i++){
if(!_90(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_93===null||_93>l){
_93=l;
}
}
_91=[];
for(i=0;i<_93;i++){
var _95=[];
for(var j=1;j<arguments.length;j++){
_95.push(arguments[j][i]);
}
_91.push(fn.apply(this,_95));
}
return _91;
}
},xfilter:function(fn){
var _98=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_98.push(o);
}
}
return _98;
},filter:function(fn,lst,_9d){
var _9e=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_9d);
}else{
if(typeof (_9d)=="undefined"||_9d===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_9e.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_9d,o)){
_9e.push(o);
}
}
}
}
return _9e;
},_wrapDumbFunction:function(_a2){
return function(){
switch(arguments.length){
case 0:
return _a2();
case 1:
return _a2(arguments[0]);
case 2:
return _a2(arguments[0],arguments[1]);
case 3:
return _a2(arguments[0],arguments[1],arguments[2]);
}
var _a3=[];
for(var i=0;i<arguments.length;i++){
_a3.push("arguments["+i+"]");
}
return eval("(func("+_a3.join(",")+"))");
};
},methodcaller:function(_a5){
var _a6=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a5)=="function"){
return function(obj){
return _a5.apply(obj,_a6);
};
}else{
return function(obj){
return obj[_a5].apply(obj,_a6);
};
}
},method:function(_a9,_aa){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_aa,_a9],arguments,2));
},compose:function(f1,f2){
var _ae=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_ae.push(fn);
}
return function(){
var _b2=arguments;
for(var i=_ae.length-1;i>=0;i--){
_b2=[_ae[i].apply(this,_b2)];
}
return _b2[0];
};
},bind:function(_b4,_b5){
if(typeof (_b4)=="string"){
_b4=_b5[_b4];
}
var _b6=_b4.im_func;
var _b7=_b4.im_preargs;
var _b8=_b4.im_self;
var m=MochiKit.Base;
if(typeof (_b4)=="function"&&typeof (_b4.apply)=="undefined"){
_b4=m._wrapDumbFunction(_b4);
}
if(typeof (_b6)!="function"){
_b6=_b4;
}
if(typeof (_b5)!="undefined"){
_b8=_b5;
}
if(typeof (_b7)=="undefined"){
_b7=[];
}else{
_b7=_b7.slice();
}
m.extend(_b7,arguments,2);
var _ba=function(){
var _bb=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_bb=m.concat(me.im_preargs,_bb);
}
var _bd=me.im_self;
if(!_bd){
_bd=this;
}
return me.im_func.apply(_bd,_bb);
};
_ba.im_self=_b8;
_ba.im_func=_b6;
_ba.im_preargs=_b7;
return _ba;
},bindMethods:function(_be){
var _bf=MochiKit.Base.bind;
for(var k in _be){
var _c1=_be[k];
if(typeof (_c1)=="function"){
_be[k]=_bf(_c1,_be);
}
}
},registerComparator:function(_c2,_c3,_c4,_c5){
MochiKit.Base.comparatorRegistry.register(_c2,_c3,_c4,_c5);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _c8=(typeof (a)=="undefined"||a===null);
var _c9=(typeof (b)=="undefined"||b===null);
if(_c8&&_c9){
return 0;
}else{
if(_c8){
return -1;
}else{
if(_c9){
return 1;
}
}
}
var m=MochiKit.Base;
var _cb=m._primitives;
if(!(typeof (a) in _cb&&typeof (b) in _cb)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _cc=m.repr;
throw new TypeError(_cc(a)+" and "+_cc(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _d1=MochiKit.Base.compare;
var _d2=a.length;
var _d3=0;
if(_d2>b.length){
_d3=1;
_d2=b.length;
}else{
if(_d2<b.length){
_d3=-1;
}
}
for(var i=0;i<_d2;i++){
var cmp=_d1(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _d3;
},registerRepr:function(_d6,_d7,_d8,_d9){
MochiKit.Base.reprRegistry.register(_d6,_d7,_d8,_d9);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _db=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_db=_db.replace(/^\s+/,"").replace(/\s+/g," ");
var idx=_db.indexOf("{");
if(idx!=-1){
_db=_db.substr(0,idx)+"{...}";
}
}
return _db;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_e1,_e2,_e3,_e4){
MochiKit.Base.jsonRegistry.register(_e1,_e2,_e3,_e4);
},evalJSON:function(){
return eval("("+MochiKit.Base._filterJSON(arguments[0])+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
if(m){
return m[1];
}
return s;
},serializeJSON:function(o){
var _e8=typeof (o);
if(_e8=="number"||_e8=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
var m=MochiKit.Base;
var _ea=m.reprString;
if(_e8=="string"){
return _ea(o);
}
var me=arguments.callee;
var _ec;
if(typeof (o.__json__)=="function"){
_ec=o.__json__();
if(o!==_ec){
return me(_ec);
}
}
if(typeof (o.json)=="function"){
_ec=o.json();
if(o!==_ec){
return me(_ec);
}
}
if(_e8!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_ec=m.jsonRegistry.match(o);
if(o!==_ec){
return me(_ec);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_e8=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_e8=="function"){
return null;
}
res=[];
for(var k in o){
var _f1;
if(typeof (k)=="number"){
_f1="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_f1=_ea(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_f1+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_f4,arr){
if(_f4.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_f4,arr)===0);
},concat:function(){
var _f6=[];
var _f7=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_f7(_f6,arguments[i]);
}
return _f6;
},keyComparator:function(key){
var m=MochiKit.Base;
var _fb=m.compare;
if(arguments.length==1){
return function(a,b){
return _fb(a[key],b[key]);
};
}
var _fe=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_fe.length);i++){
var key=_fe[i];
rval=_fb(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _105=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _105(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_10a,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _10d=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_10d(o,cur)==_10a){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_111,_112,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_112)=="undefined"||_112===null){
_112=0;
}
for(var i=_112;i<end;i++){
if(lst[i]===_111){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _118=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_118+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_118<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_118;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _11c=data.length/2;
return (data[_11c]+data[_11c-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_11e,_11f,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11f)=="undefined"||_11f===null){
_11f=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_11f;i<end;i++){
if(cmp(lst[i],_11e)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_124){
var _125=[node];
var _126=MochiKit.Base.extend;
while(_125.length){
var res=_124(_125.shift());
if(res){
_126(_125,res);
}
}
},nameFunctions:function(_128){
var base=_128.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _128){
var o=_128[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_12c,_12d){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_12c)=="string"||(typeof (_12c.nodeType)!="undefined"&&_12c.nodeType>0))){
var kv=MochiKit.DOM.formContents(_12c);
_12c=kv[0];
_12d=kv[1];
}else{
if(arguments.length==1){
if(typeof (_12c.length)=="number"&&_12c.length==2){
return arguments.callee(_12c[0],_12c[1]);
}
var o=_12c;
_12c=[];
_12d=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_12c.push(k);
_12d.push(v[i]);
}
}else{
_12c.push(k);
_12d.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_12c.length,_12d.length);
var _135=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_12d[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_135(_12c[i])+"="+_135(v));
}
}
return rval.join("&");
},parseQueryString:function(_136,_137){
var qstr=(_136.charAt(0)=="?")?_136.substring(1):_136;
var _139=qstr.replace(/\+/g,"%20").split(/(\&amp\;|\&\#38\;|\&#x26;|\&)/);
var o={};
var _13b;
if(typeof (decodeURIComponent)!="undefined"){
_13b=decodeURIComponent;
}else{
_13b=unescape;
}
if(_137){
for(var i=0;i<_139.length;i++){
var pair=_139[i].split("=");
var name=_13b(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_13b(pair.join("=")));
}
}else{
for(i=0;i<_139.length;i++){
pair=_139[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_13b(name)]=_13b(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_141,wrap,_143){
if(_143){
this.pairs.unshift([name,_141,wrap]);
}else{
this.pairs.push([name,_141,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["flattenArray","noop","camelize","counter","clone","extend","update","updatetree","setdefault","keys","values","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method","average","mean","median"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_149,_14a){
if(!MochiKit.__export__){
return;
}
var all=_14a.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_149[all[i]]=_14a[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_14e){
return encodeURIComponent(_14e).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_14f){
return escape(_14f).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
MochiKit.Base._deps("DateTime",["Base"]);
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.4";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
return new Date(iso[0],iso[1]-1,iso[2]);
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_157,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_157=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_157,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_157,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_157,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_15f){
if(typeof (date)=="undefined"||date===null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_15f&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_165){
if(typeof (date)=="undefined"||date===null){
return null;
}
var sep=_165?"T":" ";
var foot=_165?"Z":"";
if(_165){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_165)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _169=MochiKit.DateTime._padTwo;
return [date.getFullYear(),_169(date.getMonth()+1),_169(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _16e=MochiKit.DateTime._padTwo;
return [_16e(d.getMonth()+1),_16e(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
}else{
(function(_173,_174){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(MochiKit.__export__===false)){
var all=_174.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_173[all[i]]=_174[all[i]];
}
}
})(this,MochiKit.DateTime);
}
MochiKit.Base._deps("Async",["Base"]);
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.4";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_177){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_177;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _178;
if(this.fired==-1){
_178="unfired";
}else{
if(this.fired===0){
_178="success";
}else{
_178="error";
}
}
return "Deferred("+this.id+", "+_178+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _183=this.chain;
var _184=this.fired;
var res=this.results[_184];
var self=this;
var cb=null;
while(_183.length>0&&this.paused===0){
var pair=_183.shift();
var f=pair[_184];
if(f===null){
continue;
}
try{
res=f(res);
_184=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._resback(res);
self.paused--;
if((self.paused===0)&&(self.fired>=0)){
self._fire();
}
};
this.paused++;
}
}
catch(err){
_184=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_184;
this.results[_184]=res;
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_18c){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_18e){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _191=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_191.length;i++){
var func=_191[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _196=null;
try{
_196=this.status;
if(!_196&&m.isNotEmpty(this.responseText)){
_196=304;
}
}
catch(e){
}
if(_196==200||_196==201||_196==204||_196==304||_196==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_19a){
if(typeof (_19a)=="undefined"||_19a===null){
_19a="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_19a);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self.callLater(0,self._doXHR,url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:""},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,true,opts.username,opts.password);
}else{
req.open(opts.method,url,true);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _1a7=opts.headers;
if(!m.isArrayLike(_1a7)){
_1a7=m.items(_1a7);
}
for(var i=0;i<_1a7.length;i++){
var _1a9=_1a7[i];
var name=_1a9[0];
var _1ab=_1a9[1];
req.setRequestHeader(name,_1ab);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_1b4,_1b5){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_1b5)!="undefined"){
d.addCallback(function(){
return _1b5;
});
}
var _1b8=setTimeout(m.bind("callback",d),Math.floor(_1b4*1000));
d.canceller=function(){
try{
clearTimeout(_1b8);
}
catch(e){
}
};
return d;
},callLater:function(_1b9,func){
var m=MochiKit.Base;
var _1bc=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_1b9).addCallback(function(res){
return _1bc();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _1bf;
if(this.locked){
_1bf="locked, "+this.waiting.length+" waiting";
}else{
_1bf="unlocked";
}
return "DeferredLock("+this.id+", "+_1bf+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_1c1,_1c2,_1c3,_1c4){
MochiKit.Async.Deferred.apply(this,[_1c4]);
this.list=list;
var _1c5=[];
this.resultList=_1c5;
this.finishedCount=0;
this.fireOnOneCallback=_1c1;
this.fireOnOneErrback=_1c2;
this.consumeErrors=_1c3;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_1c5.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_1c1){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_1c9,_1ca,_1cb){
this.resultList[_1c9]=[_1ca,_1cb];
this.finishedCount+=1;
if(this.fired==-1){
if(_1ca&&this.fireOnOneCallback){
this.callback([_1c9,_1cb]);
}else{
if(!_1ca&&this.fireOnOneErrback){
this.errback(_1cb);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_1ca&&this.consumeErrors){
_1cb=null;
}
return _1cb;
};
MochiKit.Async.gatherResults=function(_1cc){
var d=new MochiKit.Async.DeferredList(_1cc,false,true,false);
d.addCallback(function(_1ce){
var ret=[];
for(var i=0;i<_1ce.length;i++){
ret.push(_1ce[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _1d3;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_1d3=r;
}else{
if(r instanceof Error){
_1d3=self.fail(r);
}else{
_1d3=self.succeed(r);
}
}
}
catch(e){
_1d3=self.fail(e);
}
return _1d3;
};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock","DeferredList","gatherResults","maybeDeferred","doXHR"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_1d7){
this.deferred=_1d7;
});
ne("CancelledError",function(_1d8){
this.deferred=_1d8;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
MochiKit.Base._deps("DOM",["Base"]);
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["removeEmptyTextNodes","formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","isChildNode","getNodeAttribute","removeNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","insertSiblingNodesAfter","insertSiblingNodesBefore","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","DL","DT","DD","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText","isParent","getFirstParentByTagAndClassName","makeClipping","undoClipping","makePositioned","undoPositioned","getFirstElementByTagAndClassName"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.DEPRECATED=[["computedStyle","MochiKit.Style.getStyle","1.4"],["elementDimensions","MochiKit.Style.getElementDimensions","1.4"],["elementPosition","MochiKit.Style.getElementPosition","1.4"],["hideElement","MochiKit.Style.hideElement","1.4"],["setElementDimensions","MochiKit.Style.setElementDimensions","1.4"],["setElementPosition","MochiKit.Style.setElementPosition","1.4"],["setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4"],["setOpacity","MochiKit.Style.setOpacity","1.4"],["showElement","MochiKit.Style.showElement","1.4"],["Coordinates","MochiKit.Style.Coordinates","1.4"],["Dimensions","MochiKit.Style.Dimensions","1.4"]];
MochiKit.DOM.getViewportDimensions=new Function(""+"if (!MochiKit[\"Style\"]) {"+"    throw new Error(\"This function has been deprecated and depends on MochiKit.Style.\");"+"}"+"return MochiKit.Style.getViewportDimensions.apply(this, arguments);");
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _1e0=self._document;
var _1e1=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_1e1;
self._document=_1e0;
throw e;
}
self._window=_1e1;
self._document=_1e0;
return rval;
},formContents:function(elem){
var _1e4=[];
var _1e5=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _1ea=elem.tagName.toUpperCase();
if(_1ea==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_1ea==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_1e4.push(name);
_1e5.push(v);
return null;
}
_1e4.push(name);
_1e5.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_1e4.push(name);
_1e5.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_1e4.push(name);
_1e5.push(v);
}
return null;
}
}
if(_1ea==="FORM"||_1ea==="P"||_1ea==="SPAN"||_1ea==="DIV"){
return elem.childNodes;
}
_1e4.push(name);
_1e5.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_1e4,_1e5];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _1f3=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_1f3;
throw e;
}
self._document=_1f3;
return rval;
},registerDOMConverter:function(name,_1f6,wrap,_1f8){
MochiKit.DOM.domConverters.register(name,_1f6,wrap,_1f8);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _1ff=im.repeat;
var map=m.map;
}
var _201=self.domConverters;
var _202=arguments.callee;
var _203=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im.list(node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _204=null;
try{
_204=iter(node);
}
catch(e){
}
if(_204){
return map(_202,_204,_1ff(ctx));
}
}
try{
node=_201.match(node,ctx);
continue;
}
catch(e){
if(e!=_203){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_206){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_206)=="string"){
_206=self.getElement(_206);
}
if(typeof (node)=="undefined"||node===null||node===self._document){
return false;
}
do{
if(node===_206){
return true;
}
var _208=node.tagName;
node=node.parentNode;
if(!_208){
break;
}
_208=_208.toUpperCase();
}while(_208!="BODY"&&_208!="HTML");
return false;
},setNodeAttribute:function(node,attr,_20b){
var o={};
o[attr]=_20b;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _210=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_210){
return node[_210];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _214=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_214){
return node[_214];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_216){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_216){
var _219=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _216){
var v=_216[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_219(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _21c=self.attributeArray.renames;
for(var k in _216){
v=_216[k];
var _21d=_21c[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_21d)=="string"){
elem[_21d]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_219(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _221=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _222=MochiKit.Base.concat;
while(_221.length){
var n=_221.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_221=_222(n,_221);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _227=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _228=elem.parentNode;
var _229=MochiKit.Base.concat;
while(_227.length){
var n=_227.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_228.insertBefore(n,elem);
}else{
_227=_229(n,_227);
}
}
}
return _228;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _22e=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_22e);
}else{
return self.appendChildNodes(elem.parentNode,_22e);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _232;
while((_232=elem.firstChild)){
elem.removeChild(_232);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_234){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_234)=="string"||typeof (_234)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _239=self._xhtml;
if(_234&&!self.attributeArray.compliant){
var _23a="";
if("name" in _234){
_23a+=" name=\""+self.escapeHTML(_234.name)+"\"";
}
if(name=="input"&&"type" in _234){
_23a+=" type=\""+self.escapeHTML(_234.type)+"\"";
}
if(_23a){
name="<"+name+_23a+">";
_239=false;
}
}
var d=self._document;
if(_239&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_234){
self.updateNodeAttributes(elem,_234);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var e=MochiKit.DOM.getElement(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _242=dest.parentNode;
if(src){
src=self.getElement(src);
_242.replaceChild(src,dest);
}else{
_242.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_245,_246,_247){
var self=MochiKit.DOM;
if(typeof (_245)=="undefined"||_245===null){
_245="*";
}
if(typeof (_247)=="undefined"||_247===null){
_247=self._document;
}
_247=self.getElement(_247);
var _249=(_247.getElementsByTagName(_245)||self._document.all);
if(typeof (_246)=="undefined"||_246===null){
return MochiKit.Base.extend(null,_249);
}
var _24a=[];
for(var i=0;i<_249.length;i++){
var _24c=_249[i];
var cls=_24c.className;
if(!cls){
continue;
}
var _24e=cls.split(" ");
for(var j=0;j<_24e.length;j++){
if(_24e[j]==_246){
_24a.push(_24c);
break;
}
}
}
return _24a;
},_newCallStack:function(path,once){
var rval=function(){
var _253=arguments.callee.callStack;
for(var i=0;i<_253.length;i++){
if(_253[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_255,path,func,once){
var self=MochiKit.DOM;
var _25a=_255[path];
var _25b=_25a;
if(!(typeof (_25a)=="function"&&typeof (_25a.callStack)=="object"&&_25a.callStack!==null)){
_25b=self._newCallStack(path,once);
if(typeof (_25a)=="function"){
_25b.callStack.push(_25a);
}
_255[path]=_25b;
}
_25b.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_25e){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_25e=self.getElement(_25e);
if(_25e){
_25e.focus();
}
});
},setElementClass:function(_260,_261){
var self=MochiKit.DOM;
var obj=self.getElement(_260);
if(self.attributeArray.compliant){
obj.setAttribute("class",_261);
}else{
obj.setAttribute("className",_261);
}
},toggleElementClass:function(_264){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_264)){
self.removeElementClass(obj,_264);
}
}
},addElementClass:function(_268,_269){
var self=MochiKit.DOM;
var obj=self.getElement(_268);
var cls=obj.className;
if(cls==undefined||cls.length===0){
self.setElementClass(obj,_269);
return true;
}
if(cls==_269){
return false;
}
var _26d=cls.split(" ");
for(var i=0;i<_26d.length;i++){
if(_26d[i]==_269){
return false;
}
}
self.setElementClass(obj,cls+" "+_269);
return true;
},removeElementClass:function(_26f,_270){
var self=MochiKit.DOM;
var obj=self.getElement(_26f);
var cls=obj.className;
if(cls==undefined||cls.length===0){
return false;
}
if(cls==_270){
self.setElementClass(obj,"");
return true;
}
var _274=cls.split(" ");
for(var i=0;i<_274.length;i++){
if(_274[i]==_270){
_274.splice(i,1);
self.setElementClass(obj,_274.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_276,_277,_278){
var obj=MochiKit.DOM.getElement(_276);
var res=MochiKit.DOM.removeElementClass(obj,_277);
if(res){
MochiKit.DOM.addElementClass(obj,_278);
}
return res;
},hasElementClass:function(_27b,_27c){
var obj=MochiKit.DOM.getElement(_27b);
var cls=obj.className;
if(!cls){
return false;
}
var _27f=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_27f.length;j++){
if(_27f[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _287=[dom];
var self=MochiKit.DOM;
var _289=self.escapeHTML;
var _28a=self.attributeArray;
while(_287.length){
dom=_287.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _28b=[];
var _28c=_28a(dom);
for(var i=0;i<_28c.length;i++){
var a=_28c[i];
_28b.push([" ",a.name,"=\"",_289(a.value),"\""]);
}
_28b.sort();
for(i=0;i<_28b.length;i++){
var _28f=_28b[i];
for(var j=0;j<_28f.length;j++){
lst.push(_28f[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_287.push("</"+dom.tagName.toLowerCase()+">");
var _291=dom.childNodes;
for(i=_291.length-1;i>=0;i--){
_287.push(_291[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_289(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_293){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _298=node.nodeValue;
if(typeof (_298)=="string"){
rval.push(_298);
}
})(MochiKit.DOM.getElement(node));
if(_293){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_299){
_299=MochiKit.DOM.getElement(_299);
for(var i=0;i<_299.childNodes.length;i++){
var node=_299.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},makeClipping:function(_29c){
_29c=MochiKit.DOM.getElement(_29c);
var _29d=_29c.style.overflow;
if((MochiKit.Style.getStyle(_29c,"overflow")||"visible")!="hidden"){
_29c.style.overflow="hidden";
}
return _29d;
},undoClipping:function(_29e,_29f){
_29e=MochiKit.DOM.getElement(_29e);
if(!_29f){
return;
}
_29e.style.overflow=_29f;
},makePositioned:function(_2a0){
_2a0=MochiKit.DOM.getElement(_2a0);
var pos=MochiKit.Style.getStyle(_2a0,"position");
if(pos=="static"||!pos){
_2a0.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_2a0.style.top=0;
_2a0.style.left=0;
}
}
},undoPositioned:function(_2a2){
_2a2=MochiKit.DOM.getElement(_2a2);
if(_2a2.style.position=="relative"){
_2a2.style.position=_2a2.style.top=_2a2.style.left=_2a2.style.bottom=_2a2.style.right="";
}
},getFirstElementByTagAndClassName:function(_2a3,_2a4,_2a5){
var self=MochiKit.DOM;
if(typeof (_2a3)=="undefined"||_2a3===null){
_2a3="*";
}
if(typeof (_2a5)=="undefined"||_2a5===null){
_2a5=self._document;
}
_2a5=self.getElement(_2a5);
var _2a7=(_2a5.getElementsByTagName(_2a3)||self._document.all);
if(typeof (_2a4)=="undefined"||_2a4===null){
return _2a7[0];
}
for(var i=0;i<_2a7.length;i++){
var _2a9=_2a7[i];
var _2aa=_2a9.className.split(" ");
for(var j=0;j<_2aa.length;j++){
if(_2aa[j]==_2a4){
return _2a9;
}
}
}
},getFirstParentByTagAndClassName:function(elem,_2ad,_2ae){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_2ad)=="undefined"||_2ad===null){
_2ad="*";
}else{
_2ad=_2ad.toUpperCase();
}
if(typeof (_2ae)=="undefined"||_2ae===null){
_2ae=null;
}
var _2b0="";
var _2b1="";
while(elem&&elem.tagName){
elem=elem.parentNode;
if(_2ad=="*"&&_2ae===null){
return elem;
}
_2b0=elem.className.split(" ");
_2b1=elem.tagName.toUpperCase();
if(_2ae===null&&_2ad==_2b1){
return elem;
}else{
if(_2ae!==null){
for(var i=0;i<_2b0.length;i++){
if(_2ad=="*"&&_2b0[i]==_2ae){
return elem;
}else{
if(_2ad==_2b1&&_2b0[i]==_2ae){
return elem;
}
}
}
}
}
}
return elem;
},isParent:function(_2b3,_2b4){
if(!_2b3.parentNode||_2b3==_2b4){
return false;
}
if(_2b3.parentNode==_2b4){
return true;
}
return MochiKit.DOM.isParent(_2b3.parentNode,_2b4);
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _2b7="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_2b7);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _2b8=this._document.createElement("span");
var _2b9;
if(_2b8&&_2b8.attributes&&_2b8.attributes.length>0){
var _2ba=m.filter;
_2b9=function(node){
return _2ba(_2b9.ignoreAttrFilter,node.attributes);
};
_2b9.ignoreAttr={};
var _2bc=_2b8.attributes;
var _2bd=_2b9.ignoreAttr;
for(var i=0;i<_2bc.length;i++){
var a=_2bc[i];
_2bd[a.name]=a.value;
}
_2b9.ignoreAttrFilter=function(a){
return (_2b9.ignoreAttr[a.name]!=a.value);
};
_2b9.compliant=false;
_2b9.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_2b9=function(node){
return node.attributes;
};
_2b9.compliant=true;
_2b9.renames={};
}
this.attributeArray=_2b9;
var _2c2=function(_2c3,arr){
var _2c5=arr[1].split(".");
var str="";
var obj={};
str+="if (!MochiKit."+_2c5[1]+") { throw new Error(\"";
str+="This function has been deprecated and depends on MochiKit.";
str+=_2c5[1]+".\");}";
str+="return MochiKit."+_2c5[1]+"."+arr[0];
str+=".apply(this, arguments);";
obj[_2c5[2]]=new Function(str);
MochiKit.Base.update(MochiKit[_2c3],obj);
};
for(var i;i<MochiKit.DOM.DEPRECATED.length;i++){
_2c2("DOM",MochiKit.DOM.DEPRECATED[i]);
}
var _2c8=this.createDOMFunc;
this.UL=_2c8("ul");
this.OL=_2c8("ol");
this.LI=_2c8("li");
this.DL=_2c8("dl");
this.DT=_2c8("dt");
this.DD=_2c8("dd");
this.TD=_2c8("td");
this.TR=_2c8("tr");
this.TBODY=_2c8("tbody");
this.THEAD=_2c8("thead");
this.TFOOT=_2c8("tfoot");
this.TABLE=_2c8("table");
this.TH=_2c8("th");
this.INPUT=_2c8("input");
this.SPAN=_2c8("span");
this.A=_2c8("a");
this.DIV=_2c8("div");
this.IMG=_2c8("img");
this.BUTTON=_2c8("button");
this.TT=_2c8("tt");
this.PRE=_2c8("pre");
this.H1=_2c8("h1");
this.H2=_2c8("h2");
this.H3=_2c8("h3");
this.BR=_2c8("br");
this.HR=_2c8("hr");
this.LABEL=_2c8("label");
this.TEXTAREA=_2c8("textarea");
this.FORM=_2c8("form");
this.P=_2c8("p");
this.SELECT=_2c8("select");
this.OPTION=_2c8("option");
this.OPTGROUP=_2c8("optgroup");
this.LEGEND=_2c8("legend");
this.FIELDSET=_2c8("fieldset");
this.STRONG=_2c8("strong");
this.CANVAS=_2c8("canvas");
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
MochiKit.Base._deps("Style",["Base","DOM"]);
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setStyle","setOpacity","getStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions","getViewportPosition","Dimensions","Coordinates"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_2d0){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_2d0=MochiKit.Base.camelize(_2d0);
if(!elem||elem==d){
return undefined;
}
if(_2d0=="opacity"&&elem.filters){
var _2d3=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_2d3&&_2d3[1]){
return parseFloat(_2d3[1])/100;
}
return 1;
}
var _2d4=elem.style?elem.style[_2d0]:null;
if(!_2d4){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_2d0=_2d0.replace(/([A-Z])/g,"-$1").toLowerCase();
_2d4=css?css.getPropertyValue(_2d0):null;
}else{
if(elem.currentStyle){
_2d4=elem.currentStyle[_2d0];
}
}
}
if(_2d0=="opacity"){
_2d4=parseFloat(_2d4);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.find(["left","top","right","bottom"],_2d0)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_2d4="auto";
}
}
return _2d4=="auto"?null:_2d4;
},setStyle:function(elem,_2d7){
elem=MochiKit.DOM.getElement(elem);
for(var name in _2d7){
if(name=="opacity"){
MochiKit.Style.setOpacity(elem,_2d7[name]);
}else{
elem.style[MochiKit.Base.camelize(name)]=_2d7[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _2dc=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_2dc?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_2de){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode===null||self.getStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _2e3=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
return c;
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_2e3=elem.offsetParent;
if(_2e3!=elem){
while(_2e3){
c.x+=_2e3.offsetLeft;
c.y+=_2e3.offsetTop;
_2e3=_2e3.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_2de)!="undefined"){
_2de=arguments.callee(_2de);
if(_2de){
c.x-=(_2de.x||0);
c.y-=(_2de.y||0);
}
}
if(elem.parentNode){
_2e3=elem.parentNode;
}else{
_2e3=null;
}
while(_2e3){
var _2e8=_2e3.tagName.toUpperCase();
if(_2e8==="BODY"||_2e8==="HTML"){
break;
}
var disp=self.getStyle(_2e3,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_2e3.scrollLeft;
c.y-=_2e3.scrollTop;
}
if(_2e3.parentNode){
_2e3=_2e3.parentNode;
}else{
_2e3=null;
}
}
return c;
},setElementPosition:function(elem,_2eb,_2ec){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_2ec)=="undefined"){
_2ec="px";
}
var _2ed={};
var _2ee=MochiKit.Base.isUndefinedOrNull;
if(!_2ee(_2eb.x)){
_2ed["left"]=_2eb.x+_2ec;
}
if(!_2ee(_2eb.y)){
_2ed["top"]=_2eb.y+_2ec;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_2ed});
},getElementDimensions:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp!="none"&&disp!==""&&typeof (disp)!="undefined"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _2f4=s.visibility;
var _2f5=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _2f6=elem.offsetWidth;
var _2f7=elem.offsetHeight;
s.display="none";
s.position=_2f5;
s.visibility=_2f4;
return new self.Dimensions(_2f6,_2f7);
},setElementDimensions:function(elem,_2f9,_2fa){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_2fa)=="undefined"){
_2fa="px";
}
var _2fb={};
var _2fc=MochiKit.Base.isUndefinedOrNull;
if(!_2fc(_2f9.w)){
_2fb["width"]=_2f9.w+_2fa;
}
if(!_2fc(_2f9.h)){
_2fb["height"]=_2f9.h+_2fa;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_2fb});
},setDisplayForElement:function(_2fd,_2fe){
var _2ff=MochiKit.Base.extend(null,arguments,1);
var _300=MochiKit.DOM.getElement;
for(var i=0;i<_2ff.length;i++){
_2fe=_300(_2ff[i]);
if(_2fe){
_2fe.style.display=_2fd;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
MochiKit.Base._deps("Iter",["Base"]);
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.4";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_30b,_30c,_30d){
MochiKit.Iter.iteratorRegistry.register(name,_30b,_30c,_30d);
},iter:function(_30e,_30f){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_30f;
},_30e);
}
if(typeof (_30e.next)=="function"){
return _30e;
}else{
if(typeof (_30e.iter)=="function"){
return _30e.iter();
}
}
try{
return self.iteratorRegistry.match(_30e);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_30e)+": "+m.repr(_30e)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _319=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_319.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_31f){
return _31f.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _325=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_325);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _331=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_331=arguments[1];
stop=arguments[2];
}else{
_331=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_331,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_331){
rval=seq.next();
i++;
}
if(_331>=stop){
throw self.StopIteration;
}
_331+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _33b=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_33b));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _346=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_346.length>1){
try{
var _347=_346[0].next();
return _347;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_346.shift();
var _347=_346[0].next();
return _347;
}
}
if(_346.length==1){
var arg=_346.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_352,sync,_354){
sync.pos[_352]=-1;
var m=MochiKit.Base;
var _356=m.listMin;
return {repr:function(){
return "tee("+_352+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_352];
if(i==sync.max){
rval=_354.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_352]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_352]+=1;
if(i==sync.min&&_356(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_359,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_359=self.iter(_359);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_359));
}
return rval;
},list:function(_360){
var rval;
if(_360 instanceof Array){
return _360.slice();
}
if(typeof (_360)=="function"&&!(_360 instanceof Function)&&typeof (_360.length)=="number"){
rval=[];
for(var i=0;i<_360.length;i++){
rval.push(_360[i]);
}
return rval;
}
var self=MochiKit.Iter;
_360=self.iter(_360);
var rval=[];
var _364;
try{
while(true){
_364=_360.next();
rval.push(_364);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_366,_367){
var i=0;
var x=_367;
var self=MochiKit.Iter;
_366=self.iter(_366);
if(arguments.length<3){
try{
x=_366.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_366.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _36b=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_36b=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_36b=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_36b>=stop)||(step<0&&_36b<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_36b;
_36b+=step;
return rval;
},repr:function(){
return "range("+[_36b,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_36f,_370){
if(typeof (_370)=="undefined"||_370===null){
_370=0;
}
var x=_370;
var self=MochiKit.Iter;
_36f=self.iter(_36f);
try{
while(true){
x+=_36f.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_373){
var self=MochiKit.Iter;
_373=self.iter(_373);
try{
while(true){
_373.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_375,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_375)){
try{
for(var i=0;i<_375.length;i++){
func(_375[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_375));
}
},every:function(_37a,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_37a).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_37d,cmp){
var rval=MochiKit.Iter.list(_37d);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_380){
var rval=MochiKit.Iter.list(_380);
rval.reverse();
return rval;
},some:function(_382,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_382).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_386){
if(MochiKit.Base.isArrayLike(_386)){
for(var i=0;i<_386.length;i++){
lst.push(_386[i]);
}
}else{
var self=MochiKit.Iter;
_386=self.iter(_386);
try{
while(true){
lst.push(_386.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_389,_38a){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_38a=m.operator.identity;
}
_389=self.iter(_389);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_389.next();
k=_38a(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _391=true;
var _392=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_392(k,pk)===0){
fetch();
if(_391){
_391=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_392(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_393,_394){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_394=m.operator.identity;
}
_393=self.iter(_393);
var _397=[];
var _398=true;
var _399;
var _39a=m.compare;
while(true){
try{
var _39b=_393.next();
var key=_394(_39b);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_398||_39a(key,_399)!==0){
var _39d=[];
_397.push([key,_39d]);
}
_39d.push(_39b);
_398=false;
_399=key;
}
return _397;
},arrayLikeIter:function(_39e){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_39e.length){
throw MochiKit.Iter.StopIteration;
}
return _39e[i++];
}};
},hasIterateNext:function(_3a0){
return (_3a0&&typeof (_3a0.iterateNext)=="function");
},iterateNextIter:function(_3a1){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_3a1.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter"];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
MochiKit.Base._deps("Color",["Base","DOM","Style"]);
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.4";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_3a5,blue,_3a7){
if(typeof (_3a7)=="undefined"||_3a7===null){
_3a7=1;
}
this.rgb={r:red,g:_3a5,b:blue,a:_3a7};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_3a8){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_3a8);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_3ae){
var hsl=this.asHSL();
hsl.s=_3ae;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_3b1){
var hsl=this.asHSL();
hsl.l=_3b1;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_3b4){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_3b4,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_3b7){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_3b7,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_3ba,_3bb){
if(typeof (_3bb)=="undefined"||_3bb===null){
_3bb=0.5;
}
var sf=1-_3bb;
var s=this.rgb;
var d=_3ba.rgb;
var df=_3bb;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_3c0){
var a=this.asRGB();
var b=_3c0.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_3d7,blue,_3d9){
var _3da=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_3d7=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_3d9=undefined;
}else{
_3d9=rgb.a;
}
}
return new _3da(red,_3d7,blue,_3d9);
},fromHSL:function(hue,_3dd,_3de,_3df){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_3e2,_3e3,_3e4){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _3e7=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _3e8=_3e7._namedColors[name.toLowerCase()];
if(typeof (_3e8)=="string"){
return _3e7.fromHexString(_3e8);
}else{
if(name=="transparent"){
return _3e7.transparentColor();
}
}
return null;
},fromString:function(_3e9){
var self=MochiKit.Color.Color;
var _3eb=_3e9.substr(0,3);
if(_3eb=="rgb"){
return self.fromRGBString(_3e9);
}else{
if(_3eb=="hsl"){
return self.fromHSLString(_3e9);
}else{
if(_3e9.charAt(0)=="#"){
return self.fromHexString(_3e9);
}
}
}
return self.fromName(_3e9);
},fromHexString:function(_3ec){
if(_3ec.charAt(0)=="#"){
_3ec=_3ec.substring(1);
}
var _3ed=[];
var i,hex;
if(_3ec.length==3){
for(i=0;i<3;i++){
hex=_3ec.substr(i,1);
_3ed.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_3ec.substr(i,2);
_3ed.push(parseInt(hex,16)/255);
}
}
var _3f0=MochiKit.Color.Color;
return _3f0.fromRGB.apply(_3f0,_3ed);
},_fromColorString:function(pre,_3f2,_3f3,_3f4){
if(_3f4.indexOf(pre)===0){
_3f4=_3f4.substring(_3f4.indexOf("(",3)+1,_3f4.length-1);
}
var _3f5=_3f4.split(/\s*,\s*/);
var _3f6=[];
for(var i=0;i<_3f5.length;i++){
var c=_3f5[i];
var val;
var _3fa=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_3fa=="deg"){
val=parseFloat(c)/360;
}else{
if(_3fa=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_3f3[i]*parseFloat(c);
}
}
}
_3f6.push(val);
}
return this[_3f2].apply(this,_3f6);
},fromComputedStyle:function(elem,_3fc){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _3ff=MochiKit.Style.getStyle.apply(d,arguments);
if(!_3ff){
continue;
}
var _400=cls.fromString(_3ff);
if(!_400){
break;
}
if(_400.asRGB().a>0){
return _400;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_406){
v*=_406;
if(v<0){
return 0;
}else{
if(v>_406){
return _406;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_40c,_40d,_40e){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_40c=hsv.s;
_40d=hsv.v;
_40e=hsv.a;
}
var red;
var _411;
var blue;
if(_40c===0){
red=_40d;
_411=_40d;
blue=_40d;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_40d*(1-_40c);
var q=_40d*(1-(_40c*f));
var t=_40d*(1-(_40c*(1-f)));
switch(i){
case 1:
red=q;
_411=_40d;
blue=p;
break;
case 2:
red=p;
_411=_40d;
blue=t;
break;
case 3:
red=p;
_411=q;
blue=_40d;
break;
case 4:
red=t;
_411=p;
blue=_40d;
break;
case 5:
red=_40d;
_411=p;
blue=q;
break;
case 6:
case 0:
red=_40d;
_411=t;
blue=p;
break;
}
}
return {r:red,g:_411,b:blue,a:_40e};
},hslToRGB:function(hue,_419,_41a,_41b){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_419=hsl.s;
_41a=hsl.l;
_41b=hsl.a;
}
var red;
var _41e;
var blue;
if(_419===0){
red=_41a;
_41e=_41a;
blue=_41a;
}else{
var m2;
if(_41a<=0.5){
m2=_41a*(1+_419);
}else{
m2=_41a+_419-(_41a*_419);
}
var m1=(2*_41a)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_41e=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_41e,b:blue,a:_41b};
},rgbToHSV:function(red,_425,blue,_427){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_425=rgb.g;
blue=rgb.b;
_427=rgb.a;
}
var max=Math.max(Math.max(red,_425),blue);
var min=Math.min(Math.min(red,_425),blue);
var hue;
var _42c;
var _42d=max;
if(min==max){
hue=0;
_42c=0;
}else{
var _42e=(max-min);
_42c=_42e/max;
if(red==max){
hue=(_425-blue)/_42e;
}else{
if(_425==max){
hue=2+((blue-red)/_42e);
}else{
hue=4+((red-_425)/_42e);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_42c,v:_42d,a:_427};
},rgbToHSL:function(red,_430,blue,_432){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_430=rgb.g;
blue=rgb.b;
_432=rgb.a;
}
var max=Math.max(red,Math.max(_430,blue));
var min=Math.min(red,Math.min(_430,blue));
var hue;
var _437;
var _438=(max+min)/2;
var _439=max-min;
if(_439===0){
hue=0;
_437=0;
}else{
if(_438<=0.5){
_437=_439/(max+min);
}else{
_437=_439/(2-max-min);
}
if(red==max){
hue=(_430-blue)/_439;
}else{
if(_430==max){
hue=2+((blue-red)/_439);
}else{
hue=4+((red-_430)/_439);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_437,l:_438,a:_432};
},toColorPart:function(num){
num=Math.round(num);
var _43b=num.toString(16);
if(num<16){
return "0"+_43b;
}
return _43b;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _43d=1/3;
var _43e={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_43d,_43d,_43d],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_43d,2*_43d,2*_43d],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _43f=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _43e){
var name=k+"Color";
var _448=m.concat([_43f,this.Color,name],_43e[k]);
this.Color[name]=m.bind.apply(null,_448);
}
var _449=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _44b=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_449,_44b);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._deps("Format",["Base"]);
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.4";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_44e,_44f,_450,_451,_452,_453,_454,_455,_456){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _44e;
}
var _458=_44f;
var _459=_450;
if(num<0){
num=-num;
}else{
_458=_458.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_451);
if(_452){
num=num*100;
_459=fmt.percent+_459;
}
num=MochiKit.Format.roundToFixed(num,_453);
var _45c=num.split(/\./);
var _45d=_45c[0];
var frac=(_45c.length==1)?"":_45c[1];
var res="";
while(_45d.length<_454){
_45d="0"+_45d;
}
if(_455){
while(_45d.length>_455){
var i=_45d.length-_455;
res=fmt.separator+_45d.substring(i,_45d.length)+res;
_45d=_45d.substring(0,i);
}
}
res=_45d+res;
if(_453>0){
while(frac.length<_456){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _458+res+_459;
};
};
MochiKit.Format.numberFormatter=function(_461,_462,_463){
if(typeof (_462)=="undefined"){
_462="";
}
var _464=_461.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_464){
throw TypeError("Invalid pattern");
}
var _465=_461.substr(0,_464.index);
var _466=_461.substr(_464.index+_464[0].length);
if(_465.search(/-/)==-1){
_465=_465+"-";
}
var _467=_464[1];
var frac=(typeof (_464[2])=="string"&&_464[2]!="")?_464[2]:"";
var _469=(typeof (_464[3])=="string"&&_464[3]!="");
var tmp=_467.split(/,/);
var _46b;
if(typeof (_463)=="undefined"){
_463="default";
}
if(tmp.length==1){
_46b=null;
}else{
_46b=tmp[1].length;
}
var _46c=_467.length-_467.replace(/0/g,"").length;
var _46d=frac.length-frac.replace(/0/g,"").length;
var _46e=frac.length;
var rval=MochiKit.Format._numberFormatter(_462,_465,_466,_463,_469,_46e,_46c,_46b,_46d);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_473){
if(typeof (_473)=="undefined"||_473===null){
_473="default";
}
if(typeof (_473)=="string"){
var rval=MochiKit.Format.LOCALE[_473];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_473]=rval;
}
return rval;
}else{
return _473;
}
};
MochiKit.Format.twoDigitAverage=function(_475,_476){
if(_476){
var res=_475/_476;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_475/_476);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_478){
var sign=(_478<0?"-":"");
var s=Math.floor(Math.abs(_478)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
if(s.length==1){
s="0"+s;
}
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_47e){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_47e){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_47e+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_480){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_480){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_480+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_482){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_482),_482);
};
MochiKit.Format.truncToFixed=function(_484,_485){
_484=Math.floor(_484*Math.pow(10,_485));
var res=(_484*Math.pow(10,-_485)).toFixed(_485);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_487,_488){
return MochiKit.Format.truncToFixed(_487+0.5*Math.pow(10,-_488),_488);
};
MochiKit.Format.percentFormat=function(_489){
return MochiKit.Format.twoDigitFloat(100*_489)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
for(k in this){
o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.Format);
}else{
(function(_48e,_48f){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(MochiKit.__export__===false)){
var all=_48f.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_48e[all[i]]=_48f[all[i]];
}
}
})(this,MochiKit.Format);
}
MochiKit.Base._deps("Logging",["Base"]);
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.4";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.LogMessage=function(num,_493,info){
this.num=num;
this.level=_493;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_496){
var self=MochiKit.Logging;
if(typeof (_496)=="string"){
_496=self.LogLevel[_496];
}
return function(msg){
var _499=msg.level;
if(typeof (_499)=="string"){
_499=self.LogLevel[_499];
}
return _499>=_496;
};
},isLogMessage:function(){
var _49a=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _49a)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_49f){
this.counter=0;
if(typeof (_49f)=="undefined"||_49f===null){
_49f=-1;
}
this.maxSize=_49f;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (printfire)=="function"){
printfire(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_4a4,_4a5,_4a6){
if(typeof (_4a5)=="string"){
_4a5=MochiKit.Logging.logLevelAtLeast(_4a5);
}
var _4a7=[_4a5,_4a6];
_4a7.ident=_4a4;
this.listeners[_4a4]=_4a7;
},removeListener:function(_4a8){
delete this.listeners[_4a8];
},baseLog:function(_4a9,_4aa){
var msg=new MochiKit.Logging.LogMessage(this.counter,_4a9,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_4ac){
var _4ad=0;
if(!(typeof (_4ac)=="undefined"||_4ac===null)){
_4ad=Math.max(0,this._messages.length-_4ac);
}
return this._messages.slice(_4ad);
},getMessageText:function(_4ae){
if(typeof (_4ae)=="undefined"||_4ae===null){
_4ae=30;
}
var _4af=this.getMessages(_4ae);
if(_4af.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_4af);
lst.unshift("LAST "+_4af.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_4b2){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_4b2||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _4b4=m.partial;
var _4b5=this.Logger;
var _4b6=_4b5.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_4b4(_4b6,"DEBUG"),log:_4b4(_4b6,"INFO"),error:_4b4(_4b6,"ERROR"),fatal:_4b4(_4b6,"FATAL"),warning:_4b4(_4b6,"WARNING")});
var self=this;
var _4b8=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_4b8("log");
this.logError=_4b8("error");
this.logDebug=_4b8("debug");
this.logFatal=_4b8("fatal");
this.logWarning=_4b8("warning");
this.logger=new _4b5();
this.logger.useNativeConsole=true;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
if(typeof (printfire)=="undefined"&&typeof (document)!="undefined"&&document.createEvent&&typeof (dispatchEvent)!="undefined"){
printfire=function(){
printfire.args=arguments;
var ev=document.createEvent("Events");
ev.initEvent("printfire",false,true);
dispatchEvent(ev);
};
}
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
MochiKit.Base._deps("LoggingPane",["Base","Logging"]);
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.4";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_4bb){
var m=MochiKit.LoggingPane;
_4bb=!(!_4bb);
if(m._loggingPane&&m._loggingPane.inline!=_4bb){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_4bb,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_4bd,_4be){
if(typeof (_4be)=="undefined"||_4be===null){
_4be=MochiKit.Logging.logger;
}
this.logger=_4be;
var _4bf=MochiKit.Base.update;
var _4c0=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _4c2=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_4bd){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _4c9=doc.getElementById(uid);
var _4ca=!!_4c9;
if(_4c9&&typeof (_4c9.loggingPane)!="undefined"){
_4c9.loggingPane.logger=this.logger;
_4c9.loggingPane.buildAndApplyFilter();
return _4c9.loggingPane;
}
if(_4ca){
var _4cb;
while((_4cb=_4c9.firstChild)){
_4c9.removeChild(_4cb);
}
}else{
_4c9=doc.createElement("div");
_4c9.id=uid;
}
_4c9.loggingPane=this;
var _4cc=doc.createElement("input");
var _4cd=doc.createElement("input");
var _4ce=doc.createElement("button");
var _4cf=doc.createElement("button");
var _4d0=doc.createElement("button");
var _4d1=doc.createElement("button");
var _4d2=doc.createElement("div");
var _4d3=doc.createElement("div");
var _4d4=uid+"_Listener";
this.colorTable=_4c2(this.colorTable);
var _4d5=[];
var _4d6=null;
var _4d7=function(msg){
var _4d9=msg.level;
if(typeof (_4d9)=="number"){
_4d9=MochiKit.Logging.LogLevel[_4d9];
}
return _4d9;
};
var _4da=function(msg){
return msg.info.join(" ");
};
var _4dc=bind(function(msg){
var _4de=_4d7(msg);
var text=_4da(msg);
var c=this.colorTable[_4de];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_4de;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_4de+": "+text));
_4d3.appendChild(p);
_4d3.appendChild(doc.createElement("br"));
if(_4d2.offsetHeight>_4d2.scrollHeight){
_4d2.scrollTop=0;
}else{
_4d2.scrollTop=_4d2.scrollHeight;
}
},this);
var _4e2=function(msg){
_4d5[_4d5.length]=msg;
_4dc(msg);
};
var _4e4=function(){
var _4e5,_4e6;
try{
_4e5=new RegExp(_4cc.value);
_4e6=new RegExp(_4cd.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_4e5.test(_4d7(msg))&&_4e6.test(_4da(msg)));
};
};
var _4e8=function(){
while(_4d3.firstChild){
_4d3.removeChild(_4d3.firstChild);
}
};
var _4e9=function(){
_4d5=[];
_4e8();
};
var _4ea=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_4d4);
try{
try{
_4c9.loggingPane=null;
}
catch(e){
logFatal("Bookmarklet was closed incorrectly.");
}
if(_4bd){
_4c9.parentNode.removeChild(_4c9);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _4eb=function(){
_4e8();
for(var i=0;i<_4d5.length;i++){
var msg=_4d5[i];
if(_4d6===null||_4d6(msg)){
_4dc(msg);
}
}
};
this.buildAndApplyFilter=function(){
_4d6=_4e4();
_4eb();
this.logger.removeListener(_4d4);
this.logger.addListener(_4d4,_4d6,_4e2);
};
var _4ee=bind(function(){
_4d5=this.logger.getMessages();
_4eb();
},this);
var _4ef=bind(function(_4f0){
_4f0=_4f0||window.event;
key=_4f0.which||_4f0.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _4f1="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_4bd){
_4f1+="; height: 10em; border-top: 2px solid black";
}else{
_4f1+="; height: 100%;";
}
_4c9.style.cssText=_4f1;
if(!_4ca){
doc.body.appendChild(_4c9);
}
_4f1={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_4c0(_4cc,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_4ef,"style":_4f1});
_4c9.appendChild(_4cc);
_4c0(_4cd,{"value":".*","onkeypress":_4ef,"style":_4f1});
_4c9.appendChild(_4cd);
_4f1="width: 8%; display:inline; font: "+this.logFont;
_4ce.appendChild(doc.createTextNode("Filter"));
_4ce.onclick=bind("buildAndApplyFilter",this);
_4ce.style.cssText=_4f1;
_4c9.appendChild(_4ce);
_4cf.appendChild(doc.createTextNode("Load"));
_4cf.onclick=_4ee;
_4cf.style.cssText=_4f1;
_4c9.appendChild(_4cf);
_4d0.appendChild(doc.createTextNode("Clear"));
_4d0.onclick=_4e9;
_4d0.style.cssText=_4f1;
_4c9.appendChild(_4d0);
_4d1.appendChild(doc.createTextNode("Close"));
_4d1.onclick=_4ea;
_4d1.style.cssText=_4f1;
_4c9.appendChild(_4d1);
_4d2.style.cssText="overflow: auto; width: 100%";
_4d3.style.cssText="width: 100%; height: "+(_4bd?"8em":"100%");
_4d2.appendChild(_4d3);
_4c9.appendChild(_4d2);
this.buildAndApplyFilter();
_4ee();
if(_4bd){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_4bd;
this.closePane=_4ea;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.4";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","Selector","Style","LoggingPane","Color","Signal","Position","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
dojo.require("MochiKit.*");
}
if(typeof (JSAN)!="undefined"){
(function(lst){
for(var i=0;i<lst.length;i++){
JSAN.use("MochiKit."+lst[i],[]);
}
})(MochiKit.MochiKit.SUBMODULES);
}
(function(){
var _4f4=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _4f6=self.SUBMODULES;
var _4f7=[];
var _4f8=[];
var _4f9={};
var i,k,m,all;
for(i=0;i<_4f6.length;i++){
m=MochiKit[_4f6[i]];
_4f4(_4f7,m.EXPORT);
_4f4(_4f8,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_4f9[k]=_4f4(_4f9[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_4f4(null,m.EXPORT,m.EXPORT_OK);
}
var j;
for(j=0;j<all.length;j++){
k=all[j];
self[k]=m[k];
}
}
self.EXPORT=_4f7;
self.EXPORT_OK=_4f8;
self.EXPORT_TAGS=_4f9;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
if(typeof (document)=="undefined"){
return;
}
var _4ff=document.getElementsByTagName("script");
var _500="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _502=null;
var _503={};
var i;
for(i=0;i<_4ff.length;i++){
var src=_4ff[i].getAttribute("src");
if(!src){
continue;
}
_503[src]=true;
if(src.match(/MochiKit.js$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_502=_4ff[i];
}
}
if(base===null){
return;
}
var _506=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_506.length;i++){
if(MochiKit[_506[i]]){
continue;
}
var uri=base+_506[i]+".js";
if(uri in _503){
continue;
}
if(document.documentElement&&document.documentElement.namespaceURI==_500){
var s=document.createElementNS(_500,"script");
s.setAttribute("id","MochiKit_"+base+_506[i]);
s.setAttribute("src",uri);
s.setAttribute("type","application/x-javascript");
_502.parentNode.appendChild(s);
}else{
document.write("<script src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MockDOM)=="undefined"){
MochiKit.MockDOM={};
}
MochiKit.MockDOM.NAME="MochiKit.MockDOM";
MochiKit.MockDOM.VERSION="1.4";
MochiKit.MockDOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MockDOM.toString=function(){
return this.__repr__();
};
MochiKit.MockDOM.createDocument=function(){
var doc=new MochiKit.MockDOM.MockElement("DOCUMENT");
doc.body=doc.createElement("BODY");
doc.appendChild(doc.body);
return doc;
};
MochiKit.MockDOM.MockElement=function(name,data,_50c){
this.tagName=this.nodeName=name.toUpperCase();
this.ownerDocument=_50c||null;
if(name=="DOCUMENT"){
this.nodeType=9;
this.childNodes=[];
}else{
if(typeof (data)=="string"){
this.nodeValue=data;
this.nodeType=3;
}else{
this.nodeType=1;
this.childNodes=[];
}
}
if(name.substring(0,1)=="<"){
var _50d=name.substring(name.indexOf("\"")+1,name.lastIndexOf("\""));
name=name.substring(1,name.indexOf(" "));
this.tagName=this.nodeName=name.toUpperCase();
this.setAttribute("name",_50d);
}
};
MochiKit.MockDOM.MockElement.prototype={createElement:function(_50e){
return new MochiKit.MockDOM.MockElement(_50e,null,this.nodeType==9?this:this.ownerDocument);
},createTextNode:function(text){
return new MochiKit.MockDOM.MockElement("text",text,this.nodeType==9?this:this.ownerDocument);
},setAttribute:function(name,_511){
this[name]=_511;
},getAttribute:function(name){
return this[name];
},appendChild:function(_513){
this.childNodes.push(_513);
},toString:function(){
return "MockElement("+this.tagName+")";
},getElementsByTagName:function(_514){
var _515=[];
MochiKit.Base.nodeWalk(this,function(node){
if(_514=="*"||_514==node.tagName){
_515.push(node);
return node.childNodes;
}
});
return _515;
}};
MochiKit.MockDOM.EXPORT_OK=["mockElement","createDocument"];
MochiKit.MockDOM.EXPORT=["document"];
MochiKit.MockDOM.__new__=function(){
this.document=this.createDocument();
};
MochiKit.MockDOM.__new__();
MochiKit.Base._deps("Position",["Base","DOM","Style"]);
MochiKit.Position.NAME="MochiKit.Position";
MochiKit.Position.VERSION="1.4";
MochiKit.Position.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Position.toString=function(){
return this.__repr__();
};
MochiKit.Position.EXPORT_OK=[];
MochiKit.Position.EXPORT=[];
MochiKit.Base.update(MochiKit.Position,{includeScrollOffsets:false,prepare:function(){
var _517=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _518=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_517,_518);
},cumulativeOffset:function(_519){
var _51a=0;
var _51b=0;
do{
_51a+=_519.offsetTop||0;
_51b+=_519.offsetLeft||0;
_519=_519.offsetParent;
}while(_519);
return new MochiKit.Style.Coordinates(_51b,_51a);
},realOffset:function(_51c){
var _51d=0;
var _51e=0;
do{
_51d+=_51c.scrollTop||0;
_51e+=_51c.scrollLeft||0;
_51c=_51c.parentNode;
}while(_51c);
return new MochiKit.Style.Coordinates(_51e,_51d);
},within:function(_51f,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_51f,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_51f);
if(_51f.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_51f.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_51f.offsetWidth);
},withinIncludingScrolloffsets:function(_522,x,y){
var _525=this.realOffset(_522);
this.xcomp=x+_525.x-this.windowOffset.x;
this.ycomp=y+_525.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_522);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_522.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_522.offsetWidth);
},overlap:function(mode,_527){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_527.offsetHeight)-this.ycomp)/_527.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_527.offsetWidth)-this.xcomp)/_527.offsetWidth;
}
},absolutize:function(_528){
_528=MochiKit.DOM.getElement(_528);
if(_528.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _529=MochiKit.Position.positionedOffset(_528);
var _52a=_528.clientWidth;
var _52b=_528.clientHeight;
var _52c={"position":_528.style.position,"left":_529.x-parseFloat(_528.style.left||0),"top":_529.y-parseFloat(_528.style.top||0),"width":_528.style.width,"height":_528.style.height};
_528.style.position="absolute";
_528.style.top=_529.y+"px";
_528.style.left=_529.x+"px";
_528.style.width=_52a+"px";
_528.style.height=_52b+"px";
return _52c;
},positionedOffset:function(_52d){
var _52e=0,_52f=0;
do{
_52e+=_52d.offsetTop||0;
_52f+=_52d.offsetLeft||0;
_52d=_52d.offsetParent;
if(_52d){
p=MochiKit.Style.getStyle(_52d,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_52d);
return new MochiKit.Style.Coordinates(_52f,_52e);
},relativize:function(_530,_531){
_530=MochiKit.DOM.getElement(_530);
if(_530.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_530.style.top||0)-(_531["top"]||0);
var left=parseFloat(_530.style.left||0)-(_531["left"]||0);
_530.style.position=_531["position"];
_530.style.top=top+"px";
_530.style.left=left+"px";
_530.style.width=_531["width"];
_530.style.height=_531["height"];
},clone:function(_534,_535){
_534=MochiKit.DOM.getElement(_534);
_535=MochiKit.DOM.getElement(_535);
_535.style.position="absolute";
var _536=this.cumulativeOffset(_534);
_535.style.top=_536.y+"px";
_535.style.left=_536.x+"px";
_535.style.width=_534.offsetWidth+"px";
_535.style.height=_534.offsetHeight+"px";
},page:function(_537){
var _538=0;
var _539=0;
var _53a=_537;
do{
_538+=_53a.offsetTop||0;
_539+=_53a.offsetLeft||0;
if(_53a.offsetParent==document.body&&MochiKit.Style.getStyle(_53a,"position")=="absolute"){
break;
}
}while(_53a=_53a.offsetParent);
_53a=_537;
do{
_538-=_53a.scrollTop||0;
_539-=_53a.scrollLeft||0;
}while(_53a=_53a.parentNode);
return new MochiKit.Style.Coordinates(_539,_538);
}});
MochiKit.Position.__new__=function(win){
var m=MochiKit.Base;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._deps("Selector",["Base","DOM","Iter"]);
MochiKit.Selector.NAME="MochiKit.Selector";
MochiKit.Selector.VERSION="1.4";
MochiKit.Selector.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Selector.toString=function(){
return this.__repr__();
};
MochiKit.Selector.EXPORT=["Selector","findChildElements","findDocElements","$$"];
MochiKit.Selector.EXPORT_OK=[];
MochiKit.Selector.Selector=function(_53d){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_53d.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_53e){
throw "Parse error in selector: "+_53e;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _540=this.params;
var expr=this.expression;
var _542,_543,_544,rest;
while(_542=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_540.attributes=_540.attributes||[];
_540.attributes.push({name:_542[2],operator:_542[3],value:_542[4]||_542[5]||""});
expr=_542[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_542=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_543=_542[1];
_544=_542[2];
rest=_542[3];
switch(_543){
case "#":
_540.id=_544;
break;
case ".":
_540.classNames.push(_544);
break;
case ":":
_540.pseudoClassNames.push(_544);
break;
case "":
case undefined:
_540.tagName=_544.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _547=this.params;
var _548=[];
var _549,i;
function childElements(_54b){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_54b+".childNodes)";
}
if(_547.wildcard){
_548.push("true");
}
if(_549=_547.id){
_548.push("element.id == "+repr(_549));
}
if(_549=_547.tagName){
_548.push("element.tagName.toUpperCase() == "+repr(_549));
}
if((_549=_547.classNames).length>0){
for(i=0;i<_549.length;i++){
_548.push("MochiKit.DOM.hasElementClass(element, "+repr(_549[i])+")");
}
}
if((_549=_547.pseudoClassNames).length>0){
for(i=0;i<_549.length;i++){
var _54c=_549[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _54d=_54c[1];
var _54e=_54c[2];
switch(_54d){
case "root":
_548.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_54c=_54e.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_54c){
throw "Invalid argument to pseudo element nth-child: "+_54e;
}
var a,b;
if(_54c[0]=="odd"){
a=2;
b=1;
}else{
if(_54c[0]=="even"){
a=2;
b=0;
}else{
a=_54c[2]&&parseInt(_54c)||null;
b=parseInt(_54c[3]);
}
}
_548.push("this.nthChild(element,"+a+","+b+","+!!_54d.match("^nth-last")+","+!!_54d.match("of-type$")+")");
break;
case "first-child":
_548.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_548.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_548.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_548.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_548.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_548.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_548.push("element.childNodes.length == 0");
break;
case "enabled":
_548.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_548.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_548.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _551=new MochiKit.Selector.Selector(_54e);
_548.push("!( "+_551.buildMatchExpression()+")");
break;
}
}
}
if(_549=_547.attributes){
MochiKit.Base.map(function(_552){
var _553="MochiKit.DOM.getNodeAttribute(element, "+repr(_552.name)+")";
var _554=function(_555){
return _553+".split("+repr(_555)+")";
};
switch(_552.operator){
case "=":
_548.push(_553+" == "+repr(_552.value));
break;
case "~=":
_548.push(_553+" && MochiKit.Base.findValue("+_554(" ")+", "+repr(_552.value)+") > -1");
break;
case "^=":
_548.push(_553+".substring(0, "+_552.value.length+") == "+repr(_552.value));
break;
case "$=":
_548.push(_553+".substring("+_553+".length - "+_552.value.length+") == "+repr(_552.value));
break;
case "*=":
_548.push(_553+".match("+repr(_552.value)+")");
break;
case "|=":
_548.push(_553+" && "+_554("-")+"[0].toUpperCase() == "+repr(_552.value.toUpperCase()));
break;
case "!=":
_548.push(_553+" != "+repr(_552.value));
break;
case "":
case undefined:
_548.push(_553+" != null");
break;
default:
throw "Unknown operator "+_552.operator+" in selector";
}
},_549);
}
return _548.join(" && ");
},compileMatcher:function(){
this.match=new Function("element","if (!element.tagName) return false;                 return "+this.buildMatchExpression());
},nthChild:function(_556,a,b,_559,_55a){
var _55b=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_556.parentNode.childNodes);
if(_55a){
_55b=MochiKit.Base.filter(function(node){
return node.tagName==_556.tagName;
},_55b);
}
if(_559){
_55b=MochiKit.Iter.reversed(_55b);
}
if(a){
var _55e=MochiKit.Base.findIdentical(_55b,_556);
return ((_55e+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_55b,_556)+1;
}
},isUIElement:function(_55f){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_55f.tagName.toLowerCase())>-1;
},findElements:function(_560,axis){
var _562;
if(axis==undefined){
axis="";
}
function inScope(_563,_564){
if(axis==""){
return MochiKit.DOM.isChildNode(_563,_564);
}else{
if(axis==">"){
return _563.parentNode==_564;
}else{
if(axis=="+"){
return _563==nextSiblingElement(_564);
}else{
if(axis=="~"){
var _565=_564;
while(_565=nextSiblingElement(_565)){
if(_563==_565){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_562=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_562)){
if(!_560||inScope(_562,_560)){
return [_562];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_560=(_560||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_560){
throw "> combinator not allowed without preceeding expression";
}
_560=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_560.childNodes);
}else{
if(axis=="+"){
if(!_560){
throw "+ combinator not allowed without preceeding expression";
}
_560=nextSiblingElement(_560)&&[nextSiblingElement(_560)];
}else{
if(axis=="~"){
if(!_560){
throw "~ combinator not allowed without preceeding expression";
}
var _568=[];
while(nextSiblingElement(_560)){
_560=nextSiblingElement(_560);
_568.push(_560);
}
_560=_568;
}
}
}
}
if(!_560){
return [];
}
var _569=MochiKit.Base.filter(MochiKit.Base.bind(function(_56a){
return this.match(_56a);
},this),_560);
return _569;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_56b,_56c){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_56d){
var _56e="";
return MochiKit.Iter.reduce(function(_56f,expr){
if(match=expr.match(/^[>+~]$/)){
_56e=match[0];
return _56f;
}else{
var _571=new MochiKit.Selector.Selector(expr);
var _572=MochiKit.Iter.reduce(function(_573,_574){
return MochiKit.Base.extend(_573,_571.findElements(_574||_56b,_56e));
},_56f,[]);
_56e="";
return _572;
}
},_56d.replace(/(^\s+|\s+$)/g,"").split(/\s+/),[null]);
},_56c));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
var m=MochiKit.Base;
this.$$=this.findDocElements;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
MochiKit.Base._deps("Signal",["Base","DOM","Style"]);
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.4";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
return this._event.type||undefined;
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
if(elem!==null){
this._relatedTarget=elem;
return elem;
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _582=MochiKit.Signal._specialMacKeys;
for(i=63236;i<=63242;i++){
_582[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _583=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_583[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_583[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_583[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_583[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_585){
this.source=_585.source;
this.signal=_585.signal;
this.listener=_585.listener;
this.isDOM=_585.isDOM;
this.objOrFunc=_585.objOrFunc;
this.funcOrStr=_585.funcOrStr;
this.connected=_585.connected;
};
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _587=self._observers;
for(var i=0;i<_587.length;i++){
if(_587[i].signal!=="onload"&&_587[i].signal!=="onunload"){
self._disconnect(_587[i]);
}
}
},_listener:function(src,sig,func,obj,_58d){
var self=MochiKit.Signal;
var E=self.Event;
if(!_58d){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bind(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_590){
obj[func].apply(obj,[new E(src,_590)]);
var _591=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_591);
};
}else{
return function(_592){
obj[func].apply(obj,[new E(src,_592)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_593){
func.apply(obj,[new E(src,_593)]);
var _594=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_594);
};
}else{
return function(_595){
func.apply(obj,[new E(src,_595)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_59b){
var e=new E(src,_59b);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_59d,_59e){
var obj=null;
var func=null;
if(typeof (_59e)!="undefined"){
obj=_59d;
func=_59e;
if(typeof (_59e)=="string"){
if(typeof (_59d[_59e])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_59e)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_59d)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_59d;
}
}
return [obj,func];
},connect:function(src,sig,_5a3,_5a4){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _5a6=self._getDestPair(_5a3,_5a4);
var obj=_5a6[0];
var func=_5a6[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _5a9=!!(src.addEventListener||src.attachEvent);
if(_5a9&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _5aa=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
var _5aa=self._listener(src,sig,func,obj,_5a9);
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_5aa,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_5aa);
}
}
var _5ab=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_5aa,isDOM:_5a9,objOrFunc:_5a3,funcOrStr:_5a4,connected:true});
self._observers.push(_5ab);
if(!_5a9&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_5ab],arguments,1);
src.__connect__.apply(src,args);
}
return _5ab;
},_disconnect:function(_5ad){
if(!_5ad.connected){
return;
}
_5ad.connected=false;
if(!_5ad.isDOM){
return;
}
var src=_5ad.source;
var sig=_5ad.signal;
var _5b0=_5ad.listener;
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_5b0,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_5b0);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_5b1){
var self=MochiKit.Signal;
var _5b3=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_5b3.length-1;i>=0;i--){
var o=_5b3[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(!self._lock){
_5b3.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_5b3,_5b1);
if(idx>=0){
self._disconnect(_5b1);
if(!self._lock){
_5b3.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_5bc,_5bd){
var self=MochiKit.Signal;
var _5bf=self._observers;
var _5c0=self._disconnect;
var _5c1=self._lock;
var _5c2=self._dirty;
if(typeof (_5bd)==="undefined"){
_5bd=null;
}
for(var i=_5bf.length-1;i>=0;i--){
var _5c4=_5bf[i];
if(_5c4.objOrFunc===_5bc&&(_5bd===null||_5c4.funcOrStr===_5bd)){
_5c0(_5c4);
if(_5c1){
_5c2=true;
}else{
_5bf.splice(i,1);
}
}
}
self._dirty=_5c2;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _5c8=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _5ca=self._disconnect;
var _5cb=self._observers;
var i,_5cd;
var _5ce=self._lock;
var _5cf=self._dirty;
if(_5c8.length===0){
for(i=_5cb.length-1;i>=0;i--){
_5cd=_5cb[i];
if(_5cd.source===src){
_5ca(_5cd);
if(!_5ce){
_5cb.splice(i,1);
}else{
_5cf=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_5c8.length;i++){
sigs[_5c8[i]]=true;
}
for(i=_5cb.length-1;i>=0;i--){
_5cd=_5cb[i];
if(_5cd.source===src&&_5cd.signal in sigs){
_5ca(_5cd);
if(!_5ce){
_5cb.splice(i,1);
}else{
_5cf=true;
}
}
}
}
self._dirty=_5cf;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _5d4=self._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _5d6=[];
self._lock=true;
for(var i=0;i<_5d4.length;i++){
var _5d8=_5d4[i];
if(_5d8.source===src&&_5d8.signal===sig&&_5d8.connected){
try{
_5d8.listener.apply(src,args);
}
catch(e){
_5d6.push(e);
}
}
}
self._lock=false;
if(self._dirty){
self._dirty=false;
for(var i=_5d4.length-1;i>=0;i--){
if(!_5d4[i].connected){
_5d4.splice(i,1);
}
}
}
if(_5d6.length==1){
throw _5d6[0];
}else{
if(_5d6.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_5d6;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll","disconnectAllTo"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=false;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
MochiKit.Base._deps("Test",["Base"]);
MochiKit.Test.NAME="MochiKit.Test";
MochiKit.Test.VERSION="1.4";
MochiKit.Test.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Test.toString=function(){
return this.__repr__();
};
MochiKit.Test.EXPORT=["runTests"];
MochiKit.Test.EXPORT_OK=[];
MochiKit.Test.runTests=function(obj){
if(typeof (obj)=="string"){
obj=JSAN.use(obj);
}
var _5dd=new MochiKit.Test.Suite();
_5dd.run(obj);
};
MochiKit.Test.Suite=function(){
this.testIndex=0;
MochiKit.Base.bindMethods(this);
};
MochiKit.Test.Suite.prototype={run:function(obj){
try{
obj(this);
}
catch(e){
this.traceback(e);
}
},traceback:function(e){
var _5e0=MochiKit.Iter.sorted(MochiKit.Base.items(e));
print("not ok "+this.testIndex+" - Error thrown");
for(var i=0;i<_5e0.length;i++){
var kv=_5e0[i];
if(kv[0]=="stack"){
kv[1]=kv[1].split(/\n/)[0];
}
this.print("# "+kv.join(": "));
}
},print:function(s){
print(s);
},is:function(got,_5e5,_5e6){
var res=1;
var msg=null;
try{
res=MochiKit.Base.compare(got,_5e5);
}
catch(e){
msg="Can not compare "+typeof (got)+":"+typeof (_5e5);
}
if(res){
msg="Expected value did not compare equal";
}
if(!res){
return this.testResult(true,_5e6);
}
return this.testResult(false,_5e6,[[msg],["got:",got],["expected:",_5e5]]);
},testResult:function(pass,msg,_5eb){
this.testIndex+=1;
if(pass){
this.print("ok "+this.testIndex+" - "+msg);
return;
}
this.print("not ok "+this.testIndex+" - "+msg);
if(_5eb){
for(var i=0;i<_5eb.length;i++){
this.print("# "+_5eb[i].join(" "));
}
}
},isDeeply:function(got,_5ee,_5ef){
var m=MochiKit.Base;
var res=1;
try{
res=m.compare(got,_5ee);
}
catch(e){
}
if(res===0){
return this.ok(true,_5ef);
}
var gk=m.keys(got);
var ek=m.keys(_5ee);
gk.sort();
ek.sort();
if(m.compare(gk,ek)){
var cmp={};
var i;
for(i=0;i<gk.length;i++){
cmp[gk[i]]="got";
}
for(i=0;i<ek.length;i++){
if(ek[i] in cmp){
delete cmp[ek[i]];
}else{
cmp[ek[i]]="expected";
}
}
var _5f6=m.keys(cmp);
_5f6.sort();
var _5f7=[];
var _5f8=[];
while(_5f6.length){
var k=_5f6.shift();
if(k in Object.prototype){
continue;
}
(cmp[k]=="got"?_5f7:_5f8).push(k);
}
}
return this.testResult((!res),msg,(msg?[["got:",got],["expected:",_5ee]]:undefined));
},ok:function(res,_5fb){
return this.testResult(res,_5fb);
}};
MochiKit.Test.__new__=function(){
var m=MochiKit.Base;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Test.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Test);
MochiKit.Base._deps("Visual",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.4";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_5fe){
e=MochiKit.DOM.getElement(e);
this._setOptions(_5fe);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _5ff=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_5ff=C.fromBackground(e);
}else{
if(!(_5ff instanceof C)){
_5ff=C.fromString(_5ff);
}
}
this.isTransparent=(_5ff.asRGB().a<=0);
var _601=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_601=C.fromBackground(e.offsetParent);
}else{
if(!(_601 instanceof C)){
_601=C.fromString(_601);
}
}
this._roundCornersImpl(e,_5ff,_601);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _603=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _605=doc.defaultView.getComputedStyle(e,null);
if(typeof (_605)==="undefined"||_605===null){
return e;
}
var _606=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_605.getPropertyValue("padding-top"),marginRight:_605.getPropertyValue("padding-right"),marginBottom:_605.getPropertyValue("padding-bottom"),marginLeft:_605.getPropertyValue("padding-left"),padding:"0px"}});
_606.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_606);
return e;
},_roundCornersImpl:function(e,_608,_609){
if(this.options.border){
this._renderBorder(e,_609);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_608,_609);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_608,_609);
}
},_renderBorder:function(el,_60b){
var _60c="1px solid "+this._borderColor(_60b);
var _60d="border-left: "+_60c;
var _60e="border-right: "+_60c;
var _60f="style='"+_60d+";"+_60e+"'";
el.innerHTML="<div "+_60f+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_611,_612){
var _613=this._createCorner(_612);
for(var i=0;i<this.options.numSlices;i++){
_613.appendChild(this._createCornerSlice(_611,_612,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_613,el.firstChild);
},_roundBottomCorners:function(el,_616,_617){
var _618=this._createCorner(_617);
for(var i=(this.options.numSlices-1);i>=0;i--){
_618.appendChild(this._createCornerSlice(_616,_617,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_618);
},_createCorner:function(_61a){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_61a.toString()}});
},_createCornerSlice:function(_61c,_61d,n,_61f){
var _620=MochiKit.DOM.SPAN();
var _621=_620.style;
_621.backgroundColor=_61c.toString();
_621.display="block";
_621.height="1px";
_621.overflow="hidden";
_621.fontSize="1px";
var _622=this._borderColor(_61c,_61d);
if(this.options.border&&n===0){
_621.borderTopStyle="solid";
_621.borderTopWidth="1px";
_621.borderLeftWidth="0px";
_621.borderRightWidth="0px";
_621.borderBottomWidth="0px";
_621.height="0px";
_621.borderColor=_622.toString();
}else{
if(_622){
_621.borderColor=_622.toString();
_621.borderStyle="solid";
_621.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_621.height="2px";
}
this._setMargin(_620,n,_61f);
this._setBorder(_620,n,_61f);
return _620;
},_setOptions:function(_623){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_623);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _624=this.options.corners;
if(this._hasString(_624,"all","top")){
return "";
}
var _625=(_624.indexOf("tl")!=-1);
var _626=(_624.indexOf("tr")!=-1);
if(_625&&_626){
return "";
}
if(_625){
return "left";
}
if(_626){
return "right";
}
return "";
},_whichSideBottom:function(){
var _627=this.options.corners;
if(this._hasString(_627,"all","bottom")){
return "";
}
var _628=(_627.indexOf("bl")!=-1);
var _629=(_627.indexOf("br")!=-1);
if(_628&&_629){
return "";
}
if(_628){
return "left";
}
if(_629){
return "right";
}
return "";
},_borderColor:function(_62a,_62b){
if(_62a=="transparent"){
return _62b;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _62b.blendedColor(_62a);
}
}
}
return "";
},_setMargin:function(el,n,_62e){
var _62f=this._marginSize(n)+"px";
var _630=(_62e=="top"?this._whichSideTop():this._whichSideBottom());
var _631=el.style;
if(_630=="left"){
_631.marginLeft=_62f;
_631.marginRight="0px";
}else{
if(_630=="right"){
_631.marginRight=_62f;
_631.marginLeft="0px";
}else{
_631.marginLeft=_62f;
_631.marginRight=_62f;
}
}
},_setBorder:function(el,n,_634){
var _635=this._borderSize(n)+"px";
var _636=(_634=="top"?this._whichSideTop():this._whichSideBottom());
var _637=el.style;
if(_636=="left"){
_637.borderLeftWidth=_635;
_637.borderRightWidth="0px";
}else{
if(_636=="right"){
_637.borderRightWidth=_635;
_637.borderLeftWidth="0px";
}else{
_637.borderLeftWidth=_635;
_637.borderRightWidth=_635;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _63a=[1,0];
return _63a[n];
}else{
if(o.compact){
var _63b=[2,1];
return _63b[n];
}else{
if(o.blend){
var _63c=[3,2,1,0];
return _63c[n];
}else{
var _63d=[5,3,2,1];
return _63d[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _640;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_640=[1,0];
}else{
if(o.blend){
_640=[2,1,1,1];
}else{
if(o.border){
_640=[0,2,0,0];
}else{
if(this.isTransparent){
_640=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _640[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_645){
new MochiKit.Visual._RoundCorners(e,_645);
};
MochiKit.Visual.roundClass=function(_646,_647,_648){
var _649=MochiKit.DOM.getElementsByTagAndClassName(_646,_647);
for(var i=0;i<_649.length;i++){
MochiKit.Visual.roundElement(_649[i],_648);
}
};
MochiKit.Visual.tagifyText=function(_64b,_64c){
_64c=_64c||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_64c+=";zoom:1";
}
_64b=MochiKit.DOM.getElement(_64b);
var ma=MochiKit.Base.map;
ma(function(_64e){
if(_64e.nodeType==3){
ma(function(_64f){
_64b.insertBefore(MochiKit.DOM.SPAN({style:_64c},_64f==" "?String.fromCharCode(160):_64f),_64e);
},_64e.nodeValue.split(""));
MochiKit.DOM.removeElement(_64e);
}
},_64b.childNodes);
};
MochiKit.Visual.forceRerendering=function(_650){
try{
_650=MochiKit.DOM.getElement(_650);
var n=document.createTextNode(" ");
_650.appendChild(n);
_650.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_652,_653,_654){
_654=MochiKit.Base.update({speed:0.1,delay:0},_654);
var _655=_654.delay;
var _656=0;
MochiKit.Base.map(function(_657){
_654.delay=_656*_654.speed+_655;
new _653(_657,_654);
_656+=1;
},_652);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_658,_659,_65a){
_658=MochiKit.DOM.getElement(_658);
_659=(_659||"appear").toLowerCase();
_65a=MochiKit.Base.update({queue:{position:"end",scope:(_658.id||"global"),limit:1}},_65a);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_658,"display")!="none"?v.PAIRS[_659][1]:v.PAIRS[_659][0]](_658,_65a);
};
MochiKit.Visual.Transitions={};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return (-Math.cos(pos*Math.PI)/2)+0.5;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return ((-Math.cos(pos*Math.PI)/4)+0.75)+Math.random()/4;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return (-Math.cos(pos*Math.PI*(9*pos))/2)+0.5;
};
MochiKit.Visual.Transitions.pulse=function(pos,_662){
if(!_662){
return (Math.floor(pos*10)%2===0?(pos*10-Math.floor(pos*10)):1-(pos*10-Math.floor(pos*10)));
}
return (Math.round((pos%(1/_662))*_662)==0?((pos*_662*2)-Math.floor(pos*_662*2)):1-((pos*_662*2)-Math.floor(pos*_662*2)));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_666){
var _667=new Date().getTime();
var _668=(typeof (_666.options.queue)=="string")?_666.options.queue:_666.options.queue.position;
var ma=MochiKit.Base.map;
switch(_668){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_666.finishOn;
e.finishOn+=_666.finishOn;
}
},this.effects);
break;
case "end":
var _66b;
ma(function(e){
var i=e.finishOn;
if(i>=(_66b||i)){
_66b=i;
}
},this.effects);
_667=_66b||_667;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
}
_666.startOn+=_667;
_666.finishOn+=_667;
if(!_666.options.queue.limit||this.effects.length<_666.options.queue.limit){
this.effects.push(_666);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_670){
return setInterval(func,_670);
},remove:function(_671){
this.effects=MochiKit.Base.filter(function(e){
return e!=_671;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_673){
clearInterval(_673);
},loop:function(){
var _674=new Date().getTime();
MochiKit.Base.map(function(_675){
_675.loop(_674);
},this.effects);
}});
MochiKit.Visual.Queues={instances:{},get:function(_676){
if(typeof (_676)!="string"){
return _676;
}
if(!this.instances[_676]){
this.instances[_676]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_676];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.DefaultOptions={transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_677){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_677,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_679){
if(_679>=this.startOn){
if(_679>=this.finishOn){
return this.finalize();
}
var pos=(_679-this.startOn)/(this.finishOn-this.startOn);
var _67b=Math.round(pos*this.options.fps*this.options.duration);
if(_67b>this.currentFrame){
this.render(pos);
this.currentFrame=_67b;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
if(this.options.transition){
pos=this.options.transition(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_67d){
},event:function(_67e){
if(this.options[_67e+"Internal"]){
this.options[_67e+"Internal"](this);
}
if(this.options[_67e]){
this.options[_67e](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_67f,_680){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_67f,_680);
}
this.__init__(_67f,_680);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_682,_683){
this.effects=_682||[];
this.start(_683);
},update:function(_684){
MochiKit.Base.map(function(_685){
_685.render(_684);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_686){
_686.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_687,_688){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_687,_688);
}
this.__init__(_687,_688);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_68a,_68b){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_68a);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_68b=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_68b);
this.start(_68b);
},update:function(_68e){
MochiKit.Style.setStyle(this.element,{"opacity":_68e});
}});
MochiKit.Visual.Move=function(_68f,_690){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_68f,_690);
}
this.__init__(_68f,_690);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_692,_693){
this.element=MochiKit.DOM.getElement(_692);
_693=MochiKit.Base.update({x:0,y:0,mode:"relative"},_693);
this.start(_693);
},setup:function(){
MochiKit.DOM.makePositioned(this.element);
var s=this.element.style;
var _695=s.visibility;
var _696=s.display;
if(_696=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_696=="none"){
s.visibility=_695;
s.display=_696;
}
},update:function(_697){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_697+this.originalLeft)+"px",top:Math.round(this.options.y*_697+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_698,_699,_69a){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_698,_699,_69a);
}
this.__init__(_698,_699,_69a);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_69c,_69d,_69e){
this.element=MochiKit.DOM.getElement(_69c);
_69e=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_69d},_69e);
this.start(_69e);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _6a2=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_6a3){
if(_6a2.indexOf(_6a3)>0){
this.fontSize=parseFloat(_6a2);
this.fontSizeType=_6a3;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_6a4){
var _6a5=(this.options.scaleFrom/100)+(this.factor*_6a4);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_6a5+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_6a5,this.dims[1]*_6a5);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_6a6,_6a7){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_6a7)+"px";
}
if(this.options.scaleY){
d.height=r(_6a6)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_6a6-this.dims[0])/2;
var _6ab=(_6a7-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_6ab+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_6ab+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_6ac,_6ad){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6ac,_6ad);
}
this.__init__(_6ac,_6ad);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_6af,_6b0){
this.element=MochiKit.DOM.getElement(_6af);
_6b0=MochiKit.Base.update({startcolor:"#ffff99"},_6b0);
this.start(_6b0);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_6b5){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_6b5));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_6b8,_6b9){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6b8,_6b9);
}
this.__init__(_6b8,_6b9);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_6bb,_6bc){
this.element=MochiKit.DOM.getElement(_6bb);
this.start(_6bc);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _6be=p.cumulativeOffset(this.element);
if(this.options.offset){
_6be.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_6be.y>max?max:_6be.y)-this.scrollStart;
},update:function(_6c0){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_6c0*this.delta));
}});
MochiKit.Visual.CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_6c2,_6c3){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6c2,_6c3);
}
this.__init__(_6c2,_6c3);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_6c5,_6c6){
this.element=MochiKit.DOM.getElement(_6c5);
this.start(_6c6);
},setup:function(){
var b=MochiKit.Base;
var _6c8=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _6c9,unit;
for(var s in _6c8){
_6c9=_6c8[s];
s=b.camelize(s);
if(MochiKit.Visual.CSS_LENGTH.test(_6c9)){
var _6cc=_6c9.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_6c9=parseFloat(_6cc[1]);
unit=(_6cc.length==3)?_6cc[2]:null;
this.styleEnd[s]=_6c9;
this.units[s]=unit;
_6c9=MochiKit.Style.getStyle(this.element,s);
_6cc=_6c9.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_6c9=parseFloat(_6cc[1]);
this.styleStart[s]=_6c9;
}else{
var c=MochiKit.Color.Color;
_6c9=c.fromString(_6c9);
if(_6c9){
this.units[s]="color";
this.styleEnd[s]=_6c9.toHexString();
_6c9=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_6c9).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}
}
},update:function(_6d0){
var _6d1;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _6d4=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_6d4[i]+(end[i]-_6d4[i])*_6d0));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_6d1=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_6d0*1000)/1000+this.units[s];
this.element.style[s]=_6d1;
}
}
}});
MochiKit.Visual.fade=function(_6d7,_6d8){
var s=MochiKit.Style;
var _6da=s.getStyle(_6d7,"opacity");
_6d8=MochiKit.Base.update({from:s.getStyle(_6d7,"opacity")||1,to:0,afterFinishInternal:function(_6db){
if(_6db.options.to!==0){
return;
}
s.hideElement(_6db.element);
s.setStyle(_6db.element,{"opacity":_6da});
}},_6d8);
return new MochiKit.Visual.Opacity(_6d7,_6d8);
};
MochiKit.Visual.appear=function(_6dc,_6dd){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_6dd=MochiKit.Base.update({from:(s.getStyle(_6dc,"display")=="none"?0:s.getStyle(_6dc,"opacity")||0),to:1,afterFinishInternal:function(_6e0){
v.forceRerendering(_6e0.element);
},beforeSetupInternal:function(_6e1){
s.setStyle(_6e1.element,{"opacity":_6e1.options.from});
s.showElement(_6e1.element);
}},_6dd);
return new v.Opacity(_6dc,_6dd);
};
MochiKit.Visual.puff=function(_6e2,_6e3){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_6e2=MochiKit.DOM.getElement(_6e2);
var _6e6={position:s.getStyle(_6e2,"position"),top:_6e2.style.top,left:_6e2.style.left,width:_6e2.style.width,height:_6e2.style.height,opacity:s.getStyle(_6e2,"opacity")};
_6e3=MochiKit.Base.update({beforeSetupInternal:function(_6e7){
MochiKit.Position.absolutize(_6e7.effects[0].element);
},afterFinishInternal:function(_6e8){
s.hideElement(_6e8.effects[0].element);
s.setStyle(_6e8.effects[0].element,_6e6);
},scaleContent:true,scaleFromCenter:true},_6e3);
return new v.Parallel([new v.Scale(_6e2,200,{sync:true,scaleFromCenter:_6e3.scaleFromCenter,scaleContent:_6e3.scaleContent,restoreAfterFinish:true}),new v.Opacity(_6e2,{sync:true,to:0})],_6e3);
};
MochiKit.Visual.blindUp=function(_6e9,_6ea){
var d=MochiKit.DOM;
_6e9=d.getElement(_6e9);
var _6ec=d.makeClipping(_6e9);
_6ea=MochiKit.Base.update({scaleContent:false,scaleX:false,restoreAfterFinish:true,afterFinishInternal:function(_6ed){
MochiKit.Style.hideElement(_6ed.element);
d.undoClipping(_6ed.element,_6ec);
}},_6ea);
return new MochiKit.Visual.Scale(_6e9,0,_6ea);
};
MochiKit.Visual.blindDown=function(_6ee,_6ef){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6ee=d.getElement(_6ee);
var _6f2=s.getElementDimensions(_6ee);
var _6f3;
_6ef=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_6f2.h,originalWidth:_6f2.w},restoreAfterFinish:true,afterSetupInternal:function(_6f4){
_6f3=d.makeClipping(_6f4.element);
s.setStyle(_6f4.element,{height:"0px"});
s.showElement(_6f4.element);
},afterFinishInternal:function(_6f5){
d.undoClipping(_6f5.element,_6f3);
}},_6ef);
return new MochiKit.Visual.Scale(_6ee,100,_6ef);
};
MochiKit.Visual.switchOff=function(_6f6,_6f7){
var d=MochiKit.DOM;
_6f6=d.getElement(_6f6);
var _6f9=MochiKit.Style.getStyle(_6f6,"opacity");
var _6fa;
_6f7=MochiKit.Base.update({duration:0.3,scaleFromCenter:true,scaleX:false,scaleContent:false,restoreAfterFinish:true,beforeSetupInternal:function(_6fb){
d.makePositioned(_6fb.element);
_6fa=d.makeClipping(_6fb.element);
},afterFinishInternal:function(_6fc){
MochiKit.Style.hideElement(_6fc.element);
d.undoClipping(_6fc.element,_6fa);
d.undoPositioned(_6fc.element);
MochiKit.Style.setStyle(_6fc.element,{"opacity":_6f9});
}},_6f7);
var v=MochiKit.Visual;
return new v.appear(_6f6,{duration:0.4,from:0,transition:v.Transitions.flicker,afterFinishInternal:function(_6fe){
new v.Scale(_6fe.element,1,_6f7);
}});
};
MochiKit.Visual.dropOut=function(_6ff,_700){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6ff=d.getElement(_6ff);
var _703={top:s.getStyle(_6ff,"top"),left:s.getStyle(_6ff,"left"),opacity:s.getStyle(_6ff,"opacity")};
_700=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_704){
d.makePositioned(_704.effects[0].element);
},afterFinishInternal:function(_705){
s.hideElement(_705.effects[0].element);
d.undoPositioned(_705.effects[0].element);
s.setStyle(_705.effects[0].element,_703);
}},_700);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_6ff,{x:0,y:_700.distance,sync:true}),new v.Opacity(_6ff,{sync:true,to:0})],_700);
};
MochiKit.Visual.shake=function(_707,_708){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_707=d.getElement(_707);
_708=MochiKit.Base.update({x:-20,y:0,duration:0.05,afterFinishInternal:function(_70c){
d.undoPositioned(_70c.element);
s.setStyle(_70c.element,_70d);
}},_708);
var _70d={top:s.getStyle(_707,"top"),left:s.getStyle(_707,"left")};
return new v.Move(_707,{x:20,y:0,duration:0.05,afterFinishInternal:function(_70e){
new v.Move(_70e.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_70f){
new v.Move(_70f.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_710){
new v.Move(_710.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_711){
new v.Move(_711.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_712){
new v.Move(_712.element,_708);
}});
}});
}});
}});
}});
};
MochiKit.Visual.slideDown=function(_713,_714){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_713=d.getElement(_713);
if(!_713.firstChild){
throw "MochiKit.Visual.slideDown must be used on a element with a child";
}
d.removeEmptyTextNodes(_713);
var _718=s.getStyle(_713.firstChild,"bottom")||0;
var _719=s.getElementDimensions(_713);
var _71a;
_714=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_719.h,originalWidth:_719.w},restoreAfterFinish:true,afterSetupInternal:function(_71b){
d.makePositioned(_71b.element);
d.makePositioned(_71b.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_71b.element,{top:""});
}
_71a=d.makeClipping(_71b.element);
s.setStyle(_71b.element,{height:"0px"});
s.showElement(_71b.element);
},afterUpdateInternal:function(_71c){
s.setStyle(_71c.element.firstChild,{bottom:(_71c.dims[0]-_71c.element.clientHeight)+"px"});
},afterFinishInternal:function(_71d){
d.undoClipping(_71d.element,_71a);
if(/MSIE/.test(navigator.userAgent)){
d.undoPositioned(_71d.element);
d.undoPositioned(_71d.element.firstChild);
}else{
d.undoPositioned(_71d.element.firstChild);
d.undoPositioned(_71d.element);
}
s.setStyle(_71d.element.firstChild,{bottom:_718});
}},_714);
return new MochiKit.Visual.Scale(_713,100,_714);
};
MochiKit.Visual.slideUp=function(_71e,_71f){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_71e=d.getElement(_71e);
if(!_71e.firstChild){
throw "MochiKit.Visual.slideUp must be used on a element with a child";
}
d.removeEmptyTextNodes(_71e);
var _723=s.getStyle(_71e.firstChild,"bottom");
var _724;
_71f=b.update({scaleContent:false,scaleX:false,scaleMode:"box",scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_725){
d.makePositioned(_725.element);
d.makePositioned(_725.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_725.element,{top:""});
}
_724=d.makeClipping(_725.element);
s.showElement(_725.element);
},afterUpdateInternal:function(_726){
s.setStyle(_726.element.firstChild,{bottom:(_726.dims[0]-_726.element.clientHeight)+"px"});
},afterFinishInternal:function(_727){
s.hideElement(_727.element);
d.undoClipping(_727.element,_724);
d.undoPositioned(_727.element.firstChild);
d.undoPositioned(_727.element);
s.setStyle(_727.element.firstChild,{bottom:_723});
}},_71f);
return new MochiKit.Visual.Scale(_71e,0,_71f);
};
MochiKit.Visual.squish=function(_728,_729){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var _72c;
_729=b.update({restoreAfterFinish:true,beforeSetupInternal:function(_72d){
_72c=d.makeClipping(_72d.element);
},afterFinishInternal:function(_72e){
MochiKit.Style.hideElement(_72e.element);
d.undoClipping(_72e.element,_72c);
}},_729);
return new MochiKit.Visual.Scale(_728,/Opera/.test(navigator.userAgent)?1:0,_729);
};
MochiKit.Visual.grow=function(_72f,_730){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_72f=d.getElement(_72f);
_730=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_730);
var _734={top:_72f.style.top,left:_72f.style.left,height:_72f.style.height,width:_72f.style.width,opacity:s.getStyle(_72f,"opacity")};
var dims=s.getElementDimensions(_72f);
var _736,_737;
var _738,_739;
switch(_730.direction){
case "top-left":
_736=_737=_738=_739=0;
break;
case "top-right":
_736=dims.w;
_737=_739=0;
_738=-dims.w;
break;
case "bottom-left":
_736=_738=0;
_737=dims.h;
_739=-dims.h;
break;
case "bottom-right":
_736=dims.w;
_737=dims.h;
_738=-dims.w;
_739=-dims.h;
break;
case "center":
_736=dims.w/2;
_737=dims.h/2;
_738=-dims.w/2;
_739=-dims.h/2;
break;
}
var _73a=MochiKit.Base.update({beforeSetupInternal:function(_73b){
s.setStyle(_73b.effects[0].element,{height:"0px"});
s.showElement(_73b.effects[0].element);
},afterFinishInternal:function(_73c){
d.undoClipping(_73c.effects[0].element);
d.undoPositioned(_73c.effects[0].element);
s.setStyle(_73c.effects[0].element,_734);
}},_730);
return new v.Move(_72f,{x:_736,y:_737,duration:0.01,beforeSetupInternal:function(_73d){
s.hideElement(_73d.element);
d.makeClipping(_73d.element);
d.makePositioned(_73d.element);
},afterFinishInternal:function(_73e){
new v.Parallel([new v.Opacity(_73e.element,{sync:true,to:1,from:0,transition:_730.opacityTransition}),new v.Move(_73e.element,{x:_738,y:_739,sync:true,transition:_730.moveTransition}),new v.Scale(_73e.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_730.scaleTransition,scaleContent:_730.scaleContent,scaleFromCenter:_730.scaleFromCenter,restoreAfterFinish:true})],_73a);
}});
};
MochiKit.Visual.shrink=function(_73f,_740){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_73f=d.getElement(_73f);
_740=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_740);
var _744={top:_73f.style.top,left:_73f.style.left,height:_73f.style.height,width:_73f.style.width,opacity:s.getStyle(_73f,"opacity")};
var dims=s.getElementDimensions(_73f);
var _746,_747;
switch(_740.direction){
case "top-left":
_746=_747=0;
break;
case "top-right":
_746=dims.w;
_747=0;
break;
case "bottom-left":
_746=0;
_747=dims.h;
break;
case "bottom-right":
_746=dims.w;
_747=dims.h;
break;
case "center":
_746=dims.w/2;
_747=dims.h/2;
break;
}
var _748;
var _749=MochiKit.Base.update({beforeStartInternal:function(_74a){
_748=d.makePositioned(_74a.effects[0].element);
d.makeClipping(_74a.effects[0].element);
},afterFinishInternal:function(_74b){
s.hideElement(_74b.effects[0].element);
d.undoClipping(_74b.effects[0].element,_748);
d.undoPositioned(_74b.effects[0].element);
s.setStyle(_74b.effects[0].element,_744);
}},_740);
return new v.Parallel([new v.Opacity(_73f,{sync:true,to:0,from:1,transition:_740.opacityTransition}),new v.Scale(_73f,/Opera/.test(navigator.userAgent)?1:0,{sync:true,transition:_740.scaleTransition,scaleContent:_740.scaleContent,scaleFromCenter:_740.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_73f,{x:_746,y:_747,sync:true,transition:_740.moveTransition})],_749);
};
MochiKit.Visual.pulsate=function(_74c,_74d){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _751=MochiKit.Style.getStyle(_74c,"opacity");
_74d=b.update({duration:3,from:0,afterFinishInternal:function(_752){
MochiKit.Style.setStyle(_752.element,{"opacity":_751});
}},_74d);
var _753=_74d.transition||v.Transitions.sinoidal;
var _754=b.bind(function(pos){
return _753(1-v.Transitions.pulse(pos,_74d.pulses));
},_753);
b.bind(_754,_753);
return new v.Opacity(_74c,b.update({transition:_754},_74d));
};
MochiKit.Visual.fold=function(_756,_757){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_756=d.getElement(_756);
var _75b={top:_756.style.top,left:_756.style.left,width:_756.style.width,height:_756.style.height};
var _75c=d.makeClipping(_756);
_757=MochiKit.Base.update({scaleContent:false,scaleX:false,afterFinishInternal:function(_75d){
new v.Scale(_756,1,{scaleContent:false,scaleY:false,afterFinishInternal:function(_75e){
s.hideElement(_75e.element);
d.undoClipping(_75e.element,_75c);
s.setStyle(_75e.element,_75b);
}});
}},_757);
return new v.Scale(_756,5,_757);
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.computedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass","tagifyText","multiple","toggle","Parallel","Opacity","Move","Scale","Highlight","ScrollTo","Morph","fade","appear","puff","blindUp","blindDown","switchOff","dropOut","shake","slideDown","slideUp","squish","grow","shrink","pulsate","fold"];
MochiKit.Visual.EXPORT_OK=["Base","PAIRS"];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
MochiKit.Base._deps("DragAndDrop",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.NAME="MochiKit.DragAndDrop";
MochiKit.DragAndDrop.VERSION="1.4";
MochiKit.DragAndDrop.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DragAndDrop.toString=function(){
return this.__repr__();
};
MochiKit.DragAndDrop.EXPORT=["Droppable","Draggable"];
MochiKit.DragAndDrop.EXPORT_OK=["Droppables","Draggables"];
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_760){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_760);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_765){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_765)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_765);
}
},this.drops);
},findDeepestChild:function(_767){
deepest=_767[0];
for(i=1;i<_767.length;++i){
if(MochiKit.DOM.isParent(_767[i].element,deepest.element)){
deepest=_767[i];
}
}
return deepest;
},show:function(_768,_769){
if(!this.drops.length){
return;
}
var _76a=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_768,_769)){
_76a.push(drop);
}
});
if(_76a.length>0){
drop=this.findDeepestChild(_76a);
MochiKit.Position.within(drop.element,_768.page.x,_768.page.y);
drop.options.onhover(_769,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_76c,_76d){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_76c.mouse(),_76d)){
this.last_active.options.ondrop(_76d,this.last_active.element,_76c);
}
},reset:function(_76e){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_76e);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_770,_771){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_770,_771);
}
this.__init__(_770,_771);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_773,_774){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_773);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_774);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
d.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_778){
if(this.options._containers.length){
var _779;
if(this.options.tree){
_779=_778.treeNode;
}else{
_779=_778.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _779==c;
});
}else{
return true;
}
},isAccepted:function(_77b){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_77b,c);
}));
},isAffected:function(_77d,_77e){
return ((this.element!=_77e)&&this.isContained(_77e)&&this.isAccepted(_77e)&&MochiKit.Position.within(this.element,_77d.page.x,_77d.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_77f){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_77f);
},unregister:function(_781){
this.drags=MochiKit.Base.filter(function(d){
return d!=_781;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_784){
window.focus();
this.activeDraggable=_784;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_785){
if(!this.activeDraggable){
return;
}
var _786=_785.mouse();
if(this._lastPointer&&(MochiKit.Base.repr(this._lastPointer.page)==MochiKit.Base.repr(_786.page))){
return;
}
this._lastPointer=_786;
this.activeDraggable.updateDrag(_785,_786);
},endDrag:function(_787){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_787);
this.activeDraggable=null;
},keyPress:function(_788){
if(this.activeDraggable){
this.activeDraggable.keyPress(_788);
}
},notify:function(_789,_78a,_78b){
MochiKit.Signal.signal(this,_789,_78a,_78b);
}};
MochiKit.DragAndDrop.Draggable=function(_78c,_78d){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_78c,_78d);
}
this.__init__(_78c,_78d);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_78f,_790){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_790=b.update({handle:false,starteffect:function(_793){
this._savedOpacity=MochiKit.Style.getStyle(_793,"opacity")||1;
new v.Opacity(_793,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_794,_795,_796){
var dur=Math.sqrt(Math.abs(_795^2)+Math.abs(_796^2))*0.02;
return new v.Move(_794,{x:-_796,y:-_795,duration:dur});
},endeffect:function(_798){
new v.Opacity(_798,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_790);
var d=MochiKit.DOM;
this.element=d.getElement(_78f);
if(_790.handle&&(typeof (_790.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_790.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_790.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_790.scroll&&!_790.scroll.scrollTo&&!_790.scroll.outerHTML){
_790.scroll=d.getElement(_790.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_790.scroll);
}
d.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_790;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0"),parseInt(s(this.element,"top")||"0")];
},initDrag:function(_79b){
if(!_79b.mouse().button.left){
return;
}
var src=_79b.target();
var _79d=(src.tagName||"").toUpperCase();
if(_79d==="INPUT"||_79d==="SELECT"||_79d==="OPTION"||_79d==="BUTTON"||_79d==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _79e=_79b.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_79e.page.x-pos.x,_79e.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_79b.stop();
},startDrag:function(_7a0){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=parseInt(MochiKit.Style.getStyle(this.element,"z-index")||"0");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _7a1=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_7a1.left;
this.originalScrollTop=_7a1.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_7a0);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_7a2,_7a3){
if(!this.dragging){
this.startDrag(_7a2);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_7a3,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_7a2);
this.draw(_7a3);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _7a7=[0,0];
if(_7a3.page.x>(q.x-this.options.scrollSensitivity)){
_7a7[0]=_7a3.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_7a3.page.x<(p.x+this.options.scrollSensitivity)){
_7a7[0]=_7a3.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_7a3.page.y>(q.y-this.options.scrollSensitivity)){
_7a7[1]=_7a3.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_7a3.page.y<(p.y+this.options.scrollSensitivity)){
_7a7[1]=_7a3.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_7a7);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_7a2.stop();
},finishDrag:function(_7a8,_7a9){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_7a9){
dr.Droppables.fire(_7a8,this.element);
}
dr.Draggables.notify("end",this,_7a8);
var _7ab=this.options.revert;
if(_7ab&&typeof (_7ab)=="function"){
_7ab=_7ab(this.element);
}
var d=this.currentDelta();
if(_7ab&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_7ad){
if(_7ad.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_7ad,false);
_7ad.stop();
},endDrag:function(_7ae){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_7ae,true);
_7ae.stop();
},draw:function(_7af){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_7af.page.x-pos.x-this.offset[0],_7af.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _7b6=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_7b6.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_7b6.top=p[1]+"px";
}
if(_7b6.visibility=="hidden"){
_7b6.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_7b7){
if(!_7b7[0]&&!_7b7[1]){
return;
}
this.scrollSpeed=[_7b7[0]*this.options.scrollSpeed,_7b7[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _7b8=new Date();
var _7b9=_7b8-this.lastScrolled;
this.lastScrolled=_7b8;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_7b9/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_7b9/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_7b9/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_7b9/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_7b9/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
MochiKit.Base._deps("Sortable",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Sortable.NAME="MochiKit.Sortable";
MochiKit.Sortable.VERSION="1.4";
MochiKit.Sortable.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Sortable.toString=function(){
return this.__repr__();
};
MochiKit.Sortable.EXPORT=[];
MochiKit.Sortable.EXPORT_OK=[];
MochiKit.Base.update(MochiKit.Sortable,{sortables:{},_findRootElement:function(_7c1){
while(_7c1.tagName.toUpperCase()!="BODY"){
if(_7c1.id&&MochiKit.Sortable.sortables[_7c1.id]){
return _7c1;
}
_7c1=_7c1.parentNode;
}
},options:function(_7c2){
_7c2=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_7c2));
if(!_7c2){
return;
}
return MochiKit.Sortable.sortables[_7c2.id];
},destroy:function(_7c3){
var s=MochiKit.Sortable.options(_7c3);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_7c9,_7ca){
_7c9=MochiKit.DOM.getElement(_7c9);
var self=MochiKit.Sortable;
_7ca=MochiKit.Base.update({element:_7c9,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_7c9],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_7ca);
self.destroy(_7c9);
var _7cc={revert:true,ghosting:_7ca.ghosting,scroll:_7ca.scroll,scrollSensitivity:_7ca.scrollSensitivity,scrollSpeed:_7ca.scrollSpeed,constraint:_7ca.constraint,handle:_7ca.handle};
if(_7ca.starteffect){
_7cc.starteffect=_7ca.starteffect;
}
if(_7ca.reverteffect){
_7cc.reverteffect=_7ca.reverteffect;
}else{
if(_7ca.ghosting){
_7cc.reverteffect=function(_7cd){
_7cd.style.top=0;
_7cd.style.left=0;
};
}
}
if(_7ca.endeffect){
_7cc.endeffect=_7ca.endeffect;
}
if(_7ca.zindex){
_7cc.zindex=_7ca.zindex;
}
var _7ce={overlap:_7ca.overlap,containment:_7ca.containment,hoverclass:_7ca.hoverclass,onhover:self.onHover,tree:_7ca.tree,accept:_7ca.accept};
var _7cf={onhover:self.onEmptyHover,overlap:_7ca.overlap,containment:_7ca.containment,hoverclass:_7ca.hoverclass,accept:_7ca.accept};
MochiKit.DOM.removeEmptyTextNodes(_7c9);
_7ca.draggables=[];
_7ca.droppables=[];
if(_7ca.dropOnEmpty||_7ca.tree){
new MochiKit.DragAndDrop.Droppable(_7c9,_7cf);
_7ca.droppables.push(_7c9);
}
MochiKit.Base.map(function(e){
var _7d1=_7ca.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_7ca.handle,e):e;
_7ca.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_7cc,{handle:_7d1})));
new MochiKit.DragAndDrop.Droppable(e,_7ce);
if(_7ca.tree){
e.treeNode=_7c9;
}
_7ca.droppables.push(e);
},(self.findElements(_7c9,_7ca)||[]));
if(_7ca.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_7cf);
e.treeNode=_7c9;
_7ca.droppables.push(e);
},(self.findTreeElements(_7c9,_7ca)||[]));
}
self.sortables[_7c9.id]=_7ca;
_7ca.lastValue=self.serialize(_7c9);
_7ca.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_7c9));
_7ca.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_7c9));
},onStart:function(_7d3,_7d4){
var self=MochiKit.Sortable;
var _7d6=self.options(_7d3);
_7d6.lastValue=self.serialize(_7d6.element);
},onEnd:function(_7d7,_7d8){
var self=MochiKit.Sortable;
self.unmark();
var _7da=self.options(_7d7);
if(_7da.lastValue!=self.serialize(_7da.element)){
_7da.onUpdate(_7da.element);
}
},findElements:function(_7db,_7dc){
return MochiKit.Sortable.findChildren(_7db,_7dc.only,_7dc.tree?true:false,_7dc.tag);
},findTreeElements:function(_7dd,_7de){
return MochiKit.Sortable.findChildren(_7dd,_7de.only,_7de.tree?true:false,_7de.treeTag);
},findChildren:function(_7df,only,_7e1,_7e2){
if(!_7df.hasChildNodes()){
return null;
}
_7e2=_7e2.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _7e3=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_7e2&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_7e3.push(e);
}
if(_7e1){
var _7e6=MochiKit.Sortable.findChildren(e,only,_7e1,_7e2);
if(_7e6&&_7e6.length>0){
_7e3=_7e3.concat(_7e6);
}
}
},_7df.childNodes);
return _7e3;
},onHover:function(_7e7,_7e8,_7e9){
if(MochiKit.DOM.isParent(_7e8,_7e7)){
return;
}
var self=MochiKit.Sortable;
if(_7e9>0.33&&_7e9<0.66&&self.options(_7e8).tree){
return;
}else{
if(_7e9>0.5){
self.mark(_7e8,"before");
if(_7e8.previousSibling!=_7e7){
var _7eb=_7e7.parentNode;
_7e7.style.visibility="hidden";
_7e8.parentNode.insertBefore(_7e7,_7e8);
if(_7e8.parentNode!=_7eb){
self.options(_7eb).onChange(_7e7);
}
self.options(_7e8.parentNode).onChange(_7e7);
}
}else{
self.mark(_7e8,"after");
var _7ec=_7e8.nextSibling||null;
if(_7ec!=_7e7){
var _7eb=_7e7.parentNode;
_7e7.style.visibility="hidden";
_7e8.parentNode.insertBefore(_7e7,_7ec);
if(_7e8.parentNode!=_7eb){
self.options(_7eb).onChange(_7e7);
}
self.options(_7e8.parentNode).onChange(_7e7);
}
}
}
},_offsetSize:function(_7ed,type){
if(type=="vertical"||type=="height"){
return _7ed.offsetHeight;
}else{
return _7ed.offsetWidth;
}
},onEmptyHover:function(_7ef,_7f0,_7f1){
var _7f2=_7ef.parentNode;
var self=MochiKit.Sortable;
var _7f4=self.options(_7f0);
if(!MochiKit.DOM.isParent(_7f0,_7ef)){
var _7f5;
var _7f6=self.findElements(_7f0,{tag:_7f4.tag,only:_7f4.only});
var _7f7=null;
if(_7f6){
var _7f8=self._offsetSize(_7f0,_7f4.overlap)*(1-_7f1);
for(_7f5=0;_7f5<_7f6.length;_7f5+=1){
if(_7f8-self._offsetSize(_7f6[_7f5],_7f4.overlap)>=0){
_7f8-=self._offsetSize(_7f6[_7f5],_7f4.overlap);
}else{
if(_7f8-(self._offsetSize(_7f6[_7f5],_7f4.overlap)/2)>=0){
_7f7=_7f5+1<_7f6.length?_7f6[_7f5+1]:null;
break;
}else{
_7f7=_7f6[_7f5];
break;
}
}
}
}
_7f0.insertBefore(_7ef,_7f7);
self.options(_7f2).onChange(_7ef);
_7f4.onChange(_7ef);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_7fa,_7fb){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _7fe=self.options(_7fa.parentNode);
if(_7fe&&!_7fe.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _7ff=MochiKit.Position.cumulativeOffset(_7fa);
self._marker.style.left=_7ff.x+"px";
self._marker.style.top=_7ff.y+"px";
if(_7fb=="after"){
if(_7fe.overlap=="horizontal"){
self._marker.style.left=(_7ff.x+_7fa.clientWidth)+"px";
}else{
self._marker.style.top=(_7ff.y+_7fa.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_800,_801,_802){
var self=MochiKit.Sortable;
var _804=self.findElements(_800,_801)||[];
for(var i=0;i<_804.length;++i){
var _806=_804[i].id.match(_801.format);
if(!_806){
continue;
}
var _807={id:encodeURIComponent(_806?_806[1]:null),element:_800,parent:_802,children:[],position:_802.children.length,container:self._findChildrenElement(_804[i],_801.treeTag.toUpperCase())};
if(_807.container){
self._tree(_807.container,_801,_807);
}
_802.children.push(_807);
}
return _802;
},_findChildrenElement:function(_808,_809){
if(_808&&_808.hasChildNodes){
_809=_809.toUpperCase();
for(var i=0;i<_808.childNodes.length;++i){
if(_808.childNodes[i].tagName.toUpperCase()==_809){
return _808.childNodes[i];
}
}
}
return null;
},tree:function(_80b,_80c){
_80b=MochiKit.DOM.getElement(_80b);
var _80d=MochiKit.Sortable.options(_80b);
_80c=MochiKit.Base.update({tag:_80d.tag,treeTag:_80d.treeTag,only:_80d.only,name:_80b.id,format:_80d.format},_80c||{});
var root={id:null,parent:null,children:new Array,container:_80b,position:0};
return MochiKit.Sortable._tree(_80b,_80c,root);
},setSequence:function(_80f,_810,_811){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_80f=MochiKit.DOM.getElement(_80f);
_811=b.update(self.options(_80f),_811||{});
var _814={};
b.map(function(n){
var m=n.id.match(_811.format);
if(m){
_814[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_80f,_811));
b.map(function(_817){
var n=_814[_817];
if(n){
n[1].appendChild(n[0]);
delete _814[_817];
}
},_810);
},_constructIndex:function(node){
var _81a="";
do{
if(node.id){
_81a="["+node.position+"]"+_81a;
}
}while((node=node.parent)!=null);
return _81a;
},sequence:function(_81b,_81c){
_81b=MochiKit.DOM.getElement(_81b);
var self=MochiKit.Sortable;
var _81c=MochiKit.Base.update(self.options(_81b),_81c||{});
return MochiKit.Base.map(function(item){
return item.id.match(_81c.format)?item.id.match(_81c.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_81b,_81c)||[]));
},serialize:function(_81f,_820){
_81f=MochiKit.DOM.getElement(_81f);
var self=MochiKit.Sortable;
_820=MochiKit.Base.update(self.options(_81f),_820||{});
var name=encodeURIComponent(_820.name||_81f.id);
if(_820.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_81f,_820).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_81f,_820)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;


