/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

MochiKit.Base._deps("Async",["Base"]);
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.4";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_1){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_1;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _2;
if(this.fired==-1){
_2="unfired";
}else{
if(this.fired===0){
_2="success";
}else{
_2="error";
}
}
return "Deferred("+this.id+", "+_2+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var _3=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new _3.CancelledError(this));
}
}else{
if((this.fired===0)&&(this.results[0] instanceof _3.Deferred)){
this.results[0].cancel();
}
}
},_resback:function(_4){
this.fired=((_4 instanceof Error)?1:0);
this.results[this.fired]=_4;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(_5){
this._check();
if(_5 instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(_5);
},errback:function(_6){
this._check();
var _7=MochiKit.Async;
if(_6 instanceof _7.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(_6 instanceof Error)){
_6=new _7.GenericError(_6);
}
this._resback(_6);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _d=this.chain;
var _e=this.fired;
var _f=this.results[_e];
var _10=this;
var cb=null;
while(_d.length>0&&this.paused===0){
var _12=_d.shift();
var f=_12[_e];
if(f===null){
continue;
}
try{
_f=f(_f);
_e=((_f instanceof Error)?1:0);
if(_f instanceof MochiKit.Async.Deferred){
cb=function(res){
_10._resback(res);
_10.paused--;
if((_10.paused===0)&&(_10.fired>=0)){
_10._fire();
}
};
this.paused++;
}
}
catch(err){
_e=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
_f=err;
}
}
this.fired=_e;
this.results[_e]=_f;
if(cb&&this.paused){
_f.addBoth(cb);
_f.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_16){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_18){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var _1a=arguments.callee;
if(!_1a.XMLHttpRequest){
var _1b=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_1b.length;i++){
var _1d=_1b[i];
try{
_1a.XMLHttpRequest=_1d;
return _1d();
}
catch(e){
}
}
}
return _1a.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _20=null;
try{
_20=this.status;
if(!_20&&m.isNotEmpty(this.responseText)){
_20=304;
}
}
catch(e){
}
if(_20==200||_20==201||_20==204||_20==304||_20==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_24){
if(typeof (_24)=="undefined"||_24===null){
_24="";
}
var m=MochiKit.Base;
var _26=MochiKit.Async;
var d=new _26.Deferred(m.partial(_26._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(_26._xhr_onreadystatechange,req,d);
req.send(_24);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,_29){
var _2a=MochiKit.Async;
return _2a.callLater(0,_2a._doXHR,url,_29);
},_doXHR:function(url,_2c){
var m=MochiKit.Base;
_2c=m.update({method:"GET",sendContent:""},_2c);
var _2e=MochiKit.Async;
var req=_2e.getXMLHttpRequest();
if(_2c.queryString){
var qs=m.queryString(_2c.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in _2c){
req.open(_2c.method,url,true,_2c.username,_2c.password);
}else{
req.open(_2c.method,url,true);
}
if(req.overrideMimeType&&_2c.mimeType){
req.overrideMimeType(_2c.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(_2c.headers){
var _31=_2c.headers;
if(!m.isArrayLike(_31)){
_31=m.items(_31);
}
for(var i=0;i<_31.length;i++){
var _33=_31[i];
var _34=_33[0];
var _35=_33[1];
req.setRequestHeader(_34,_35);
}
}
return _2e.sendXMLHttpRequest(req,_2c.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var _3a=MochiKit.Async;
url=_3a._buildURL.apply(_3a,arguments);
return _3a.doXHR(url);
},loadJSONDoc:function(url){
var _3c=MochiKit.Async;
url=_3c._buildURL.apply(_3c,arguments);
var d=_3c.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(_3c.evalJSONRequest);
return d;
},wait:function(_3e,_3f){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_3f)!="undefined"){
d.addCallback(function(){
return _3f;
});
}
var _42=setTimeout(m.bind("callback",d),Math.floor(_3e*1000));
d.canceller=function(){
try{
clearTimeout(_42);
}
catch(e){
}
};
return d;
},callLater:function(_43,_44){
var m=MochiKit.Base;
var _46=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_43).addCallback(function(res){
return _46();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _49;
if(this.locked){
_49="locked, "+this.waiting.length+" waiting";
}else{
_49="unlocked";
}
return "DeferredLock("+this.id+", "+_49+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(_4a,_4b,_4c,_4d,_4e){
MochiKit.Async.Deferred.apply(this,[_4e]);
this.list=_4a;
var _4f=[];
this.resultList=_4f;
this.finishedCount=0;
this.fireOnOneCallback=_4b;
this.fireOnOneErrback=_4c;
this.consumeErrors=_4d;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<_4a.length;i++){
var d=_4a[i];
_4f.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(_4a.length===0&&!_4b){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_53,_54,_55){
this.resultList[_53]=[_54,_55];
this.finishedCount+=1;
if(this.fired==-1){
if(_54&&this.fireOnOneCallback){
this.callback([_53,_55]);
}else{
if(!_54&&this.fireOnOneErrback){
this.errback(_55);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_54&&this.consumeErrors){
_55=null;
}
return _55;
};
MochiKit.Async.gatherResults=function(_56){
var d=new MochiKit.Async.DeferredList(_56,false,true,false);
d.addCallback(function(_58){
var ret=[];
for(var i=0;i<_58.length;i++){
ret.push(_58[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(_5b){
var _5c=MochiKit.Async;
var _5d;
try{
var r=_5b.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof _5c.Deferred){
_5d=r;
}else{
if(r instanceof Error){
_5d=_5c.fail(r);
}else{
_5d=_5c.succeed(r);
}
}
}
catch(e){
_5d=_5c.fail(e);
}
return _5d;
};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock","DeferredList","gatherResults","maybeDeferred","doXHR"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_61){
this.deferred=_61;
});
ne("CancelledError",function(_62){
this.deferred=_62;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_67,obj){
if(_67===null||_67===undefined){
_67={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_67[k]=o[k];
}
}
}
return _67;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},camelize:function(_6c){
var arr=_6c.split("-");
var cc=arr[0];
for(var i=1;i<arr.length;i++){
cc+=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_deps:function(_73,_74){
if(!(_73 in MochiKit)){
MochiKit[_73]={};
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit."+_73);
}
for(var i=0;i<_74.length;i++){
if(typeof (dojo)!="undefined"){
dojo.require("MochiKit."+_74[i]);
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit."+_74[i],[]);
}
if(!(_74[i] in MochiKit)){
throw "MochiKit."+_73+" depends on MochiKit."+_74[i]+"!";
}
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _7e=m.extend(null,arguments);
while(_7e.length){
var o=_7e.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_7e.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_81,obj,_83){
if(!_83){
_83=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_81){
_81=[];
}
for(var i=_83;i<l;i++){
_81.push(obj[i]);
}
}
return _81;
},updatetree:function(_86,obj){
if(_86===null||_86===undefined){
_86={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_86[k])=="object"&&typeof (v)=="object"){
arguments.callee(_86[k],v);
}else{
_86[k]=v;
}
}
}
}
return _86;
},setdefault:function(_8c,obj){
if(_8c===null||_8c===undefined){
_8c={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _8c)){
_8c[k]=o[k];
}
}
}
return _8c;
},keys:function(obj){
var _92=[];
for(var _93 in obj){
_92.push(_93);
}
return _92;
},values:function(obj){
var _95=[];
for(var _96 in obj){
_95.push(obj[_96]);
}
return _95;
},items:function(obj){
var _98=[];
var e;
for(var _9a in obj){
var v;
try{
v=obj[_9a];
}
catch(e){
continue;
}
_98.push([_9a,v]);
}
return _98;
},_newNamedError:function(_9c,_9d,_9e){
_9e.prototype=new MochiKit.Base.NamedError(_9c.NAME+"."+_9d);
_9c[_9d]=_9e;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_dc){
return function(){
return this[_dc].apply(this,arguments);
};
},itemgetter:function(_dd){
return function(arg){
return arg[_dd];
};
},typeMatcher:function(){
var _df={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_df[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _df)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _f0=[];
for(var i=1;i<arguments.length;i++){
_f0.push(fn(arguments[i]));
}
return _f0;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _f6=m.isArrayLike;
if(arguments.length<=2){
if(!_f6(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _f7=[];
for(var i=0;i<lst.length;i++){
_f7.push(fn(lst[i]));
}
return _f7;
}else{
if(fn===null){
fn=Array;
}
var _f9=null;
for(i=1;i<arguments.length;i++){
if(!_f6(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_f9===null||_f9>l){
_f9=l;
}
}
_f7=[];
for(i=0;i<_f9;i++){
var _fb=[];
for(var j=1;j<arguments.length;j++){
_fb.push(arguments[j][i]);
}
_f7.push(fn.apply(this,_fb));
}
return _f7;
}
},xfilter:function(fn){
var _fe=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_fe.push(o);
}
}
return _fe;
},filter:function(fn,lst,self){
var rval=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,self);
}else{
if(typeof (self)=="undefined"||self===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
rval.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(self,o)){
rval.push(o);
}
}
}
}
return rval;
},_wrapDumbFunction:function(func){
return function(){
switch(arguments.length){
case 0:
return func();
case 1:
return func(arguments[0]);
case 2:
return func(arguments[0],arguments[1]);
case 3:
return func(arguments[0],arguments[1],arguments[2]);
}
var args=[];
for(var i=0;i<arguments.length;i++){
args.push("arguments["+i+"]");
}
return eval("(func("+args.join(",")+"))");
};
},methodcaller:function(func){
var args=MochiKit.Base.extend(null,arguments,1);
if(typeof (func)=="function"){
return function(obj){
return func.apply(obj,args);
};
}else{
return function(obj){
return obj[func].apply(obj,args);
};
}
},method:function(self,func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,self],arguments,2));
},compose:function(f1,f2){
var _114=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_114.push(fn);
}
return function(){
var args=arguments;
for(var i=_114.length-1;i>=0;i--){
args=[_114[i].apply(this,args)];
}
return args[0];
};
},bind:function(func,self){
if(typeof (func)=="string"){
func=self[func];
}
var _11c=func.im_func;
var _11d=func.im_preargs;
var _11e=func.im_self;
var m=MochiKit.Base;
if(typeof (func)=="function"&&typeof (func.apply)=="undefined"){
func=m._wrapDumbFunction(func);
}
if(typeof (_11c)!="function"){
_11c=func;
}
if(typeof (self)!="undefined"){
_11e=self;
}
if(typeof (_11d)=="undefined"){
_11d=[];
}else{
_11d=_11d.slice();
}
m.extend(_11d,arguments,2);
var _120=function(){
var args=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
args=m.concat(me.im_preargs,args);
}
var self=me.im_self;
if(!self){
self=this;
}
return me.im_func.apply(self,args);
};
_120.im_self=_11e;
_120.im_func=_11c;
_120.im_preargs=_11d;
return _120;
},bindMethods:function(self){
var bind=MochiKit.Base.bind;
for(var k in self){
var func=self[k];
if(typeof (func)=="function"){
self[k]=bind(func,self);
}
}
},registerComparator:function(name,_129,_12a,_12b){
MochiKit.Base.comparatorRegistry.register(name,_129,_12a,_12b);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _12e=(typeof (a)=="undefined"||a===null);
var _12f=(typeof (b)=="undefined"||b===null);
if(_12e&&_12f){
return 0;
}else{
if(_12e){
return -1;
}else{
if(_12f){
return 1;
}
}
}
var m=MochiKit.Base;
var prim=m._primitives;
if(!(typeof (a) in prim&&typeof (b) in prim)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var repr=m.repr;
throw new TypeError(repr(a)+" and "+repr(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _137=MochiKit.Base.compare;
var _138=a.length;
var rval=0;
if(_138>b.length){
rval=1;
_138=b.length;
}else{
if(_138<b.length){
rval=-1;
}
}
for(var i=0;i<_138;i++){
var cmp=_137(a[i],b[i]);
if(cmp){
return cmp;
}
}
return rval;
},registerRepr:function(name,_13d,wrap,_13f){
MochiKit.Base.reprRegistry.register(name,_13d,wrap,_13f);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _141=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_141=_141.replace(/^\s+/,"").replace(/\s+/g," ");
var idx=_141.indexOf("{");
if(idx!=-1){
_141=_141.substr(0,idx)+"{...}";
}
}
return _141;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(name,_148,wrap,_14a){
MochiKit.Base.jsonRegistry.register(name,_148,wrap,_14a);
},evalJSON:function(){
return eval("("+MochiKit.Base._filterJSON(arguments[0])+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
if(m){
return m[1];
}
return s;
},serializeJSON:function(o){
var _14e=typeof (o);
if(_14e=="number"||_14e=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
var m=MochiKit.Base;
var _150=m.reprString;
if(_14e=="string"){
return _150(o);
}
var me=arguments.callee;
var _152;
if(typeof (o.__json__)=="function"){
_152=o.__json__();
if(o!==_152){
return me(_152);
}
}
if(typeof (o.json)=="function"){
_152=o.json();
if(o!==_152){
return me(_152);
}
}
if(_14e!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_152=m.jsonRegistry.match(o);
if(o!==_152){
return me(_152);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_14e=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_14e=="function"){
return null;
}
res=[];
for(var k in o){
var _157;
if(typeof (k)=="number"){
_157="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_157=_150(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_157+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(self,arr){
if(self.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(self,arr)===0);
},concat:function(){
var rval=[];
var _15d=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_15d(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _161=m.compare;
if(arguments.length==1){
return function(a,b){
return _161(a[key],b[key]);
};
}
var _164=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_164.length);i++){
var key=_164[i];
rval=_161(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _16b=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _16b(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_170,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _173=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_173(o,cur)==_170){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_177,_178,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_178)=="undefined"||_178===null){
_178=0;
}
for(var i=_178;i<end;i++){
if(lst[i]===_177){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _17e=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_17e+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_17e<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_17e;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _182=data.length/2;
return (data[_182]+data[_182-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_184,_185,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_185)=="undefined"||_185===null){
_185=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_185;i<end;i++){
if(cmp(lst[i],_184)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_18a){
var _18b=[node];
var _18c=MochiKit.Base.extend;
while(_18b.length){
var res=_18a(_18b.shift());
if(res){
_18c(_18b,res);
}
}
},nameFunctions:function(_18e){
var base=_18e.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _18e){
var o=_18e[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_192,_193){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_192)=="string"||(typeof (_192.nodeType)!="undefined"&&_192.nodeType>0))){
var kv=MochiKit.DOM.formContents(_192);
_192=kv[0];
_193=kv[1];
}else{
if(arguments.length==1){
if(typeof (_192.length)=="number"&&_192.length==2){
return arguments.callee(_192[0],_192[1]);
}
var o=_192;
_192=[];
_193=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_192.push(k);
_193.push(v[i]);
}
}else{
_192.push(k);
_193.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_192.length,_193.length);
var _19b=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_193[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_19b(_192[i])+"="+_19b(v));
}
}
return rval.join("&");
},parseQueryString:function(_19c,_19d){
var qstr=(_19c.charAt(0)=="?")?_19c.substring(1):_19c;
var _19f=qstr.replace(/\+/g,"%20").split(/(\&amp\;|\&\#38\;|\&#x26;|\&)/);
var o={};
var _1a1;
if(typeof (decodeURIComponent)!="undefined"){
_1a1=decodeURIComponent;
}else{
_1a1=unescape;
}
if(_19d){
for(var i=0;i<_19f.length;i++){
var pair=_19f[i].split("=");
var name=_1a1(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_1a1(pair.join("=")));
}
}else{
for(i=0;i<_19f.length;i++){
pair=_19f[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_1a1(name)]=_1a1(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_1a7,wrap,_1a9){
if(_1a9){
this.pairs.unshift([name,_1a7,wrap]);
}else{
this.pairs.push([name,_1a7,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["flattenArray","noop","camelize","counter","clone","extend","update","updatetree","setdefault","keys","values","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method","average","mean","median"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_1af,_1b0){
if(!MochiKit.__export__){
return;
}
var all=_1b0.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_1af[all[i]]=_1b0[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_1b4){
return encodeURIComponent(_1b4).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_1b5){
return escape(_1b5).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
MochiKit.Base._deps("Color",["Base","DOM","Style"]);
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.4";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_1b9,blue,_1bb){
if(typeof (_1bb)=="undefined"||_1bb===null){
_1bb=1;
}
this.rgb={r:red,g:_1b9,b:blue,a:_1bb};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_1bc){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_1bc);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_1c2){
var hsl=this.asHSL();
hsl.s=_1c2;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_1c5){
var hsl=this.asHSL();
hsl.l=_1c5;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_1c8){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_1c8,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_1cb){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_1cb,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_1ce,_1cf){
if(typeof (_1cf)=="undefined"||_1cf===null){
_1cf=0.5;
}
var sf=1-_1cf;
var s=this.rgb;
var d=_1ce.rgb;
var df=_1cf;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_1d4){
var a=this.asRGB();
var b=_1d4.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_1eb,blue,_1ed){
var _1ee=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_1eb=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_1ed=undefined;
}else{
_1ed=rgb.a;
}
}
return new _1ee(red,_1eb,blue,_1ed);
},fromHSL:function(hue,_1f1,_1f2,_1f3){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_1f6,_1f7,_1f8){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _1fb=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _1fc=_1fb._namedColors[name.toLowerCase()];
if(typeof (_1fc)=="string"){
return _1fb.fromHexString(_1fc);
}else{
if(name=="transparent"){
return _1fb.transparentColor();
}
}
return null;
},fromString:function(_1fd){
var self=MochiKit.Color.Color;
var _1ff=_1fd.substr(0,3);
if(_1ff=="rgb"){
return self.fromRGBString(_1fd);
}else{
if(_1ff=="hsl"){
return self.fromHSLString(_1fd);
}else{
if(_1fd.charAt(0)=="#"){
return self.fromHexString(_1fd);
}
}
}
return self.fromName(_1fd);
},fromHexString:function(_200){
if(_200.charAt(0)=="#"){
_200=_200.substring(1);
}
var _201=[];
var i,hex;
if(_200.length==3){
for(i=0;i<3;i++){
hex=_200.substr(i,1);
_201.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_200.substr(i,2);
_201.push(parseInt(hex,16)/255);
}
}
var _204=MochiKit.Color.Color;
return _204.fromRGB.apply(_204,_201);
},_fromColorString:function(pre,_206,_207,_208){
if(_208.indexOf(pre)===0){
_208=_208.substring(_208.indexOf("(",3)+1,_208.length-1);
}
var _209=_208.split(/\s*,\s*/);
var _20a=[];
for(var i=0;i<_209.length;i++){
var c=_209[i];
var val;
var _20e=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_20e=="deg"){
val=parseFloat(c)/360;
}else{
if(_20e=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_207[i]*parseFloat(c);
}
}
}
_20a.push(val);
}
return this[_206].apply(this,_20a);
},fromComputedStyle:function(elem,_210){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _213=MochiKit.Style.getStyle.apply(d,arguments);
if(!_213){
continue;
}
var _214=cls.fromString(_213);
if(!_214){
break;
}
if(_214.asRGB().a>0){
return _214;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_21a){
v*=_21a;
if(v<0){
return 0;
}else{
if(v>_21a){
return _21a;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_220,_221,_222){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_220=hsv.s;
_221=hsv.v;
_222=hsv.a;
}
var red;
var _225;
var blue;
if(_220===0){
red=_221;
_225=_221;
blue=_221;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_221*(1-_220);
var q=_221*(1-(_220*f));
var t=_221*(1-(_220*(1-f)));
switch(i){
case 1:
red=q;
_225=_221;
blue=p;
break;
case 2:
red=p;
_225=_221;
blue=t;
break;
case 3:
red=p;
_225=q;
blue=_221;
break;
case 4:
red=t;
_225=p;
blue=_221;
break;
case 5:
red=_221;
_225=p;
blue=q;
break;
case 6:
case 0:
red=_221;
_225=t;
blue=p;
break;
}
}
return {r:red,g:_225,b:blue,a:_222};
},hslToRGB:function(hue,_22d,_22e,_22f){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_22d=hsl.s;
_22e=hsl.l;
_22f=hsl.a;
}
var red;
var _232;
var blue;
if(_22d===0){
red=_22e;
_232=_22e;
blue=_22e;
}else{
var m2;
if(_22e<=0.5){
m2=_22e*(1+_22d);
}else{
m2=_22e+_22d-(_22e*_22d);
}
var m1=(2*_22e)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_232=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_232,b:blue,a:_22f};
},rgbToHSV:function(red,_239,blue,_23b){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_239=rgb.g;
blue=rgb.b;
_23b=rgb.a;
}
var max=Math.max(Math.max(red,_239),blue);
var min=Math.min(Math.min(red,_239),blue);
var hue;
var _240;
var _241=max;
if(min==max){
hue=0;
_240=0;
}else{
var _242=(max-min);
_240=_242/max;
if(red==max){
hue=(_239-blue)/_242;
}else{
if(_239==max){
hue=2+((blue-red)/_242);
}else{
hue=4+((red-_239)/_242);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_240,v:_241,a:_23b};
},rgbToHSL:function(red,_244,blue,_246){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_244=rgb.g;
blue=rgb.b;
_246=rgb.a;
}
var max=Math.max(red,Math.max(_244,blue));
var min=Math.min(red,Math.min(_244,blue));
var hue;
var _24b;
var _24c=(max+min)/2;
var _24d=max-min;
if(_24d===0){
hue=0;
_24b=0;
}else{
if(_24c<=0.5){
_24b=_24d/(max+min);
}else{
_24b=_24d/(2-max-min);
}
if(red==max){
hue=(_244-blue)/_24d;
}else{
if(_244==max){
hue=2+((blue-red)/_24d);
}else{
hue=4+((red-_244)/_24d);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_24b,l:_24c,a:_246};
},toColorPart:function(num){
num=Math.round(num);
var _24f=num.toString(16);
if(num<16){
return "0"+_24f;
}
return _24f;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _251=1/3;
var _252={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_251,_251,_251],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_251,2*_251,2*_251],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _253=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _252){
var name=k+"Color";
var _25c=m.concat([_253,this.Color,name],_252[k]);
this.Color[name]=m.bind.apply(null,_25c);
}
var _25d=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _25f=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_25d,_25f);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._deps("DateTime",["Base"]);
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.4";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
return new Date(iso[0],iso[1]-1,iso[2]);
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_267,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_267=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_267,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_267,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_267,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_26f){
if(typeof (date)=="undefined"||date===null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_26f&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_275){
if(typeof (date)=="undefined"||date===null){
return null;
}
var sep=_275?"T":" ";
var foot=_275?"Z":"";
if(_275){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_275)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _279=MochiKit.DateTime._padTwo;
return [date.getFullYear(),_279(date.getMonth()+1),_279(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _27e=MochiKit.DateTime._padTwo;
return [_27e(d.getMonth()+1),_27e(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
}else{
(function(_283,_284){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(MochiKit.__export__===false)){
var all=_284.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_283[all[i]]=_284[all[i]];
}
}
})(this,MochiKit.DateTime);
}
MochiKit.Base._deps("DOM",["Base"]);
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["removeEmptyTextNodes","formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","isChildNode","getNodeAttribute","removeNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","insertSiblingNodesAfter","insertSiblingNodesBefore","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","DL","DT","DD","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText","isParent","getFirstParentByTagAndClassName","makeClipping","undoClipping","makePositioned","undoPositioned","getFirstElementByTagAndClassName"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.DEPRECATED=[["computedStyle","MochiKit.Style.getStyle","1.4"],["elementDimensions","MochiKit.Style.getElementDimensions","1.4"],["elementPosition","MochiKit.Style.getElementPosition","1.4"],["hideElement","MochiKit.Style.hideElement","1.4"],["setElementDimensions","MochiKit.Style.setElementDimensions","1.4"],["setElementPosition","MochiKit.Style.setElementPosition","1.4"],["setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4"],["setOpacity","MochiKit.Style.setOpacity","1.4"],["showElement","MochiKit.Style.showElement","1.4"],["Coordinates","MochiKit.Style.Coordinates","1.4"],["Dimensions","MochiKit.Style.Dimensions","1.4"]];
MochiKit.DOM.getViewportDimensions=new Function(""+"if (!MochiKit[\"Style\"]) {"+"    throw new Error(\"This function has been deprecated and depends on MochiKit.Style.\");"+"}"+"return MochiKit.Style.getViewportDimensions.apply(this, arguments);");
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _28a=self._document;
var _28b=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_28b;
self._document=_28a;
throw e;
}
self._window=_28b;
self._document=_28a;
return rval;
},formContents:function(elem){
var _28e=[];
var _28f=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _294=elem.tagName.toUpperCase();
if(_294==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_294==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_28e.push(name);
_28f.push(v);
return null;
}
_28e.push(name);
_28f.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_28e.push(name);
_28f.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_28e.push(name);
_28f.push(v);
}
return null;
}
}
if(_294==="FORM"||_294==="P"||_294==="SPAN"||_294==="DIV"){
return elem.childNodes;
}
_28e.push(name);
_28f.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_28e,_28f];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _29d=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_29d;
throw e;
}
self._document=_29d;
return rval;
},registerDOMConverter:function(name,_2a0,wrap,_2a2){
MochiKit.DOM.domConverters.register(name,_2a0,wrap,_2a2);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _2a9=im.repeat;
var map=m.map;
}
var _2ab=self.domConverters;
var _2ac=arguments.callee;
var _2ad=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im.list(node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _2ae=null;
try{
_2ae=iter(node);
}
catch(e){
}
if(_2ae){
return map(_2ac,_2ae,_2a9(ctx));
}
}
try{
node=_2ab.match(node,ctx);
continue;
}
catch(e){
if(e!=_2ad){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_2b0){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_2b0)=="string"){
_2b0=self.getElement(_2b0);
}
if(typeof (node)=="undefined"||node===null||node===self._document){
return false;
}
do{
if(node===_2b0){
return true;
}
var _2b2=node.tagName;
node=node.parentNode;
if(!_2b2){
break;
}
_2b2=_2b2.toUpperCase();
}while(_2b2!="BODY"&&_2b2!="HTML");
return false;
},setNodeAttribute:function(node,attr,_2b5){
var o={};
o[attr]=_2b5;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _2ba=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_2ba){
return node[_2ba];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _2be=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_2be){
return node[_2be];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_2c0){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_2c0){
var _2c3=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _2c0){
var v=_2c0[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_2c3(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _2c6=self.attributeArray.renames;
for(var k in _2c0){
v=_2c0[k];
var _2c7=_2c6[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_2c7)=="string"){
elem[_2c7]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_2c3(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _2cb=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _2cc=MochiKit.Base.concat;
while(_2cb.length){
var n=_2cb.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_2cb=_2cc(n,_2cb);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _2d1=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _2d2=elem.parentNode;
var _2d3=MochiKit.Base.concat;
while(_2d1.length){
var n=_2d1.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_2d2.insertBefore(n,elem);
}else{
_2d1=_2d3(n,_2d1);
}
}
}
return _2d2;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _2d8=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_2d8);
}else{
return self.appendChildNodes(elem.parentNode,_2d8);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _2dc;
while((_2dc=elem.firstChild)){
elem.removeChild(_2dc);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_2de){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_2de)=="string"||typeof (_2de)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _2e3=self._xhtml;
if(_2de&&!self.attributeArray.compliant){
var _2e4="";
if("name" in _2de){
_2e4+=" name=\""+self.escapeHTML(_2de.name)+"\"";
}
if(name=="input"&&"type" in _2de){
_2e4+=" type=\""+self.escapeHTML(_2de.type)+"\"";
}
if(_2e4){
name="<"+name+_2e4+">";
_2e3=false;
}
}
var d=self._document;
if(_2e3&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_2de){
self.updateNodeAttributes(elem,_2de);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var e=MochiKit.DOM.getElement(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _2ec=dest.parentNode;
if(src){
src=self.getElement(src);
_2ec.replaceChild(src,dest);
}else{
_2ec.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_2ef,_2f0,_2f1){
var self=MochiKit.DOM;
if(typeof (_2ef)=="undefined"||_2ef===null){
_2ef="*";
}
if(typeof (_2f1)=="undefined"||_2f1===null){
_2f1=self._document;
}
_2f1=self.getElement(_2f1);
var _2f3=(_2f1.getElementsByTagName(_2ef)||self._document.all);
if(typeof (_2f0)=="undefined"||_2f0===null){
return MochiKit.Base.extend(null,_2f3);
}
var _2f4=[];
for(var i=0;i<_2f3.length;i++){
var _2f6=_2f3[i];
var cls=_2f6.className;
if(!cls){
continue;
}
var _2f8=cls.split(" ");
for(var j=0;j<_2f8.length;j++){
if(_2f8[j]==_2f0){
_2f4.push(_2f6);
break;
}
}
}
return _2f4;
},_newCallStack:function(path,once){
var rval=function(){
var _2fd=arguments.callee.callStack;
for(var i=0;i<_2fd.length;i++){
if(_2fd[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_2ff,path,func,once){
var self=MochiKit.DOM;
var _304=_2ff[path];
var _305=_304;
if(!(typeof (_304)=="function"&&typeof (_304.callStack)=="object"&&_304.callStack!==null)){
_305=self._newCallStack(path,once);
if(typeof (_304)=="function"){
_305.callStack.push(_304);
}
_2ff[path]=_305;
}
_305.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_308){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_308=self.getElement(_308);
if(_308){
_308.focus();
}
});
},setElementClass:function(_30a,_30b){
var self=MochiKit.DOM;
var obj=self.getElement(_30a);
if(self.attributeArray.compliant){
obj.setAttribute("class",_30b);
}else{
obj.setAttribute("className",_30b);
}
},toggleElementClass:function(_30e){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_30e)){
self.removeElementClass(obj,_30e);
}
}
},addElementClass:function(_312,_313){
var self=MochiKit.DOM;
var obj=self.getElement(_312);
var cls=obj.className;
if(cls==undefined||cls.length===0){
self.setElementClass(obj,_313);
return true;
}
if(cls==_313){
return false;
}
var _317=cls.split(" ");
for(var i=0;i<_317.length;i++){
if(_317[i]==_313){
return false;
}
}
self.setElementClass(obj,cls+" "+_313);
return true;
},removeElementClass:function(_319,_31a){
var self=MochiKit.DOM;
var obj=self.getElement(_319);
var cls=obj.className;
if(cls==undefined||cls.length===0){
return false;
}
if(cls==_31a){
self.setElementClass(obj,"");
return true;
}
var _31e=cls.split(" ");
for(var i=0;i<_31e.length;i++){
if(_31e[i]==_31a){
_31e.splice(i,1);
self.setElementClass(obj,_31e.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_320,_321,_322){
var obj=MochiKit.DOM.getElement(_320);
var res=MochiKit.DOM.removeElementClass(obj,_321);
if(res){
MochiKit.DOM.addElementClass(obj,_322);
}
return res;
},hasElementClass:function(_325,_326){
var obj=MochiKit.DOM.getElement(_325);
var cls=obj.className;
if(!cls){
return false;
}
var _329=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_329.length;j++){
if(_329[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _331=[dom];
var self=MochiKit.DOM;
var _333=self.escapeHTML;
var _334=self.attributeArray;
while(_331.length){
dom=_331.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _335=[];
var _336=_334(dom);
for(var i=0;i<_336.length;i++){
var a=_336[i];
_335.push([" ",a.name,"=\"",_333(a.value),"\""]);
}
_335.sort();
for(i=0;i<_335.length;i++){
var _339=_335[i];
for(var j=0;j<_339.length;j++){
lst.push(_339[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_331.push("</"+dom.tagName.toLowerCase()+">");
var _33b=dom.childNodes;
for(i=_33b.length-1;i>=0;i--){
_331.push(_33b[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_333(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_33d){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _342=node.nodeValue;
if(typeof (_342)=="string"){
rval.push(_342);
}
})(MochiKit.DOM.getElement(node));
if(_33d){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_343){
_343=MochiKit.DOM.getElement(_343);
for(var i=0;i<_343.childNodes.length;i++){
var node=_343.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},makeClipping:function(_346){
_346=MochiKit.DOM.getElement(_346);
var _347=_346.style.overflow;
if((MochiKit.Style.getStyle(_346,"overflow")||"visible")!="hidden"){
_346.style.overflow="hidden";
}
return _347;
},undoClipping:function(_348,_349){
_348=MochiKit.DOM.getElement(_348);
if(!_349){
return;
}
_348.style.overflow=_349;
},makePositioned:function(_34a){
_34a=MochiKit.DOM.getElement(_34a);
var pos=MochiKit.Style.getStyle(_34a,"position");
if(pos=="static"||!pos){
_34a.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_34a.style.top=0;
_34a.style.left=0;
}
}
},undoPositioned:function(_34c){
_34c=MochiKit.DOM.getElement(_34c);
if(_34c.style.position=="relative"){
_34c.style.position=_34c.style.top=_34c.style.left=_34c.style.bottom=_34c.style.right="";
}
},getFirstElementByTagAndClassName:function(_34d,_34e,_34f){
var self=MochiKit.DOM;
if(typeof (_34d)=="undefined"||_34d===null){
_34d="*";
}
if(typeof (_34f)=="undefined"||_34f===null){
_34f=self._document;
}
_34f=self.getElement(_34f);
var _351=(_34f.getElementsByTagName(_34d)||self._document.all);
if(typeof (_34e)=="undefined"||_34e===null){
return _351[0];
}
for(var i=0;i<_351.length;i++){
var _353=_351[i];
var _354=_353.className.split(" ");
for(var j=0;j<_354.length;j++){
if(_354[j]==_34e){
return _353;
}
}
}
},getFirstParentByTagAndClassName:function(elem,_357,_358){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_357)=="undefined"||_357===null){
_357="*";
}else{
_357=_357.toUpperCase();
}
if(typeof (_358)=="undefined"||_358===null){
_358=null;
}
var _35a="";
var _35b="";
while(elem&&elem.tagName){
elem=elem.parentNode;
if(_357=="*"&&_358===null){
return elem;
}
_35a=elem.className.split(" ");
_35b=elem.tagName.toUpperCase();
if(_358===null&&_357==_35b){
return elem;
}else{
if(_358!==null){
for(var i=0;i<_35a.length;i++){
if(_357=="*"&&_35a[i]==_358){
return elem;
}else{
if(_357==_35b&&_35a[i]==_358){
return elem;
}
}
}
}
}
}
return elem;
},isParent:function(_35d,_35e){
if(!_35d.parentNode||_35d==_35e){
return false;
}
if(_35d.parentNode==_35e){
return true;
}
return MochiKit.DOM.isParent(_35d.parentNode,_35e);
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _361="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_361);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _362=this._document.createElement("span");
var _363;
if(_362&&_362.attributes&&_362.attributes.length>0){
var _364=m.filter;
_363=function(node){
return _364(_363.ignoreAttrFilter,node.attributes);
};
_363.ignoreAttr={};
var _366=_362.attributes;
var _367=_363.ignoreAttr;
for(var i=0;i<_366.length;i++){
var a=_366[i];
_367[a.name]=a.value;
}
_363.ignoreAttrFilter=function(a){
return (_363.ignoreAttr[a.name]!=a.value);
};
_363.compliant=false;
_363.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_363=function(node){
return node.attributes;
};
_363.compliant=true;
_363.renames={};
}
this.attributeArray=_363;
var _36c=function(_36d,arr){
var _36f=arr[1].split(".");
var str="";
var obj={};
str+="if (!MochiKit."+_36f[1]+") { throw new Error(\"";
str+="This function has been deprecated and depends on MochiKit.";
str+=_36f[1]+".\");}";
str+="return MochiKit."+_36f[1]+"."+arr[0];
str+=".apply(this, arguments);";
obj[_36f[2]]=new Function(str);
MochiKit.Base.update(MochiKit[_36d],obj);
};
for(var i;i<MochiKit.DOM.DEPRECATED.length;i++){
_36c("DOM",MochiKit.DOM.DEPRECATED[i]);
}
var _372=this.createDOMFunc;
this.UL=_372("ul");
this.OL=_372("ol");
this.LI=_372("li");
this.DL=_372("dl");
this.DT=_372("dt");
this.DD=_372("dd");
this.TD=_372("td");
this.TR=_372("tr");
this.TBODY=_372("tbody");
this.THEAD=_372("thead");
this.TFOOT=_372("tfoot");
this.TABLE=_372("table");
this.TH=_372("th");
this.INPUT=_372("input");
this.SPAN=_372("span");
this.A=_372("a");
this.DIV=_372("div");
this.IMG=_372("img");
this.BUTTON=_372("button");
this.TT=_372("tt");
this.PRE=_372("pre");
this.H1=_372("h1");
this.H2=_372("h2");
this.H3=_372("h3");
this.BR=_372("br");
this.HR=_372("hr");
this.LABEL=_372("label");
this.TEXTAREA=_372("textarea");
this.FORM=_372("form");
this.P=_372("p");
this.SELECT=_372("select");
this.OPTION=_372("option");
this.OPTGROUP=_372("optgroup");
this.LEGEND=_372("legend");
this.FIELDSET=_372("fieldset");
this.STRONG=_372("strong");
this.CANVAS=_372("canvas");
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
MochiKit.Base._deps("DragAndDrop",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.NAME="MochiKit.DragAndDrop";
MochiKit.DragAndDrop.VERSION="1.4";
MochiKit.DragAndDrop.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DragAndDrop.toString=function(){
return this.__repr__();
};
MochiKit.DragAndDrop.EXPORT=["Droppable","Draggable"];
MochiKit.DragAndDrop.EXPORT_OK=["Droppables","Draggables"];
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_373){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_373);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_378){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_378)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_378);
}
},this.drops);
},findDeepestChild:function(_37a){
deepest=_37a[0];
for(i=1;i<_37a.length;++i){
if(MochiKit.DOM.isParent(_37a[i].element,deepest.element)){
deepest=_37a[i];
}
}
return deepest;
},show:function(_37b,_37c){
if(!this.drops.length){
return;
}
var _37d=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_37b,_37c)){
_37d.push(drop);
}
});
if(_37d.length>0){
drop=this.findDeepestChild(_37d);
MochiKit.Position.within(drop.element,_37b.page.x,_37b.page.y);
drop.options.onhover(_37c,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_37f,_380){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_37f.mouse(),_380)){
this.last_active.options.ondrop(_380,this.last_active.element,_37f);
}
},reset:function(_381){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_381);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_383,_384){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_383,_384);
}
this.__init__(_383,_384);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_386,_387){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_386);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_387);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
d.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_38b){
if(this.options._containers.length){
var _38c;
if(this.options.tree){
_38c=_38b.treeNode;
}else{
_38c=_38b.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _38c==c;
});
}else{
return true;
}
},isAccepted:function(_38e){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_38e,c);
}));
},isAffected:function(_390,_391){
return ((this.element!=_391)&&this.isContained(_391)&&this.isAccepted(_391)&&MochiKit.Position.within(this.element,_390.page.x,_390.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_392){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_392);
},unregister:function(_394){
this.drags=MochiKit.Base.filter(function(d){
return d!=_394;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_397){
window.focus();
this.activeDraggable=_397;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_398){
if(!this.activeDraggable){
return;
}
var _399=_398.mouse();
if(this._lastPointer&&(MochiKit.Base.repr(this._lastPointer.page)==MochiKit.Base.repr(_399.page))){
return;
}
this._lastPointer=_399;
this.activeDraggable.updateDrag(_398,_399);
},endDrag:function(_39a){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_39a);
this.activeDraggable=null;
},keyPress:function(_39b){
if(this.activeDraggable){
this.activeDraggable.keyPress(_39b);
}
},notify:function(_39c,_39d,_39e){
MochiKit.Signal.signal(this,_39c,_39d,_39e);
}};
MochiKit.DragAndDrop.Draggable=function(_39f,_3a0){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_39f,_3a0);
}
this.__init__(_39f,_3a0);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_3a2,_3a3){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_3a3=b.update({handle:false,starteffect:function(_3a6){
this._savedOpacity=MochiKit.Style.getStyle(_3a6,"opacity")||1;
new v.Opacity(_3a6,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_3a7,_3a8,_3a9){
var dur=Math.sqrt(Math.abs(_3a8^2)+Math.abs(_3a9^2))*0.02;
return new v.Move(_3a7,{x:-_3a9,y:-_3a8,duration:dur});
},endeffect:function(_3ab){
new v.Opacity(_3ab,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_3a3);
var d=MochiKit.DOM;
this.element=d.getElement(_3a2);
if(_3a3.handle&&(typeof (_3a3.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_3a3.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_3a3.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_3a3.scroll&&!_3a3.scroll.scrollTo&&!_3a3.scroll.outerHTML){
_3a3.scroll=d.getElement(_3a3.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_3a3.scroll);
}
d.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_3a3;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0"),parseInt(s(this.element,"top")||"0")];
},initDrag:function(_3ae){
if(!_3ae.mouse().button.left){
return;
}
var src=_3ae.target();
var _3b0=(src.tagName||"").toUpperCase();
if(_3b0==="INPUT"||_3b0==="SELECT"||_3b0==="OPTION"||_3b0==="BUTTON"||_3b0==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _3b1=_3ae.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_3b1.page.x-pos.x,_3b1.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_3ae.stop();
},startDrag:function(_3b3){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=parseInt(MochiKit.Style.getStyle(this.element,"z-index")||"0");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _3b4=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_3b4.left;
this.originalScrollTop=_3b4.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_3b3);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_3b5,_3b6){
if(!this.dragging){
this.startDrag(_3b5);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_3b6,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_3b5);
this.draw(_3b6);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _3ba=[0,0];
if(_3b6.page.x>(q.x-this.options.scrollSensitivity)){
_3ba[0]=_3b6.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_3b6.page.x<(p.x+this.options.scrollSensitivity)){
_3ba[0]=_3b6.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_3b6.page.y>(q.y-this.options.scrollSensitivity)){
_3ba[1]=_3b6.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_3b6.page.y<(p.y+this.options.scrollSensitivity)){
_3ba[1]=_3b6.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_3ba);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_3b5.stop();
},finishDrag:function(_3bb,_3bc){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_3bc){
dr.Droppables.fire(_3bb,this.element);
}
dr.Draggables.notify("end",this,_3bb);
var _3be=this.options.revert;
if(_3be&&typeof (_3be)=="function"){
_3be=_3be(this.element);
}
var d=this.currentDelta();
if(_3be&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_3c0){
if(_3c0.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_3c0,false);
_3c0.stop();
},endDrag:function(_3c1){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_3c1,true);
_3c1.stop();
},draw:function(_3c2){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_3c2.page.x-pos.x-this.offset[0],_3c2.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _3c9=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_3c9.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_3c9.top=p[1]+"px";
}
if(_3c9.visibility=="hidden"){
_3c9.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_3ca){
if(!_3ca[0]&&!_3ca[1]){
return;
}
this.scrollSpeed=[_3ca[0]*this.options.scrollSpeed,_3ca[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _3cb=new Date();
var _3cc=_3cb-this.lastScrolled;
this.lastScrolled=_3cb;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_3cc/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_3cc/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_3cc/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_3cc/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_3cc/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
MochiKit.Base._deps("Format",["Base"]);
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.4";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_3d4,_3d5,_3d6,_3d7,_3d8,_3d9,_3da,_3db,_3dc){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _3d4;
}
var _3de=_3d5;
var _3df=_3d6;
if(num<0){
num=-num;
}else{
_3de=_3de.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_3d7);
if(_3d8){
num=num*100;
_3df=fmt.percent+_3df;
}
num=MochiKit.Format.roundToFixed(num,_3d9);
var _3e2=num.split(/\./);
var _3e3=_3e2[0];
var frac=(_3e2.length==1)?"":_3e2[1];
var res="";
while(_3e3.length<_3da){
_3e3="0"+_3e3;
}
if(_3db){
while(_3e3.length>_3db){
var i=_3e3.length-_3db;
res=fmt.separator+_3e3.substring(i,_3e3.length)+res;
_3e3=_3e3.substring(0,i);
}
}
res=_3e3+res;
if(_3d9>0){
while(frac.length<_3dc){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _3de+res+_3df;
};
};
MochiKit.Format.numberFormatter=function(_3e7,_3e8,_3e9){
if(typeof (_3e8)=="undefined"){
_3e8="";
}
var _3ea=_3e7.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_3ea){
throw TypeError("Invalid pattern");
}
var _3eb=_3e7.substr(0,_3ea.index);
var _3ec=_3e7.substr(_3ea.index+_3ea[0].length);
if(_3eb.search(/-/)==-1){
_3eb=_3eb+"-";
}
var _3ed=_3ea[1];
var frac=(typeof (_3ea[2])=="string"&&_3ea[2]!="")?_3ea[2]:"";
var _3ef=(typeof (_3ea[3])=="string"&&_3ea[3]!="");
var tmp=_3ed.split(/,/);
var _3f1;
if(typeof (_3e9)=="undefined"){
_3e9="default";
}
if(tmp.length==1){
_3f1=null;
}else{
_3f1=tmp[1].length;
}
var _3f2=_3ed.length-_3ed.replace(/0/g,"").length;
var _3f3=frac.length-frac.replace(/0/g,"").length;
var _3f4=frac.length;
var rval=MochiKit.Format._numberFormatter(_3e8,_3eb,_3ec,_3e9,_3ef,_3f4,_3f2,_3f1,_3f3);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_3f9){
if(typeof (_3f9)=="undefined"||_3f9===null){
_3f9="default";
}
if(typeof (_3f9)=="string"){
var rval=MochiKit.Format.LOCALE[_3f9];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_3f9]=rval;
}
return rval;
}else{
return _3f9;
}
};
MochiKit.Format.twoDigitAverage=function(_3fb,_3fc){
if(_3fc){
var res=_3fb/_3fc;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_3fb/_3fc);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_3fe){
var sign=(_3fe<0?"-":"");
var s=Math.floor(Math.abs(_3fe)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
if(s.length==1){
s="0"+s;
}
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_404){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_404){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_404+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_406){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_406){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_406+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_408){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_408),_408);
};
MochiKit.Format.truncToFixed=function(_40a,_40b){
_40a=Math.floor(_40a*Math.pow(10,_40b));
var res=(_40a*Math.pow(10,-_40b)).toFixed(_40b);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_40d,_40e){
return MochiKit.Format.truncToFixed(_40d+0.5*Math.pow(10,-_40e),_40e);
};
MochiKit.Format.percentFormat=function(_40f){
return MochiKit.Format.twoDigitFloat(100*_40f)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
for(k in this){
o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.Format);
}else{
(function(_414,_415){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(MochiKit.__export__===false)){
var all=_415.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_414[all[i]]=_415[all[i]];
}
}
})(this,MochiKit.Format);
}
MochiKit.Base._deps("Iter",["Base"]);
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.4";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_419,_41a,_41b){
MochiKit.Iter.iteratorRegistry.register(name,_419,_41a,_41b);
},iter:function(_41c,_41d){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_41d;
},_41c);
}
if(typeof (_41c.next)=="function"){
return _41c;
}else{
if(typeof (_41c.iter)=="function"){
return _41c.iter();
}
}
try{
return self.iteratorRegistry.match(_41c);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_41c)+": "+m.repr(_41c)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _427=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_427.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_42d){
return _42d.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _433=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_433);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _43f=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_43f=arguments[1];
stop=arguments[2];
}else{
_43f=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_43f,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_43f){
rval=seq.next();
i++;
}
if(_43f>=stop){
throw self.StopIteration;
}
_43f+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _449=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_449));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _454=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_454.length>1){
try{
var _455=_454[0].next();
return _455;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_454.shift();
var _455=_454[0].next();
return _455;
}
}
if(_454.length==1){
var arg=_454.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_460,sync,_462){
sync.pos[_460]=-1;
var m=MochiKit.Base;
var _464=m.listMin;
return {repr:function(){
return "tee("+_460+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_460];
if(i==sync.max){
rval=_462.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_460]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_460]+=1;
if(i==sync.min&&_464(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_467,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_467=self.iter(_467);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_467));
}
return rval;
},list:function(_46e){
var rval;
if(_46e instanceof Array){
return _46e.slice();
}
if(typeof (_46e)=="function"&&!(_46e instanceof Function)&&typeof (_46e.length)=="number"){
rval=[];
for(var i=0;i<_46e.length;i++){
rval.push(_46e[i]);
}
return rval;
}
var self=MochiKit.Iter;
_46e=self.iter(_46e);
var rval=[];
var _472;
try{
while(true){
_472=_46e.next();
rval.push(_472);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_474,_475){
var i=0;
var x=_475;
var self=MochiKit.Iter;
_474=self.iter(_474);
if(arguments.length<3){
try{
x=_474.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_474.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _479=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_479=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_479=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_479>=stop)||(step<0&&_479<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_479;
_479+=step;
return rval;
},repr:function(){
return "range("+[_479,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_47d,_47e){
if(typeof (_47e)=="undefined"||_47e===null){
_47e=0;
}
var x=_47e;
var self=MochiKit.Iter;
_47d=self.iter(_47d);
try{
while(true){
x+=_47d.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_481){
var self=MochiKit.Iter;
_481=self.iter(_481);
try{
while(true){
_481.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_483,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_483)){
try{
for(var i=0;i<_483.length;i++){
func(_483[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_483));
}
},every:function(_488,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_488).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_48b,cmp){
var rval=MochiKit.Iter.list(_48b);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_48e){
var rval=MochiKit.Iter.list(_48e);
rval.reverse();
return rval;
},some:function(_490,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_490).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_494){
if(MochiKit.Base.isArrayLike(_494)){
for(var i=0;i<_494.length;i++){
lst.push(_494[i]);
}
}else{
var self=MochiKit.Iter;
_494=self.iter(_494);
try{
while(true){
lst.push(_494.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_497,_498){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_498=m.operator.identity;
}
_497=self.iter(_497);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_497.next();
k=_498(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _49f=true;
var _4a0=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_4a0(k,pk)===0){
fetch();
if(_49f){
_49f=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_4a0(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_4a1,_4a2){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_4a2=m.operator.identity;
}
_4a1=self.iter(_4a1);
var _4a5=[];
var _4a6=true;
var _4a7;
var _4a8=m.compare;
while(true){
try{
var _4a9=_4a1.next();
var key=_4a2(_4a9);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_4a6||_4a8(key,_4a7)!==0){
var _4ab=[];
_4a5.push([key,_4ab]);
}
_4ab.push(_4a9);
_4a6=false;
_4a7=key;
}
return _4a5;
},arrayLikeIter:function(_4ac){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_4ac.length){
throw MochiKit.Iter.StopIteration;
}
return _4ac[i++];
}};
},hasIterateNext:function(_4ae){
return (_4ae&&typeof (_4ae.iterateNext)=="function");
},iterateNextIter:function(_4af){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_4af.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter"];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
MochiKit.Base._deps("Logging",["Base"]);
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.4";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.LogMessage=function(num,_4b3,info){
this.num=num;
this.level=_4b3;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_4b6){
var self=MochiKit.Logging;
if(typeof (_4b6)=="string"){
_4b6=self.LogLevel[_4b6];
}
return function(msg){
var _4b9=msg.level;
if(typeof (_4b9)=="string"){
_4b9=self.LogLevel[_4b9];
}
return _4b9>=_4b6;
};
},isLogMessage:function(){
var _4ba=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _4ba)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_4bf){
this.counter=0;
if(typeof (_4bf)=="undefined"||_4bf===null){
_4bf=-1;
}
this.maxSize=_4bf;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (printfire)=="function"){
printfire(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_4c4,_4c5,_4c6){
if(typeof (_4c5)=="string"){
_4c5=MochiKit.Logging.logLevelAtLeast(_4c5);
}
var _4c7=[_4c5,_4c6];
_4c7.ident=_4c4;
this.listeners[_4c4]=_4c7;
},removeListener:function(_4c8){
delete this.listeners[_4c8];
},baseLog:function(_4c9,_4ca){
var msg=new MochiKit.Logging.LogMessage(this.counter,_4c9,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_4cc){
var _4cd=0;
if(!(typeof (_4cc)=="undefined"||_4cc===null)){
_4cd=Math.max(0,this._messages.length-_4cc);
}
return this._messages.slice(_4cd);
},getMessageText:function(_4ce){
if(typeof (_4ce)=="undefined"||_4ce===null){
_4ce=30;
}
var _4cf=this.getMessages(_4ce);
if(_4cf.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_4cf);
lst.unshift("LAST "+_4cf.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_4d2){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_4d2||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _4d4=m.partial;
var _4d5=this.Logger;
var _4d6=_4d5.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_4d4(_4d6,"DEBUG"),log:_4d4(_4d6,"INFO"),error:_4d4(_4d6,"ERROR"),fatal:_4d4(_4d6,"FATAL"),warning:_4d4(_4d6,"WARNING")});
var self=this;
var _4d8=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_4d8("log");
this.logError=_4d8("error");
this.logDebug=_4d8("debug");
this.logFatal=_4d8("fatal");
this.logWarning=_4d8("warning");
this.logger=new _4d5();
this.logger.useNativeConsole=true;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
if(typeof (printfire)=="undefined"&&typeof (document)!="undefined"&&document.createEvent&&typeof (dispatchEvent)!="undefined"){
printfire=function(){
printfire.args=arguments;
var ev=document.createEvent("Events");
ev.initEvent("printfire",false,true);
dispatchEvent(ev);
};
}
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
MochiKit.Base._deps("LoggingPane",["Base","Logging"]);
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.4";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_4db){
var m=MochiKit.LoggingPane;
_4db=!(!_4db);
if(m._loggingPane&&m._loggingPane.inline!=_4db){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_4db,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_4dd,_4de){
if(typeof (_4de)=="undefined"||_4de===null){
_4de=MochiKit.Logging.logger;
}
this.logger=_4de;
var _4df=MochiKit.Base.update;
var _4e0=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _4e2=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_4dd){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _4e9=doc.getElementById(uid);
var _4ea=!!_4e9;
if(_4e9&&typeof (_4e9.loggingPane)!="undefined"){
_4e9.loggingPane.logger=this.logger;
_4e9.loggingPane.buildAndApplyFilter();
return _4e9.loggingPane;
}
if(_4ea){
var _4eb;
while((_4eb=_4e9.firstChild)){
_4e9.removeChild(_4eb);
}
}else{
_4e9=doc.createElement("div");
_4e9.id=uid;
}
_4e9.loggingPane=this;
var _4ec=doc.createElement("input");
var _4ed=doc.createElement("input");
var _4ee=doc.createElement("button");
var _4ef=doc.createElement("button");
var _4f0=doc.createElement("button");
var _4f1=doc.createElement("button");
var _4f2=doc.createElement("div");
var _4f3=doc.createElement("div");
var _4f4=uid+"_Listener";
this.colorTable=_4e2(this.colorTable);
var _4f5=[];
var _4f6=null;
var _4f7=function(msg){
var _4f9=msg.level;
if(typeof (_4f9)=="number"){
_4f9=MochiKit.Logging.LogLevel[_4f9];
}
return _4f9;
};
var _4fa=function(msg){
return msg.info.join(" ");
};
var _4fc=bind(function(msg){
var _4fe=_4f7(msg);
var text=_4fa(msg);
var c=this.colorTable[_4fe];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_4fe;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_4fe+": "+text));
_4f3.appendChild(p);
_4f3.appendChild(doc.createElement("br"));
if(_4f2.offsetHeight>_4f2.scrollHeight){
_4f2.scrollTop=0;
}else{
_4f2.scrollTop=_4f2.scrollHeight;
}
},this);
var _502=function(msg){
_4f5[_4f5.length]=msg;
_4fc(msg);
};
var _504=function(){
var _505,_506;
try{
_505=new RegExp(_4ec.value);
_506=new RegExp(_4ed.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_505.test(_4f7(msg))&&_506.test(_4fa(msg)));
};
};
var _508=function(){
while(_4f3.firstChild){
_4f3.removeChild(_4f3.firstChild);
}
};
var _509=function(){
_4f5=[];
_508();
};
var _50a=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_4f4);
try{
try{
_4e9.loggingPane=null;
}
catch(e){
logFatal("Bookmarklet was closed incorrectly.");
}
if(_4dd){
_4e9.parentNode.removeChild(_4e9);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _50b=function(){
_508();
for(var i=0;i<_4f5.length;i++){
var msg=_4f5[i];
if(_4f6===null||_4f6(msg)){
_4fc(msg);
}
}
};
this.buildAndApplyFilter=function(){
_4f6=_504();
_50b();
this.logger.removeListener(_4f4);
this.logger.addListener(_4f4,_4f6,_502);
};
var _50e=bind(function(){
_4f5=this.logger.getMessages();
_50b();
},this);
var _50f=bind(function(_510){
_510=_510||window.event;
key=_510.which||_510.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _511="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_4dd){
_511+="; height: 10em; border-top: 2px solid black";
}else{
_511+="; height: 100%;";
}
_4e9.style.cssText=_511;
if(!_4ea){
doc.body.appendChild(_4e9);
}
_511={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_4e0(_4ec,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_50f,"style":_511});
_4e9.appendChild(_4ec);
_4e0(_4ed,{"value":".*","onkeypress":_50f,"style":_511});
_4e9.appendChild(_4ed);
_511="width: 8%; display:inline; font: "+this.logFont;
_4ee.appendChild(doc.createTextNode("Filter"));
_4ee.onclick=bind("buildAndApplyFilter",this);
_4ee.style.cssText=_511;
_4e9.appendChild(_4ee);
_4ef.appendChild(doc.createTextNode("Load"));
_4ef.onclick=_50e;
_4ef.style.cssText=_511;
_4e9.appendChild(_4ef);
_4f0.appendChild(doc.createTextNode("Clear"));
_4f0.onclick=_509;
_4f0.style.cssText=_511;
_4e9.appendChild(_4f0);
_4f1.appendChild(doc.createTextNode("Close"));
_4f1.onclick=_50a;
_4f1.style.cssText=_511;
_4e9.appendChild(_4f1);
_4f2.style.cssText="overflow: auto; width: 100%";
_4f3.style.cssText="width: 100%; height: "+(_4dd?"8em":"100%");
_4f2.appendChild(_4f3);
_4e9.appendChild(_4f2);
this.buildAndApplyFilter();
_50e();
if(_4dd){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_4dd;
this.closePane=_50a;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.4";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","Selector","Style","LoggingPane","Color","Signal","Position","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
dojo.require("MochiKit.*");
}
if(typeof (JSAN)!="undefined"){
(function(lst){
for(var i=0;i<lst.length;i++){
JSAN.use("MochiKit."+lst[i],[]);
}
})(MochiKit.MochiKit.SUBMODULES);
}
(function(){
var _514=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _516=self.SUBMODULES;
var _517=[];
var _518=[];
var _519={};
var i,k,m,all;
for(i=0;i<_516.length;i++){
m=MochiKit[_516[i]];
_514(_517,m.EXPORT);
_514(_518,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_519[k]=_514(_519[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_514(null,m.EXPORT,m.EXPORT_OK);
}
var j;
for(j=0;j<all.length;j++){
k=all[j];
self[k]=m[k];
}
}
self.EXPORT=_517;
self.EXPORT_OK=_518;
self.EXPORT_TAGS=_519;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
if(typeof (document)=="undefined"){
return;
}
var _51f=document.getElementsByTagName("script");
var _520="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _522=null;
var _523={};
var i;
for(i=0;i<_51f.length;i++){
var src=_51f[i].getAttribute("src");
if(!src){
continue;
}
_523[src]=true;
if(src.match(/MochiKit.js$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_522=_51f[i];
}
}
if(base===null){
return;
}
var _526=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_526.length;i++){
if(MochiKit[_526[i]]){
continue;
}
var uri=base+_526[i]+".js";
if(uri in _523){
continue;
}
if(document.documentElement&&document.documentElement.namespaceURI==_520){
var s=document.createElementNS(_520,"script");
s.setAttribute("id","MochiKit_"+base+_526[i]);
s.setAttribute("src",uri);
s.setAttribute("type","application/x-javascript");
_522.parentNode.appendChild(s);
}else{
document.write("<script src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MockDOM)=="undefined"){
MochiKit.MockDOM={};
}
MochiKit.MockDOM.NAME="MochiKit.MockDOM";
MochiKit.MockDOM.VERSION="1.4";
MochiKit.MockDOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MockDOM.toString=function(){
return this.__repr__();
};
MochiKit.MockDOM.createDocument=function(){
var doc=new MochiKit.MockDOM.MockElement("DOCUMENT");
doc.body=doc.createElement("BODY");
doc.appendChild(doc.body);
return doc;
};
MochiKit.MockDOM.MockElement=function(name,data,_52c){
this.tagName=this.nodeName=name.toUpperCase();
this.ownerDocument=_52c||null;
if(name=="DOCUMENT"){
this.nodeType=9;
this.childNodes=[];
}else{
if(typeof (data)=="string"){
this.nodeValue=data;
this.nodeType=3;
}else{
this.nodeType=1;
this.childNodes=[];
}
}
if(name.substring(0,1)=="<"){
var _52d=name.substring(name.indexOf("\"")+1,name.lastIndexOf("\""));
name=name.substring(1,name.indexOf(" "));
this.tagName=this.nodeName=name.toUpperCase();
this.setAttribute("name",_52d);
}
};
MochiKit.MockDOM.MockElement.prototype={createElement:function(_52e){
return new MochiKit.MockDOM.MockElement(_52e,null,this.nodeType==9?this:this.ownerDocument);
},createTextNode:function(text){
return new MochiKit.MockDOM.MockElement("text",text,this.nodeType==9?this:this.ownerDocument);
},setAttribute:function(name,_531){
this[name]=_531;
},getAttribute:function(name){
return this[name];
},appendChild:function(_533){
this.childNodes.push(_533);
},toString:function(){
return "MockElement("+this.tagName+")";
},getElementsByTagName:function(_534){
var _535=[];
MochiKit.Base.nodeWalk(this,function(node){
if(_534=="*"||_534==node.tagName){
_535.push(node);
return node.childNodes;
}
});
return _535;
}};
MochiKit.MockDOM.EXPORT_OK=["mockElement","createDocument"];
MochiKit.MockDOM.EXPORT=["document"];
MochiKit.MockDOM.__new__=function(){
this.document=this.createDocument();
};
MochiKit.MockDOM.__new__();
MochiKit.Base._deps("Position",["Base","DOM","Style"]);
MochiKit.Position.NAME="MochiKit.Position";
MochiKit.Position.VERSION="1.4";
MochiKit.Position.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Position.toString=function(){
return this.__repr__();
};
MochiKit.Position.EXPORT_OK=[];
MochiKit.Position.EXPORT=[];
MochiKit.Base.update(MochiKit.Position,{includeScrollOffsets:false,prepare:function(){
var _537=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _538=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_537,_538);
},cumulativeOffset:function(_539){
var _53a=0;
var _53b=0;
do{
_53a+=_539.offsetTop||0;
_53b+=_539.offsetLeft||0;
_539=_539.offsetParent;
}while(_539);
return new MochiKit.Style.Coordinates(_53b,_53a);
},realOffset:function(_53c){
var _53d=0;
var _53e=0;
do{
_53d+=_53c.scrollTop||0;
_53e+=_53c.scrollLeft||0;
_53c=_53c.parentNode;
}while(_53c);
return new MochiKit.Style.Coordinates(_53e,_53d);
},within:function(_53f,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_53f,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_53f);
if(_53f.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_53f.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_53f.offsetWidth);
},withinIncludingScrolloffsets:function(_542,x,y){
var _545=this.realOffset(_542);
this.xcomp=x+_545.x-this.windowOffset.x;
this.ycomp=y+_545.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_542);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_542.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_542.offsetWidth);
},overlap:function(mode,_547){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_547.offsetHeight)-this.ycomp)/_547.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_547.offsetWidth)-this.xcomp)/_547.offsetWidth;
}
},absolutize:function(_548){
_548=MochiKit.DOM.getElement(_548);
if(_548.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _549=MochiKit.Position.positionedOffset(_548);
var _54a=_548.clientWidth;
var _54b=_548.clientHeight;
var _54c={"position":_548.style.position,"left":_549.x-parseFloat(_548.style.left||0),"top":_549.y-parseFloat(_548.style.top||0),"width":_548.style.width,"height":_548.style.height};
_548.style.position="absolute";
_548.style.top=_549.y+"px";
_548.style.left=_549.x+"px";
_548.style.width=_54a+"px";
_548.style.height=_54b+"px";
return _54c;
},positionedOffset:function(_54d){
var _54e=0,_54f=0;
do{
_54e+=_54d.offsetTop||0;
_54f+=_54d.offsetLeft||0;
_54d=_54d.offsetParent;
if(_54d){
p=MochiKit.Style.getStyle(_54d,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_54d);
return new MochiKit.Style.Coordinates(_54f,_54e);
},relativize:function(_550,_551){
_550=MochiKit.DOM.getElement(_550);
if(_550.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_550.style.top||0)-(_551["top"]||0);
var left=parseFloat(_550.style.left||0)-(_551["left"]||0);
_550.style.position=_551["position"];
_550.style.top=top+"px";
_550.style.left=left+"px";
_550.style.width=_551["width"];
_550.style.height=_551["height"];
},clone:function(_554,_555){
_554=MochiKit.DOM.getElement(_554);
_555=MochiKit.DOM.getElement(_555);
_555.style.position="absolute";
var _556=this.cumulativeOffset(_554);
_555.style.top=_556.y+"px";
_555.style.left=_556.x+"px";
_555.style.width=_554.offsetWidth+"px";
_555.style.height=_554.offsetHeight+"px";
},page:function(_557){
var _558=0;
var _559=0;
var _55a=_557;
do{
_558+=_55a.offsetTop||0;
_559+=_55a.offsetLeft||0;
if(_55a.offsetParent==document.body&&MochiKit.Style.getStyle(_55a,"position")=="absolute"){
break;
}
}while(_55a=_55a.offsetParent);
_55a=_557;
do{
_558-=_55a.scrollTop||0;
_559-=_55a.scrollLeft||0;
}while(_55a=_55a.parentNode);
return new MochiKit.Style.Coordinates(_559,_558);
}});
MochiKit.Position.__new__=function(win){
var m=MochiKit.Base;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._deps("Selector",["Base","DOM","Iter"]);
MochiKit.Selector.NAME="MochiKit.Selector";
MochiKit.Selector.VERSION="1.4";
MochiKit.Selector.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Selector.toString=function(){
return this.__repr__();
};
MochiKit.Selector.EXPORT=["Selector","findChildElements","findDocElements","$$"];
MochiKit.Selector.EXPORT_OK=[];
MochiKit.Selector.Selector=function(_55d){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_55d.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_55e){
throw "Parse error in selector: "+_55e;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _560=this.params;
var expr=this.expression;
var _562,_563,_564,rest;
while(_562=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_560.attributes=_560.attributes||[];
_560.attributes.push({name:_562[2],operator:_562[3],value:_562[4]||_562[5]||""});
expr=_562[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_562=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_563=_562[1];
_564=_562[2];
rest=_562[3];
switch(_563){
case "#":
_560.id=_564;
break;
case ".":
_560.classNames.push(_564);
break;
case ":":
_560.pseudoClassNames.push(_564);
break;
case "":
case undefined:
_560.tagName=_564.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _567=this.params;
var _568=[];
var _569,i;
function childElements(_56b){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_56b+".childNodes)";
}
if(_567.wildcard){
_568.push("true");
}
if(_569=_567.id){
_568.push("element.id == "+repr(_569));
}
if(_569=_567.tagName){
_568.push("element.tagName.toUpperCase() == "+repr(_569));
}
if((_569=_567.classNames).length>0){
for(i=0;i<_569.length;i++){
_568.push("MochiKit.DOM.hasElementClass(element, "+repr(_569[i])+")");
}
}
if((_569=_567.pseudoClassNames).length>0){
for(i=0;i<_569.length;i++){
var _56c=_569[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _56d=_56c[1];
var _56e=_56c[2];
switch(_56d){
case "root":
_568.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_56c=_56e.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_56c){
throw "Invalid argument to pseudo element nth-child: "+_56e;
}
var a,b;
if(_56c[0]=="odd"){
a=2;
b=1;
}else{
if(_56c[0]=="even"){
a=2;
b=0;
}else{
a=_56c[2]&&parseInt(_56c)||null;
b=parseInt(_56c[3]);
}
}
_568.push("this.nthChild(element,"+a+","+b+","+!!_56d.match("^nth-last")+","+!!_56d.match("of-type$")+")");
break;
case "first-child":
_568.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_568.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_568.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_568.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_568.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_568.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_568.push("element.childNodes.length == 0");
break;
case "enabled":
_568.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_568.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_568.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _571=new MochiKit.Selector.Selector(_56e);
_568.push("!( "+_571.buildMatchExpression()+")");
break;
}
}
}
if(_569=_567.attributes){
MochiKit.Base.map(function(_572){
var _573="MochiKit.DOM.getNodeAttribute(element, "+repr(_572.name)+")";
var _574=function(_575){
return _573+".split("+repr(_575)+")";
};
switch(_572.operator){
case "=":
_568.push(_573+" == "+repr(_572.value));
break;
case "~=":
_568.push(_573+" && MochiKit.Base.findValue("+_574(" ")+", "+repr(_572.value)+") > -1");
break;
case "^=":
_568.push(_573+".substring(0, "+_572.value.length+") == "+repr(_572.value));
break;
case "$=":
_568.push(_573+".substring("+_573+".length - "+_572.value.length+") == "+repr(_572.value));
break;
case "*=":
_568.push(_573+".match("+repr(_572.value)+")");
break;
case "|=":
_568.push(_573+" && "+_574("-")+"[0].toUpperCase() == "+repr(_572.value.toUpperCase()));
break;
case "!=":
_568.push(_573+" != "+repr(_572.value));
break;
case "":
case undefined:
_568.push(_573+" != null");
break;
default:
throw "Unknown operator "+_572.operator+" in selector";
}
},_569);
}
return _568.join(" && ");
},compileMatcher:function(){
this.match=new Function("element","if (!element.tagName) return false;                 return "+this.buildMatchExpression());
},nthChild:function(_576,a,b,_579,_57a){
var _57b=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_576.parentNode.childNodes);
if(_57a){
_57b=MochiKit.Base.filter(function(node){
return node.tagName==_576.tagName;
},_57b);
}
if(_579){
_57b=MochiKit.Iter.reversed(_57b);
}
if(a){
var _57e=MochiKit.Base.findIdentical(_57b,_576);
return ((_57e+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_57b,_576)+1;
}
},isUIElement:function(_57f){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_57f.tagName.toLowerCase())>-1;
},findElements:function(_580,axis){
var _582;
if(axis==undefined){
axis="";
}
function inScope(_583,_584){
if(axis==""){
return MochiKit.DOM.isChildNode(_583,_584);
}else{
if(axis==">"){
return _583.parentNode==_584;
}else{
if(axis=="+"){
return _583==nextSiblingElement(_584);
}else{
if(axis=="~"){
var _585=_584;
while(_585=nextSiblingElement(_585)){
if(_583==_585){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_582=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_582)){
if(!_580||inScope(_582,_580)){
return [_582];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_580=(_580||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_580){
throw "> combinator not allowed without preceeding expression";
}
_580=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_580.childNodes);
}else{
if(axis=="+"){
if(!_580){
throw "+ combinator not allowed without preceeding expression";
}
_580=nextSiblingElement(_580)&&[nextSiblingElement(_580)];
}else{
if(axis=="~"){
if(!_580){
throw "~ combinator not allowed without preceeding expression";
}
var _588=[];
while(nextSiblingElement(_580)){
_580=nextSiblingElement(_580);
_588.push(_580);
}
_580=_588;
}
}
}
}
if(!_580){
return [];
}
var _589=MochiKit.Base.filter(MochiKit.Base.bind(function(_58a){
return this.match(_58a);
},this),_580);
return _589;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_58b,_58c){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_58d){
var _58e="";
return MochiKit.Iter.reduce(function(_58f,expr){
if(match=expr.match(/^[>+~]$/)){
_58e=match[0];
return _58f;
}else{
var _591=new MochiKit.Selector.Selector(expr);
var _592=MochiKit.Iter.reduce(function(_593,_594){
return MochiKit.Base.extend(_593,_591.findElements(_594||_58b,_58e));
},_58f,[]);
_58e="";
return _592;
}
},_58d.replace(/(^\s+|\s+$)/g,"").split(/\s+/),[null]);
},_58c));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
var m=MochiKit.Base;
this.$$=this.findDocElements;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
MochiKit.Base._deps("Signal",["Base","DOM","Style"]);
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.4";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
return this._event.type||undefined;
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
if(elem!==null){
this._relatedTarget=elem;
return elem;
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _5a2=MochiKit.Signal._specialMacKeys;
for(i=63236;i<=63242;i++){
_5a2[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _5a3=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_5a3[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_5a3[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_5a3[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_5a3[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_5a5){
this.source=_5a5.source;
this.signal=_5a5.signal;
this.listener=_5a5.listener;
this.isDOM=_5a5.isDOM;
this.objOrFunc=_5a5.objOrFunc;
this.funcOrStr=_5a5.funcOrStr;
this.connected=_5a5.connected;
};
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _5a7=self._observers;
for(var i=0;i<_5a7.length;i++){
if(_5a7[i].signal!=="onload"&&_5a7[i].signal!=="onunload"){
self._disconnect(_5a7[i]);
}
}
},_listener:function(src,sig,func,obj,_5ad){
var self=MochiKit.Signal;
var E=self.Event;
if(!_5ad){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bind(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_5b0){
obj[func].apply(obj,[new E(src,_5b0)]);
var _5b1=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_5b1);
};
}else{
return function(_5b2){
obj[func].apply(obj,[new E(src,_5b2)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_5b3){
func.apply(obj,[new E(src,_5b3)]);
var _5b4=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_5b4);
};
}else{
return function(_5b5){
func.apply(obj,[new E(src,_5b5)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_5bb){
var e=new E(src,_5bb);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_5bd,_5be){
var obj=null;
var func=null;
if(typeof (_5be)!="undefined"){
obj=_5bd;
func=_5be;
if(typeof (_5be)=="string"){
if(typeof (_5bd[_5be])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_5be)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_5bd)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_5bd;
}
}
return [obj,func];
},connect:function(src,sig,_5c3,_5c4){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _5c6=self._getDestPair(_5c3,_5c4);
var obj=_5c6[0];
var func=_5c6[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _5c9=!!(src.addEventListener||src.attachEvent);
if(_5c9&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _5ca=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
var _5ca=self._listener(src,sig,func,obj,_5c9);
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_5ca,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_5ca);
}
}
var _5cb=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_5ca,isDOM:_5c9,objOrFunc:_5c3,funcOrStr:_5c4,connected:true});
self._observers.push(_5cb);
if(!_5c9&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_5cb],arguments,1);
src.__connect__.apply(src,args);
}
return _5cb;
},_disconnect:function(_5cd){
if(!_5cd.connected){
return;
}
_5cd.connected=false;
if(!_5cd.isDOM){
return;
}
var src=_5cd.source;
var sig=_5cd.signal;
var _5d0=_5cd.listener;
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_5d0,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_5d0);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_5d1){
var self=MochiKit.Signal;
var _5d3=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_5d3.length-1;i>=0;i--){
var o=_5d3[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(!self._lock){
_5d3.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_5d3,_5d1);
if(idx>=0){
self._disconnect(_5d1);
if(!self._lock){
_5d3.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_5dc,_5dd){
var self=MochiKit.Signal;
var _5df=self._observers;
var _5e0=self._disconnect;
var _5e1=self._lock;
var _5e2=self._dirty;
if(typeof (_5dd)==="undefined"){
_5dd=null;
}
for(var i=_5df.length-1;i>=0;i--){
var _5e4=_5df[i];
if(_5e4.objOrFunc===_5dc&&(_5dd===null||_5e4.funcOrStr===_5dd)){
_5e0(_5e4);
if(_5e1){
_5e2=true;
}else{
_5df.splice(i,1);
}
}
}
self._dirty=_5e2;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _5e8=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _5ea=self._disconnect;
var _5eb=self._observers;
var i,_5ed;
var _5ee=self._lock;
var _5ef=self._dirty;
if(_5e8.length===0){
for(i=_5eb.length-1;i>=0;i--){
_5ed=_5eb[i];
if(_5ed.source===src){
_5ea(_5ed);
if(!_5ee){
_5eb.splice(i,1);
}else{
_5ef=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_5e8.length;i++){
sigs[_5e8[i]]=true;
}
for(i=_5eb.length-1;i>=0;i--){
_5ed=_5eb[i];
if(_5ed.source===src&&_5ed.signal in sigs){
_5ea(_5ed);
if(!_5ee){
_5eb.splice(i,1);
}else{
_5ef=true;
}
}
}
}
self._dirty=_5ef;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _5f4=self._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _5f6=[];
self._lock=true;
for(var i=0;i<_5f4.length;i++){
var _5f8=_5f4[i];
if(_5f8.source===src&&_5f8.signal===sig&&_5f8.connected){
try{
_5f8.listener.apply(src,args);
}
catch(e){
_5f6.push(e);
}
}
}
self._lock=false;
if(self._dirty){
self._dirty=false;
for(var i=_5f4.length-1;i>=0;i--){
if(!_5f4[i].connected){
_5f4.splice(i,1);
}
}
}
if(_5f6.length==1){
throw _5f6[0];
}else{
if(_5f6.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_5f6;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll","disconnectAllTo"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=false;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
MochiKit.Base._deps("Sortable",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Sortable.NAME="MochiKit.Sortable";
MochiKit.Sortable.VERSION="1.4";
MochiKit.Sortable.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Sortable.toString=function(){
return this.__repr__();
};
MochiKit.Sortable.EXPORT=[];
MochiKit.Sortable.EXPORT_OK=[];
MochiKit.Base.update(MochiKit.Sortable,{sortables:{},_findRootElement:function(_5fc){
while(_5fc.tagName.toUpperCase()!="BODY"){
if(_5fc.id&&MochiKit.Sortable.sortables[_5fc.id]){
return _5fc;
}
_5fc=_5fc.parentNode;
}
},options:function(_5fd){
_5fd=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_5fd));
if(!_5fd){
return;
}
return MochiKit.Sortable.sortables[_5fd.id];
},destroy:function(_5fe){
var s=MochiKit.Sortable.options(_5fe);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_604,_605){
_604=MochiKit.DOM.getElement(_604);
var self=MochiKit.Sortable;
_605=MochiKit.Base.update({element:_604,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_604],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_605);
self.destroy(_604);
var _607={revert:true,ghosting:_605.ghosting,scroll:_605.scroll,scrollSensitivity:_605.scrollSensitivity,scrollSpeed:_605.scrollSpeed,constraint:_605.constraint,handle:_605.handle};
if(_605.starteffect){
_607.starteffect=_605.starteffect;
}
if(_605.reverteffect){
_607.reverteffect=_605.reverteffect;
}else{
if(_605.ghosting){
_607.reverteffect=function(_608){
_608.style.top=0;
_608.style.left=0;
};
}
}
if(_605.endeffect){
_607.endeffect=_605.endeffect;
}
if(_605.zindex){
_607.zindex=_605.zindex;
}
var _609={overlap:_605.overlap,containment:_605.containment,hoverclass:_605.hoverclass,onhover:self.onHover,tree:_605.tree,accept:_605.accept};
var _60a={onhover:self.onEmptyHover,overlap:_605.overlap,containment:_605.containment,hoverclass:_605.hoverclass,accept:_605.accept};
MochiKit.DOM.removeEmptyTextNodes(_604);
_605.draggables=[];
_605.droppables=[];
if(_605.dropOnEmpty||_605.tree){
new MochiKit.DragAndDrop.Droppable(_604,_60a);
_605.droppables.push(_604);
}
MochiKit.Base.map(function(e){
var _60c=_605.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_605.handle,e):e;
_605.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_607,{handle:_60c})));
new MochiKit.DragAndDrop.Droppable(e,_609);
if(_605.tree){
e.treeNode=_604;
}
_605.droppables.push(e);
},(self.findElements(_604,_605)||[]));
if(_605.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_60a);
e.treeNode=_604;
_605.droppables.push(e);
},(self.findTreeElements(_604,_605)||[]));
}
self.sortables[_604.id]=_605;
_605.lastValue=self.serialize(_604);
_605.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_604));
_605.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_604));
},onStart:function(_60e,_60f){
var self=MochiKit.Sortable;
var _611=self.options(_60e);
_611.lastValue=self.serialize(_611.element);
},onEnd:function(_612,_613){
var self=MochiKit.Sortable;
self.unmark();
var _615=self.options(_612);
if(_615.lastValue!=self.serialize(_615.element)){
_615.onUpdate(_615.element);
}
},findElements:function(_616,_617){
return MochiKit.Sortable.findChildren(_616,_617.only,_617.tree?true:false,_617.tag);
},findTreeElements:function(_618,_619){
return MochiKit.Sortable.findChildren(_618,_619.only,_619.tree?true:false,_619.treeTag);
},findChildren:function(_61a,only,_61c,_61d){
if(!_61a.hasChildNodes()){
return null;
}
_61d=_61d.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _61e=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_61d&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_61e.push(e);
}
if(_61c){
var _621=MochiKit.Sortable.findChildren(e,only,_61c,_61d);
if(_621&&_621.length>0){
_61e=_61e.concat(_621);
}
}
},_61a.childNodes);
return _61e;
},onHover:function(_622,_623,_624){
if(MochiKit.DOM.isParent(_623,_622)){
return;
}
var self=MochiKit.Sortable;
if(_624>0.33&&_624<0.66&&self.options(_623).tree){
return;
}else{
if(_624>0.5){
self.mark(_623,"before");
if(_623.previousSibling!=_622){
var _626=_622.parentNode;
_622.style.visibility="hidden";
_623.parentNode.insertBefore(_622,_623);
if(_623.parentNode!=_626){
self.options(_626).onChange(_622);
}
self.options(_623.parentNode).onChange(_622);
}
}else{
self.mark(_623,"after");
var _627=_623.nextSibling||null;
if(_627!=_622){
var _626=_622.parentNode;
_622.style.visibility="hidden";
_623.parentNode.insertBefore(_622,_627);
if(_623.parentNode!=_626){
self.options(_626).onChange(_622);
}
self.options(_623.parentNode).onChange(_622);
}
}
}
},_offsetSize:function(_628,type){
if(type=="vertical"||type=="height"){
return _628.offsetHeight;
}else{
return _628.offsetWidth;
}
},onEmptyHover:function(_62a,_62b,_62c){
var _62d=_62a.parentNode;
var self=MochiKit.Sortable;
var _62f=self.options(_62b);
if(!MochiKit.DOM.isParent(_62b,_62a)){
var _630;
var _631=self.findElements(_62b,{tag:_62f.tag,only:_62f.only});
var _632=null;
if(_631){
var _633=self._offsetSize(_62b,_62f.overlap)*(1-_62c);
for(_630=0;_630<_631.length;_630+=1){
if(_633-self._offsetSize(_631[_630],_62f.overlap)>=0){
_633-=self._offsetSize(_631[_630],_62f.overlap);
}else{
if(_633-(self._offsetSize(_631[_630],_62f.overlap)/2)>=0){
_632=_630+1<_631.length?_631[_630+1]:null;
break;
}else{
_632=_631[_630];
break;
}
}
}
}
_62b.insertBefore(_62a,_632);
self.options(_62d).onChange(_62a);
_62f.onChange(_62a);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_635,_636){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _639=self.options(_635.parentNode);
if(_639&&!_639.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _63a=MochiKit.Position.cumulativeOffset(_635);
self._marker.style.left=_63a.x+"px";
self._marker.style.top=_63a.y+"px";
if(_636=="after"){
if(_639.overlap=="horizontal"){
self._marker.style.left=(_63a.x+_635.clientWidth)+"px";
}else{
self._marker.style.top=(_63a.y+_635.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_63b,_63c,_63d){
var self=MochiKit.Sortable;
var _63f=self.findElements(_63b,_63c)||[];
for(var i=0;i<_63f.length;++i){
var _641=_63f[i].id.match(_63c.format);
if(!_641){
continue;
}
var _642={id:encodeURIComponent(_641?_641[1]:null),element:_63b,parent:_63d,children:[],position:_63d.children.length,container:self._findChildrenElement(_63f[i],_63c.treeTag.toUpperCase())};
if(_642.container){
self._tree(_642.container,_63c,_642);
}
_63d.children.push(_642);
}
return _63d;
},_findChildrenElement:function(_643,_644){
if(_643&&_643.hasChildNodes){
_644=_644.toUpperCase();
for(var i=0;i<_643.childNodes.length;++i){
if(_643.childNodes[i].tagName.toUpperCase()==_644){
return _643.childNodes[i];
}
}
}
return null;
},tree:function(_646,_647){
_646=MochiKit.DOM.getElement(_646);
var _648=MochiKit.Sortable.options(_646);
_647=MochiKit.Base.update({tag:_648.tag,treeTag:_648.treeTag,only:_648.only,name:_646.id,format:_648.format},_647||{});
var root={id:null,parent:null,children:new Array,container:_646,position:0};
return MochiKit.Sortable._tree(_646,_647,root);
},setSequence:function(_64a,_64b,_64c){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_64a=MochiKit.DOM.getElement(_64a);
_64c=b.update(self.options(_64a),_64c||{});
var _64f={};
b.map(function(n){
var m=n.id.match(_64c.format);
if(m){
_64f[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_64a,_64c));
b.map(function(_652){
var n=_64f[_652];
if(n){
n[1].appendChild(n[0]);
delete _64f[_652];
}
},_64b);
},_constructIndex:function(node){
var _655="";
do{
if(node.id){
_655="["+node.position+"]"+_655;
}
}while((node=node.parent)!=null);
return _655;
},sequence:function(_656,_657){
_656=MochiKit.DOM.getElement(_656);
var self=MochiKit.Sortable;
var _657=MochiKit.Base.update(self.options(_656),_657||{});
return MochiKit.Base.map(function(item){
return item.id.match(_657.format)?item.id.match(_657.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_656,_657)||[]));
},serialize:function(_65a,_65b){
_65a=MochiKit.DOM.getElement(_65a);
var self=MochiKit.Sortable;
_65b=MochiKit.Base.update(self.options(_65a),_65b||{});
var name=encodeURIComponent(_65b.name||_65a.id);
if(_65b.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_65a,_65b).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_65a,_65b)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Base._deps("Style",["Base","DOM"]);
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setStyle","setOpacity","getStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions","getViewportPosition","Dimensions","Coordinates"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_667){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_667=MochiKit.Base.camelize(_667);
if(!elem||elem==d){
return undefined;
}
if(_667=="opacity"&&elem.filters){
var _66a=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_66a&&_66a[1]){
return parseFloat(_66a[1])/100;
}
return 1;
}
var _66b=elem.style?elem.style[_667]:null;
if(!_66b){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_667=_667.replace(/([A-Z])/g,"-$1").toLowerCase();
_66b=css?css.getPropertyValue(_667):null;
}else{
if(elem.currentStyle){
_66b=elem.currentStyle[_667];
}
}
}
if(_667=="opacity"){
_66b=parseFloat(_66b);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.find(["left","top","right","bottom"],_667)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_66b="auto";
}
}
return _66b=="auto"?null:_66b;
},setStyle:function(elem,_66e){
elem=MochiKit.DOM.getElement(elem);
for(var name in _66e){
if(name=="opacity"){
MochiKit.Style.setOpacity(elem,_66e[name]);
}else{
elem.style[MochiKit.Base.camelize(name)]=_66e[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _673=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_673?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_675){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode===null||self.getStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _67a=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
return c;
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_67a=elem.offsetParent;
if(_67a!=elem){
while(_67a){
c.x+=_67a.offsetLeft;
c.y+=_67a.offsetTop;
_67a=_67a.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_675)!="undefined"){
_675=arguments.callee(_675);
if(_675){
c.x-=(_675.x||0);
c.y-=(_675.y||0);
}
}
if(elem.parentNode){
_67a=elem.parentNode;
}else{
_67a=null;
}
while(_67a){
var _67f=_67a.tagName.toUpperCase();
if(_67f==="BODY"||_67f==="HTML"){
break;
}
var disp=self.getStyle(_67a,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_67a.scrollLeft;
c.y-=_67a.scrollTop;
}
if(_67a.parentNode){
_67a=_67a.parentNode;
}else{
_67a=null;
}
}
return c;
},setElementPosition:function(elem,_682,_683){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_683)=="undefined"){
_683="px";
}
var _684={};
var _685=MochiKit.Base.isUndefinedOrNull;
if(!_685(_682.x)){
_684["left"]=_682.x+_683;
}
if(!_685(_682.y)){
_684["top"]=_682.y+_683;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_684});
},getElementDimensions:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp!="none"&&disp!==""&&typeof (disp)!="undefined"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _68b=s.visibility;
var _68c=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _68d=elem.offsetWidth;
var _68e=elem.offsetHeight;
s.display="none";
s.position=_68c;
s.visibility=_68b;
return new self.Dimensions(_68d,_68e);
},setElementDimensions:function(elem,_690,_691){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_691)=="undefined"){
_691="px";
}
var _692={};
var _693=MochiKit.Base.isUndefinedOrNull;
if(!_693(_690.w)){
_692["width"]=_690.w+_691;
}
if(!_693(_690.h)){
_692["height"]=_690.h+_691;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_692});
},setDisplayForElement:function(_694,_695){
var _696=MochiKit.Base.extend(null,arguments,1);
var _697=MochiKit.DOM.getElement;
for(var i=0;i<_696.length;i++){
_695=_697(_696[i]);
if(_695){
_695.style.display=_694;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
MochiKit.Base._deps("Test",["Base"]);
MochiKit.Test.NAME="MochiKit.Test";
MochiKit.Test.VERSION="1.4";
MochiKit.Test.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Test.toString=function(){
return this.__repr__();
};
MochiKit.Test.EXPORT=["runTests"];
MochiKit.Test.EXPORT_OK=[];
MochiKit.Test.runTests=function(obj){
if(typeof (obj)=="string"){
obj=JSAN.use(obj);
}
var _6a2=new MochiKit.Test.Suite();
_6a2.run(obj);
};
MochiKit.Test.Suite=function(){
this.testIndex=0;
MochiKit.Base.bindMethods(this);
};
MochiKit.Test.Suite.prototype={run:function(obj){
try{
obj(this);
}
catch(e){
this.traceback(e);
}
},traceback:function(e){
var _6a5=MochiKit.Iter.sorted(MochiKit.Base.items(e));
print("not ok "+this.testIndex+" - Error thrown");
for(var i=0;i<_6a5.length;i++){
var kv=_6a5[i];
if(kv[0]=="stack"){
kv[1]=kv[1].split(/\n/)[0];
}
this.print("# "+kv.join(": "));
}
},print:function(s){
print(s);
},is:function(got,_6aa,_6ab){
var res=1;
var msg=null;
try{
res=MochiKit.Base.compare(got,_6aa);
}
catch(e){
msg="Can not compare "+typeof (got)+":"+typeof (_6aa);
}
if(res){
msg="Expected value did not compare equal";
}
if(!res){
return this.testResult(true,_6ab);
}
return this.testResult(false,_6ab,[[msg],["got:",got],["expected:",_6aa]]);
},testResult:function(pass,msg,_6b0){
this.testIndex+=1;
if(pass){
this.print("ok "+this.testIndex+" - "+msg);
return;
}
this.print("not ok "+this.testIndex+" - "+msg);
if(_6b0){
for(var i=0;i<_6b0.length;i++){
this.print("# "+_6b0[i].join(" "));
}
}
},isDeeply:function(got,_6b3,_6b4){
var m=MochiKit.Base;
var res=1;
try{
res=m.compare(got,_6b3);
}
catch(e){
}
if(res===0){
return this.ok(true,_6b4);
}
var gk=m.keys(got);
var ek=m.keys(_6b3);
gk.sort();
ek.sort();
if(m.compare(gk,ek)){
var cmp={};
var i;
for(i=0;i<gk.length;i++){
cmp[gk[i]]="got";
}
for(i=0;i<ek.length;i++){
if(ek[i] in cmp){
delete cmp[ek[i]];
}else{
cmp[ek[i]]="expected";
}
}
var _6bb=m.keys(cmp);
_6bb.sort();
var _6bc=[];
var _6bd=[];
while(_6bb.length){
var k=_6bb.shift();
if(k in Object.prototype){
continue;
}
(cmp[k]=="got"?_6bc:_6bd).push(k);
}
}
return this.testResult((!res),msg,(msg?[["got:",got],["expected:",_6b3]]:undefined));
},ok:function(res,_6c0){
return this.testResult(res,_6c0);
}};
MochiKit.Test.__new__=function(){
var m=MochiKit.Base;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Test.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Test);
MochiKit.Base._deps("Visual",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.4";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_6c3){
e=MochiKit.DOM.getElement(e);
this._setOptions(_6c3);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _6c4=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_6c4=C.fromBackground(e);
}else{
if(!(_6c4 instanceof C)){
_6c4=C.fromString(_6c4);
}
}
this.isTransparent=(_6c4.asRGB().a<=0);
var _6c6=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_6c6=C.fromBackground(e.offsetParent);
}else{
if(!(_6c6 instanceof C)){
_6c6=C.fromString(_6c6);
}
}
this._roundCornersImpl(e,_6c4,_6c6);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _6c8=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _6ca=doc.defaultView.getComputedStyle(e,null);
if(typeof (_6ca)==="undefined"||_6ca===null){
return e;
}
var _6cb=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_6ca.getPropertyValue("padding-top"),marginRight:_6ca.getPropertyValue("padding-right"),marginBottom:_6ca.getPropertyValue("padding-bottom"),marginLeft:_6ca.getPropertyValue("padding-left"),padding:"0px"}});
_6cb.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_6cb);
return e;
},_roundCornersImpl:function(e,_6cd,_6ce){
if(this.options.border){
this._renderBorder(e,_6ce);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_6cd,_6ce);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_6cd,_6ce);
}
},_renderBorder:function(el,_6d0){
var _6d1="1px solid "+this._borderColor(_6d0);
var _6d2="border-left: "+_6d1;
var _6d3="border-right: "+_6d1;
var _6d4="style='"+_6d2+";"+_6d3+"'";
el.innerHTML="<div "+_6d4+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_6d6,_6d7){
var _6d8=this._createCorner(_6d7);
for(var i=0;i<this.options.numSlices;i++){
_6d8.appendChild(this._createCornerSlice(_6d6,_6d7,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_6d8,el.firstChild);
},_roundBottomCorners:function(el,_6db,_6dc){
var _6dd=this._createCorner(_6dc);
for(var i=(this.options.numSlices-1);i>=0;i--){
_6dd.appendChild(this._createCornerSlice(_6db,_6dc,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_6dd);
},_createCorner:function(_6df){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_6df.toString()}});
},_createCornerSlice:function(_6e1,_6e2,n,_6e4){
var _6e5=MochiKit.DOM.SPAN();
var _6e6=_6e5.style;
_6e6.backgroundColor=_6e1.toString();
_6e6.display="block";
_6e6.height="1px";
_6e6.overflow="hidden";
_6e6.fontSize="1px";
var _6e7=this._borderColor(_6e1,_6e2);
if(this.options.border&&n===0){
_6e6.borderTopStyle="solid";
_6e6.borderTopWidth="1px";
_6e6.borderLeftWidth="0px";
_6e6.borderRightWidth="0px";
_6e6.borderBottomWidth="0px";
_6e6.height="0px";
_6e6.borderColor=_6e7.toString();
}else{
if(_6e7){
_6e6.borderColor=_6e7.toString();
_6e6.borderStyle="solid";
_6e6.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_6e6.height="2px";
}
this._setMargin(_6e5,n,_6e4);
this._setBorder(_6e5,n,_6e4);
return _6e5;
},_setOptions:function(_6e8){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_6e8);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _6e9=this.options.corners;
if(this._hasString(_6e9,"all","top")){
return "";
}
var _6ea=(_6e9.indexOf("tl")!=-1);
var _6eb=(_6e9.indexOf("tr")!=-1);
if(_6ea&&_6eb){
return "";
}
if(_6ea){
return "left";
}
if(_6eb){
return "right";
}
return "";
},_whichSideBottom:function(){
var _6ec=this.options.corners;
if(this._hasString(_6ec,"all","bottom")){
return "";
}
var _6ed=(_6ec.indexOf("bl")!=-1);
var _6ee=(_6ec.indexOf("br")!=-1);
if(_6ed&&_6ee){
return "";
}
if(_6ed){
return "left";
}
if(_6ee){
return "right";
}
return "";
},_borderColor:function(_6ef,_6f0){
if(_6ef=="transparent"){
return _6f0;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _6f0.blendedColor(_6ef);
}
}
}
return "";
},_setMargin:function(el,n,_6f3){
var _6f4=this._marginSize(n)+"px";
var _6f5=(_6f3=="top"?this._whichSideTop():this._whichSideBottom());
var _6f6=el.style;
if(_6f5=="left"){
_6f6.marginLeft=_6f4;
_6f6.marginRight="0px";
}else{
if(_6f5=="right"){
_6f6.marginRight=_6f4;
_6f6.marginLeft="0px";
}else{
_6f6.marginLeft=_6f4;
_6f6.marginRight=_6f4;
}
}
},_setBorder:function(el,n,_6f9){
var _6fa=this._borderSize(n)+"px";
var _6fb=(_6f9=="top"?this._whichSideTop():this._whichSideBottom());
var _6fc=el.style;
if(_6fb=="left"){
_6fc.borderLeftWidth=_6fa;
_6fc.borderRightWidth="0px";
}else{
if(_6fb=="right"){
_6fc.borderRightWidth=_6fa;
_6fc.borderLeftWidth="0px";
}else{
_6fc.borderLeftWidth=_6fa;
_6fc.borderRightWidth=_6fa;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _6ff=[1,0];
return _6ff[n];
}else{
if(o.compact){
var _700=[2,1];
return _700[n];
}else{
if(o.blend){
var _701=[3,2,1,0];
return _701[n];
}else{
var _702=[5,3,2,1];
return _702[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _705;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_705=[1,0];
}else{
if(o.blend){
_705=[2,1,1,1];
}else{
if(o.border){
_705=[0,2,0,0];
}else{
if(this.isTransparent){
_705=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _705[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_70a){
new MochiKit.Visual._RoundCorners(e,_70a);
};
MochiKit.Visual.roundClass=function(_70b,_70c,_70d){
var _70e=MochiKit.DOM.getElementsByTagAndClassName(_70b,_70c);
for(var i=0;i<_70e.length;i++){
MochiKit.Visual.roundElement(_70e[i],_70d);
}
};
MochiKit.Visual.tagifyText=function(_710,_711){
_711=_711||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_711+=";zoom:1";
}
_710=MochiKit.DOM.getElement(_710);
var ma=MochiKit.Base.map;
ma(function(_713){
if(_713.nodeType==3){
ma(function(_714){
_710.insertBefore(MochiKit.DOM.SPAN({style:_711},_714==" "?String.fromCharCode(160):_714),_713);
},_713.nodeValue.split(""));
MochiKit.DOM.removeElement(_713);
}
},_710.childNodes);
};
MochiKit.Visual.forceRerendering=function(_715){
try{
_715=MochiKit.DOM.getElement(_715);
var n=document.createTextNode(" ");
_715.appendChild(n);
_715.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_717,_718,_719){
_719=MochiKit.Base.update({speed:0.1,delay:0},_719);
var _71a=_719.delay;
var _71b=0;
MochiKit.Base.map(function(_71c){
_719.delay=_71b*_719.speed+_71a;
new _718(_71c,_719);
_71b+=1;
},_717);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_71d,_71e,_71f){
_71d=MochiKit.DOM.getElement(_71d);
_71e=(_71e||"appear").toLowerCase();
_71f=MochiKit.Base.update({queue:{position:"end",scope:(_71d.id||"global"),limit:1}},_71f);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_71d,"display")!="none"?v.PAIRS[_71e][1]:v.PAIRS[_71e][0]](_71d,_71f);
};
MochiKit.Visual.Transitions={};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return (-Math.cos(pos*Math.PI)/2)+0.5;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return ((-Math.cos(pos*Math.PI)/4)+0.75)+Math.random()/4;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return (-Math.cos(pos*Math.PI*(9*pos))/2)+0.5;
};
MochiKit.Visual.Transitions.pulse=function(pos,_727){
if(!_727){
return (Math.floor(pos*10)%2===0?(pos*10-Math.floor(pos*10)):1-(pos*10-Math.floor(pos*10)));
}
return (Math.round((pos%(1/_727))*_727)==0?((pos*_727*2)-Math.floor(pos*_727*2)):1-((pos*_727*2)-Math.floor(pos*_727*2)));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_72b){
var _72c=new Date().getTime();
var _72d=(typeof (_72b.options.queue)=="string")?_72b.options.queue:_72b.options.queue.position;
var ma=MochiKit.Base.map;
switch(_72d){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_72b.finishOn;
e.finishOn+=_72b.finishOn;
}
},this.effects);
break;
case "end":
var _730;
ma(function(e){
var i=e.finishOn;
if(i>=(_730||i)){
_730=i;
}
},this.effects);
_72c=_730||_72c;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
}
_72b.startOn+=_72c;
_72b.finishOn+=_72c;
if(!_72b.options.queue.limit||this.effects.length<_72b.options.queue.limit){
this.effects.push(_72b);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_735){
return setInterval(func,_735);
},remove:function(_736){
this.effects=MochiKit.Base.filter(function(e){
return e!=_736;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_738){
clearInterval(_738);
},loop:function(){
var _739=new Date().getTime();
MochiKit.Base.map(function(_73a){
_73a.loop(_739);
},this.effects);
}});
MochiKit.Visual.Queues={instances:{},get:function(_73b){
if(typeof (_73b)!="string"){
return _73b;
}
if(!this.instances[_73b]){
this.instances[_73b]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_73b];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.DefaultOptions={transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_73c){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_73c,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_73e){
if(_73e>=this.startOn){
if(_73e>=this.finishOn){
return this.finalize();
}
var pos=(_73e-this.startOn)/(this.finishOn-this.startOn);
var _740=Math.round(pos*this.options.fps*this.options.duration);
if(_740>this.currentFrame){
this.render(pos);
this.currentFrame=_740;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
if(this.options.transition){
pos=this.options.transition(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_742){
},event:function(_743){
if(this.options[_743+"Internal"]){
this.options[_743+"Internal"](this);
}
if(this.options[_743]){
this.options[_743](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_744,_745){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_744,_745);
}
this.__init__(_744,_745);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_747,_748){
this.effects=_747||[];
this.start(_748);
},update:function(_749){
MochiKit.Base.map(function(_74a){
_74a.render(_749);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_74b){
_74b.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_74c,_74d){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_74c,_74d);
}
this.__init__(_74c,_74d);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_74f,_750){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_74f);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_750=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_750);
this.start(_750);
},update:function(_753){
MochiKit.Style.setStyle(this.element,{"opacity":_753});
}});
MochiKit.Visual.Move=function(_754,_755){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_754,_755);
}
this.__init__(_754,_755);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_757,_758){
this.element=MochiKit.DOM.getElement(_757);
_758=MochiKit.Base.update({x:0,y:0,mode:"relative"},_758);
this.start(_758);
},setup:function(){
MochiKit.DOM.makePositioned(this.element);
var s=this.element.style;
var _75a=s.visibility;
var _75b=s.display;
if(_75b=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_75b=="none"){
s.visibility=_75a;
s.display=_75b;
}
},update:function(_75c){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_75c+this.originalLeft)+"px",top:Math.round(this.options.y*_75c+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_75d,_75e,_75f){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_75d,_75e,_75f);
}
this.__init__(_75d,_75e,_75f);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_761,_762,_763){
this.element=MochiKit.DOM.getElement(_761);
_763=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_762},_763);
this.start(_763);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _767=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_768){
if(_767.indexOf(_768)>0){
this.fontSize=parseFloat(_767);
this.fontSizeType=_768;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_769){
var _76a=(this.options.scaleFrom/100)+(this.factor*_769);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_76a+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_76a,this.dims[1]*_76a);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_76b,_76c){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_76c)+"px";
}
if(this.options.scaleY){
d.height=r(_76b)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_76b-this.dims[0])/2;
var _770=(_76c-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_770+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_770+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_771,_772){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_771,_772);
}
this.__init__(_771,_772);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_774,_775){
this.element=MochiKit.DOM.getElement(_774);
_775=MochiKit.Base.update({startcolor:"#ffff99"},_775);
this.start(_775);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_77a){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_77a));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_77d,_77e){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_77d,_77e);
}
this.__init__(_77d,_77e);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_780,_781){
this.element=MochiKit.DOM.getElement(_780);
this.start(_781);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _783=p.cumulativeOffset(this.element);
if(this.options.offset){
_783.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_783.y>max?max:_783.y)-this.scrollStart;
},update:function(_785){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_785*this.delta));
}});
MochiKit.Visual.CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_787,_788){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_787,_788);
}
this.__init__(_787,_788);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_78a,_78b){
this.element=MochiKit.DOM.getElement(_78a);
this.start(_78b);
},setup:function(){
var b=MochiKit.Base;
var _78d=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _78e,unit;
for(var s in _78d){
_78e=_78d[s];
s=b.camelize(s);
if(MochiKit.Visual.CSS_LENGTH.test(_78e)){
var _791=_78e.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_78e=parseFloat(_791[1]);
unit=(_791.length==3)?_791[2]:null;
this.styleEnd[s]=_78e;
this.units[s]=unit;
_78e=MochiKit.Style.getStyle(this.element,s);
_791=_78e.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_78e=parseFloat(_791[1]);
this.styleStart[s]=_78e;
}else{
var c=MochiKit.Color.Color;
_78e=c.fromString(_78e);
if(_78e){
this.units[s]="color";
this.styleEnd[s]=_78e.toHexString();
_78e=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_78e).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}
}
},update:function(_795){
var _796;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _799=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_799[i]+(end[i]-_799[i])*_795));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_796=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_795*1000)/1000+this.units[s];
this.element.style[s]=_796;
}
}
}});
MochiKit.Visual.fade=function(_79c,_79d){
var s=MochiKit.Style;
var _79f=s.getStyle(_79c,"opacity");
_79d=MochiKit.Base.update({from:s.getStyle(_79c,"opacity")||1,to:0,afterFinishInternal:function(_7a0){
if(_7a0.options.to!==0){
return;
}
s.hideElement(_7a0.element);
s.setStyle(_7a0.element,{"opacity":_79f});
}},_79d);
return new MochiKit.Visual.Opacity(_79c,_79d);
};
MochiKit.Visual.appear=function(_7a1,_7a2){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_7a2=MochiKit.Base.update({from:(s.getStyle(_7a1,"display")=="none"?0:s.getStyle(_7a1,"opacity")||0),to:1,afterFinishInternal:function(_7a5){
v.forceRerendering(_7a5.element);
},beforeSetupInternal:function(_7a6){
s.setStyle(_7a6.element,{"opacity":_7a6.options.from});
s.showElement(_7a6.element);
}},_7a2);
return new v.Opacity(_7a1,_7a2);
};
MochiKit.Visual.puff=function(_7a7,_7a8){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_7a7=MochiKit.DOM.getElement(_7a7);
var _7ab={position:s.getStyle(_7a7,"position"),top:_7a7.style.top,left:_7a7.style.left,width:_7a7.style.width,height:_7a7.style.height,opacity:s.getStyle(_7a7,"opacity")};
_7a8=MochiKit.Base.update({beforeSetupInternal:function(_7ac){
MochiKit.Position.absolutize(_7ac.effects[0].element);
},afterFinishInternal:function(_7ad){
s.hideElement(_7ad.effects[0].element);
s.setStyle(_7ad.effects[0].element,_7ab);
},scaleContent:true,scaleFromCenter:true},_7a8);
return new v.Parallel([new v.Scale(_7a7,200,{sync:true,scaleFromCenter:_7a8.scaleFromCenter,scaleContent:_7a8.scaleContent,restoreAfterFinish:true}),new v.Opacity(_7a7,{sync:true,to:0})],_7a8);
};
MochiKit.Visual.blindUp=function(_7ae,_7af){
var d=MochiKit.DOM;
_7ae=d.getElement(_7ae);
var _7b1=d.makeClipping(_7ae);
_7af=MochiKit.Base.update({scaleContent:false,scaleX:false,restoreAfterFinish:true,afterFinishInternal:function(_7b2){
MochiKit.Style.hideElement(_7b2.element);
d.undoClipping(_7b2.element,_7b1);
}},_7af);
return new MochiKit.Visual.Scale(_7ae,0,_7af);
};
MochiKit.Visual.blindDown=function(_7b3,_7b4){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7b3=d.getElement(_7b3);
var _7b7=s.getElementDimensions(_7b3);
var _7b8;
_7b4=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7b7.h,originalWidth:_7b7.w},restoreAfterFinish:true,afterSetupInternal:function(_7b9){
_7b8=d.makeClipping(_7b9.element);
s.setStyle(_7b9.element,{height:"0px"});
s.showElement(_7b9.element);
},afterFinishInternal:function(_7ba){
d.undoClipping(_7ba.element,_7b8);
}},_7b4);
return new MochiKit.Visual.Scale(_7b3,100,_7b4);
};
MochiKit.Visual.switchOff=function(_7bb,_7bc){
var d=MochiKit.DOM;
_7bb=d.getElement(_7bb);
var _7be=MochiKit.Style.getStyle(_7bb,"opacity");
var _7bf;
_7bc=MochiKit.Base.update({duration:0.3,scaleFromCenter:true,scaleX:false,scaleContent:false,restoreAfterFinish:true,beforeSetupInternal:function(_7c0){
d.makePositioned(_7c0.element);
_7bf=d.makeClipping(_7c0.element);
},afterFinishInternal:function(_7c1){
MochiKit.Style.hideElement(_7c1.element);
d.undoClipping(_7c1.element,_7bf);
d.undoPositioned(_7c1.element);
MochiKit.Style.setStyle(_7c1.element,{"opacity":_7be});
}},_7bc);
var v=MochiKit.Visual;
return new v.appear(_7bb,{duration:0.4,from:0,transition:v.Transitions.flicker,afterFinishInternal:function(_7c3){
new v.Scale(_7c3.element,1,_7bc);
}});
};
MochiKit.Visual.dropOut=function(_7c4,_7c5){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7c4=d.getElement(_7c4);
var _7c8={top:s.getStyle(_7c4,"top"),left:s.getStyle(_7c4,"left"),opacity:s.getStyle(_7c4,"opacity")};
_7c5=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_7c9){
d.makePositioned(_7c9.effects[0].element);
},afterFinishInternal:function(_7ca){
s.hideElement(_7ca.effects[0].element);
d.undoPositioned(_7ca.effects[0].element);
s.setStyle(_7ca.effects[0].element,_7c8);
}},_7c5);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_7c4,{x:0,y:_7c5.distance,sync:true}),new v.Opacity(_7c4,{sync:true,to:0})],_7c5);
};
MochiKit.Visual.shake=function(_7cc,_7cd){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7cc=d.getElement(_7cc);
_7cd=MochiKit.Base.update({x:-20,y:0,duration:0.05,afterFinishInternal:function(_7d1){
d.undoPositioned(_7d1.element);
s.setStyle(_7d1.element,_7d2);
}},_7cd);
var _7d2={top:s.getStyle(_7cc,"top"),left:s.getStyle(_7cc,"left")};
return new v.Move(_7cc,{x:20,y:0,duration:0.05,afterFinishInternal:function(_7d3){
new v.Move(_7d3.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_7d4){
new v.Move(_7d4.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_7d5){
new v.Move(_7d5.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_7d6){
new v.Move(_7d6.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_7d7){
new v.Move(_7d7.element,_7cd);
}});
}});
}});
}});
}});
};
MochiKit.Visual.slideDown=function(_7d8,_7d9){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7d8=d.getElement(_7d8);
if(!_7d8.firstChild){
throw "MochiKit.Visual.slideDown must be used on a element with a child";
}
d.removeEmptyTextNodes(_7d8);
var _7dd=s.getStyle(_7d8.firstChild,"bottom")||0;
var _7de=s.getElementDimensions(_7d8);
var _7df;
_7d9=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7de.h,originalWidth:_7de.w},restoreAfterFinish:true,afterSetupInternal:function(_7e0){
d.makePositioned(_7e0.element);
d.makePositioned(_7e0.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7e0.element,{top:""});
}
_7df=d.makeClipping(_7e0.element);
s.setStyle(_7e0.element,{height:"0px"});
s.showElement(_7e0.element);
},afterUpdateInternal:function(_7e1){
s.setStyle(_7e1.element.firstChild,{bottom:(_7e1.dims[0]-_7e1.element.clientHeight)+"px"});
},afterFinishInternal:function(_7e2){
d.undoClipping(_7e2.element,_7df);
if(/MSIE/.test(navigator.userAgent)){
d.undoPositioned(_7e2.element);
d.undoPositioned(_7e2.element.firstChild);
}else{
d.undoPositioned(_7e2.element.firstChild);
d.undoPositioned(_7e2.element);
}
s.setStyle(_7e2.element.firstChild,{bottom:_7dd});
}},_7d9);
return new MochiKit.Visual.Scale(_7d8,100,_7d9);
};
MochiKit.Visual.slideUp=function(_7e3,_7e4){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7e3=d.getElement(_7e3);
if(!_7e3.firstChild){
throw "MochiKit.Visual.slideUp must be used on a element with a child";
}
d.removeEmptyTextNodes(_7e3);
var _7e8=s.getStyle(_7e3.firstChild,"bottom");
var _7e9;
_7e4=b.update({scaleContent:false,scaleX:false,scaleMode:"box",scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_7ea){
d.makePositioned(_7ea.element);
d.makePositioned(_7ea.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7ea.element,{top:""});
}
_7e9=d.makeClipping(_7ea.element);
s.showElement(_7ea.element);
},afterUpdateInternal:function(_7eb){
s.setStyle(_7eb.element.firstChild,{bottom:(_7eb.dims[0]-_7eb.element.clientHeight)+"px"});
},afterFinishInternal:function(_7ec){
s.hideElement(_7ec.element);
d.undoClipping(_7ec.element,_7e9);
d.undoPositioned(_7ec.element.firstChild);
d.undoPositioned(_7ec.element);
s.setStyle(_7ec.element.firstChild,{bottom:_7e8});
}},_7e4);
return new MochiKit.Visual.Scale(_7e3,0,_7e4);
};
MochiKit.Visual.squish=function(_7ed,_7ee){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var _7f1;
_7ee=b.update({restoreAfterFinish:true,beforeSetupInternal:function(_7f2){
_7f1=d.makeClipping(_7f2.element);
},afterFinishInternal:function(_7f3){
MochiKit.Style.hideElement(_7f3.element);
d.undoClipping(_7f3.element,_7f1);
}},_7ee);
return new MochiKit.Visual.Scale(_7ed,/Opera/.test(navigator.userAgent)?1:0,_7ee);
};
MochiKit.Visual.grow=function(_7f4,_7f5){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7f4=d.getElement(_7f4);
_7f5=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_7f5);
var _7f9={top:_7f4.style.top,left:_7f4.style.left,height:_7f4.style.height,width:_7f4.style.width,opacity:s.getStyle(_7f4,"opacity")};
var dims=s.getElementDimensions(_7f4);
var _7fb,_7fc;
var _7fd,_7fe;
switch(_7f5.direction){
case "top-left":
_7fb=_7fc=_7fd=_7fe=0;
break;
case "top-right":
_7fb=dims.w;
_7fc=_7fe=0;
_7fd=-dims.w;
break;
case "bottom-left":
_7fb=_7fd=0;
_7fc=dims.h;
_7fe=-dims.h;
break;
case "bottom-right":
_7fb=dims.w;
_7fc=dims.h;
_7fd=-dims.w;
_7fe=-dims.h;
break;
case "center":
_7fb=dims.w/2;
_7fc=dims.h/2;
_7fd=-dims.w/2;
_7fe=-dims.h/2;
break;
}
var _7ff=MochiKit.Base.update({beforeSetupInternal:function(_800){
s.setStyle(_800.effects[0].element,{height:"0px"});
s.showElement(_800.effects[0].element);
},afterFinishInternal:function(_801){
d.undoClipping(_801.effects[0].element);
d.undoPositioned(_801.effects[0].element);
s.setStyle(_801.effects[0].element,_7f9);
}},_7f5);
return new v.Move(_7f4,{x:_7fb,y:_7fc,duration:0.01,beforeSetupInternal:function(_802){
s.hideElement(_802.element);
d.makeClipping(_802.element);
d.makePositioned(_802.element);
},afterFinishInternal:function(_803){
new v.Parallel([new v.Opacity(_803.element,{sync:true,to:1,from:0,transition:_7f5.opacityTransition}),new v.Move(_803.element,{x:_7fd,y:_7fe,sync:true,transition:_7f5.moveTransition}),new v.Scale(_803.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_7f5.scaleTransition,scaleContent:_7f5.scaleContent,scaleFromCenter:_7f5.scaleFromCenter,restoreAfterFinish:true})],_7ff);
}});
};
MochiKit.Visual.shrink=function(_804,_805){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_804=d.getElement(_804);
_805=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_805);
var _809={top:_804.style.top,left:_804.style.left,height:_804.style.height,width:_804.style.width,opacity:s.getStyle(_804,"opacity")};
var dims=s.getElementDimensions(_804);
var _80b,_80c;
switch(_805.direction){
case "top-left":
_80b=_80c=0;
break;
case "top-right":
_80b=dims.w;
_80c=0;
break;
case "bottom-left":
_80b=0;
_80c=dims.h;
break;
case "bottom-right":
_80b=dims.w;
_80c=dims.h;
break;
case "center":
_80b=dims.w/2;
_80c=dims.h/2;
break;
}
var _80d;
var _80e=MochiKit.Base.update({beforeStartInternal:function(_80f){
_80d=d.makePositioned(_80f.effects[0].element);
d.makeClipping(_80f.effects[0].element);
},afterFinishInternal:function(_810){
s.hideElement(_810.effects[0].element);
d.undoClipping(_810.effects[0].element,_80d);
d.undoPositioned(_810.effects[0].element);
s.setStyle(_810.effects[0].element,_809);
}},_805);
return new v.Parallel([new v.Opacity(_804,{sync:true,to:0,from:1,transition:_805.opacityTransition}),new v.Scale(_804,/Opera/.test(navigator.userAgent)?1:0,{sync:true,transition:_805.scaleTransition,scaleContent:_805.scaleContent,scaleFromCenter:_805.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_804,{x:_80b,y:_80c,sync:true,transition:_805.moveTransition})],_80e);
};
MochiKit.Visual.pulsate=function(_811,_812){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _816=MochiKit.Style.getStyle(_811,"opacity");
_812=b.update({duration:3,from:0,afterFinishInternal:function(_817){
MochiKit.Style.setStyle(_817.element,{"opacity":_816});
}},_812);
var _818=_812.transition||v.Transitions.sinoidal;
var _819=b.bind(function(pos){
return _818(1-v.Transitions.pulse(pos,_812.pulses));
},_818);
b.bind(_819,_818);
return new v.Opacity(_811,b.update({transition:_819},_812));
};
MochiKit.Visual.fold=function(_81b,_81c){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_81b=d.getElement(_81b);
var _820={top:_81b.style.top,left:_81b.style.left,width:_81b.style.width,height:_81b.style.height};
var _821=d.makeClipping(_81b);
_81c=MochiKit.Base.update({scaleContent:false,scaleX:false,afterFinishInternal:function(_822){
new v.Scale(_81b,1,{scaleContent:false,scaleY:false,afterFinishInternal:function(_823){
s.hideElement(_823.element);
d.undoClipping(_823.element,_821);
s.setStyle(_823.element,_820);
}});
}},_81c);
return new v.Scale(_81b,5,_81c);
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.computedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass","tagifyText","multiple","toggle","Parallel","Opacity","Move","Scale","Highlight","ScrollTo","Morph","fade","appear","puff","blindUp","blindDown","switchOff","dropOut","shake","slideDown","slideUp","squish","grow","shrink","pulsate","fold"];
MochiKit.Visual.EXPORT_OK=["Base","PAIRS"];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);


